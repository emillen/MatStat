(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    237592,       5046]
NotebookOptionsPosition[    225523,       4662]
NotebookOutlinePosition[    225866,       4677]
CellTagsIndexPosition[    225823,       4674]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Project 2 - Distributions",
 FontFamily->"Times New Roman"]], "Title",
 CellChangeTimes->{{3.6883365237665243`*^9, 3.6883365334510736`*^9}, {
  3.688336605068591*^9, 3.688336624396627*^9}, {3.688336877147334*^9, 
  3.688336877211543*^9}, {3.689531919887904*^9, 3.689531926262679*^9}}],

Cell["       Report", "Subtitle",
 CellChangeTimes->{{3.6883366477040377`*^9, 3.688336681980423*^9}}],

Cell[TextData[{
 StyleBox["Emil",
  IgnoreSpellCheck->True],
 " Lengman, emillen@kth.se\nSimon Enerstrand, simonene@kth.se"
}], "Text",
 CellMargins->{{27, 10}, {0, 0}},
 CellChangeTimes->{
  3.688336421059956*^9, {3.688336691860662*^9, 3.6883367156480083`*^9}, {
   3.6883420597172327`*^9, 3.688342061500751*^9}},
 FontFamily->"Times New Roman",
 FontSize->10],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ". Summary"
}], "Section",
 CellChangeTimes->{{3.688336718948107*^9, 3.688336720452073*^9}, {
  3.688336774819894*^9, 3.688336777371758*^9}, {3.68834502411273*^9, 
  3.688345025232695*^9}, {3.6884668618208437`*^9, 3.6884668621312857`*^9}}],

Cell[TextData[{
 "For this project we were handed a module for randomizing numbers from six \
different distributions (",
 StyleBox["randomNumber", "Program"],
 "). We are going to use it to test different distribution models, divided in \
two sub-assignments. "
}], "Text",
 CellChangeTimes->{{3.689531891401449*^9, 3.6895319642555656`*^9}, {
  3.689531998167654*^9, 3.6895320316633663`*^9}, {3.689532232870101*^9, 
  3.689532250854061*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 "  Summary sub-assignment 1"
}], "Subsection",
 CellChangeTimes->{{3.688336971634904*^9, 3.6883369780908213`*^9}, 
   3.688337034234638*^9}],

Cell[CellGroupData[{

Cell["Description", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, 
   3.688339206676055*^9, {3.688343885127437*^9, 3.6883438872876377`*^9}}],

Cell["\<\
For this sub-assignment we are going to use the first (index zero in the \
module) distribution to test three models. We are going to calculate the \
point estimates for the expected value, and standard deviation, for the \
random data. Then we are going to determine see which model fits the random \
data the best. The models are:\
\>", "Text",
 CellChangeTimes->{{3.689532045157538*^9, 3.689532096911127*^9}, {
  3.6895323791892767`*^9, 3.689532391109068*^9}, {3.689541506311454*^9, 
  3.68954152267135*^9}, {3.689541591575204*^9, 3.689541683214943*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"pdf", "(", "x", ")"}], "\[Proportional]", 
    SuperscriptBox["e", 
     RowBox[{
      RowBox[{"-", "a"}], " ", "x"}]]}], ",", 
   RowBox[{"x", "\[GreaterEqual]", "0"}]}], TraditionalForm]], "ItemNumbered"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"pdf", "(", "x", ")"}], "\[Proportional]", 
    RowBox[{"x", " ", 
     SuperscriptBox["e", 
      RowBox[{
       RowBox[{"-", "a"}], " ", "x"}]]}]}], ",", 
   RowBox[{"x", "\[GreaterEqual]", "0"}]}], TraditionalForm]], "ItemNumbered"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"pdf", "(", "x", ")"}], "\[Proportional]", 
    RowBox[{"x", " ", 
     RowBox[{"(", 
      RowBox[{"x", "+", "b"}], ")"}], 
     SuperscriptBox["e", 
      RowBox[{
       RowBox[{"-", "a"}], " ", "x"}]]}]}], ",", 
   RowBox[{"x", "\[GreaterEqual]", "0"}]}], TraditionalForm]], "ItemNumbered"]
}, Open  ]],

Cell["\<\
When we\[CloseCurlyQuote]ve found the most fitting model we are going to \
compute the 95% confidence intervals for the constants in the chosen model. \
\>", "Text",
 CellChangeTimes->{{3.689532138582408*^9, 3.689532207966091*^9}, {
  3.689541487575457*^9, 3.689541493640847*^9}}]
}, Open  ]],

Cell["Result", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, 
   3.688339206676055*^9, {3.688343891055583*^9, 3.688343891703444*^9}, {
   3.689532397013096*^9, 3.689532407013072*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 "  Summary sub-assignment 2"
}], "Subsection",
 CellChangeTimes->{{3.688336983363152*^9, 3.688336984178742*^9}}],

Cell[CellGroupData[{

Cell["Description", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, 
   3.688339206676055*^9, {3.688343885127437*^9, 3.6883438872876377`*^9}}],

Cell["\<\
For this sub-assignment we are going to generate data from all the different \
distributions and determine which distribution model fits the data the best \
for each data set (using the  straight line approach). Then we are going to \
determine the point estimates of the parameters, and compute 95% confidence \
intervals for those parameters.  \
\>", "Text",
 CellChangeTimes->{{3.6895322166794577`*^9, 3.6895323604933043`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Result", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, 
   3.688339206676055*^9, {3.688343891055583*^9, 3.688343891703444*^9}}],

Cell["\<\
These are the resulting distribution models for the data (by index in the \
module):\
\>", "Text",
 CellChangeTimes->{{3.6895324097190104`*^9, 3.689532451885068*^9}}],

Cell[CellGroupData[{

Cell["Exponential distribution", "ItemNumbered",
 CellChangeTimes->{{3.689532679630562*^9, 3.689532686651342*^9}},
 FontSize->14],

Cell["Geometric distribution", "ItemNumbered",
 CellChangeTimes->{{3.689532499542975*^9, 3.689532550468093*^9}, {
  3.689532584156396*^9, 3.689532591276959*^9}},
 FontSize->14],

Cell["Gamma distribution", "ItemNumbered",
 CellChangeTimes->{{3.689532499542975*^9, 3.689532550468093*^9}, {
  3.689532584156396*^9, 3.689532602709022*^9}},
 FontSize->14],

Cell["Normal distribution", "ItemNumbered",
 CellChangeTimes->{{3.689532499542975*^9, 3.689532550468093*^9}, {
  3.689532584156396*^9, 3.689532607652714*^9}},
 FontSize->14],

Cell["Binomial distribution", "ItemNumbered",
 CellChangeTimes->{{3.689532499542975*^9, 3.689532550468093*^9}, {
  3.689532584156396*^9, 3.6895326193637*^9}},
 FontSize->14]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.689530670149267*^9, 3.689530673455567*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ". Distribution parameters"
}], "Section",
 CellChangeTimes->{
  3.688336997194717*^9, {3.68833706627428*^9, 3.6883370739781713`*^9}, {
   3.689530611978314*^9, 3.68953062821533*^9}, {3.689530669046975*^9, 
   3.689530682839226*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Expected value, and standard deviation"
}], "Subsection",
 CellChangeTimes->{{3.688337833284293*^9, 3.6883378387402563`*^9}, {
  3.689530732142811*^9, 3.689530736910651*^9}, {3.689541151753598*^9, 
  3.68954115280941*^9}, {3.689542033756502*^9, 3.6895420645175047`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, 
   3.688339206676055*^9, {3.68954276326412*^9, 3.689542766039865*^9}}],

Cell["\<\
First we will create a list of many random values.Then calculate the expected \
value, and standard deviation. You can use the following formula to calculate \
expected value:\
\>", "Text",
 CellChangeTimes->{{3.689542142648445*^9, 3.689542172803487*^9}, {
  3.689542224971344*^9, 3.689542225235321*^9}, {3.689542768263983*^9, 
  3.689542811711804*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{
   OverscriptBox["x", "_"], "=", 
   RowBox[{
    FractionBox["1", "n"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SubscriptBox["x", "i"]}]}]}],
  FontWeight->"Bold"]], "DisplayFormula",
 CellChangeTimes->{{3.6895422331312237`*^9, 3.689542235331114*^9}, {
   3.689542504746323*^9, 3.6895425115539494`*^9}, 3.6895426290253897`*^9, 
   3.689542678097007*^9}],

Cell["To calculate the standard deviation", "Text",
 CellChangeTimes->{{3.68954223925626*^9, 3.689542269674811*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{"s", "=", 
   SqrtBox[
    RowBox[{
     FractionBox["1", 
      RowBox[{"n", "-", "1"}]], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "i"], "-", 
         OverscriptBox["x", "_"]}], ")"}], "2"]}]}]]}],
  FontWeight->"Bold"]], "DisplayFormula",
 CellChangeTimes->{
  3.689542292631858*^9, {3.6895423463579493`*^9, 3.6895423746905403`*^9}, {
   3.689542473474345*^9, 3.689542516073859*^9}}],

Cell["\<\
Mathematica has built-in function to do that for us, so we used those instead.\
\>", "Text",
 CellChangeTimes->{{3.689542307922647*^9, 3.68954233123452*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, 
   3.688339206676055*^9, {3.689542712089015*^9, 3.6895427125123367`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Once", "[", 
  RowBox[{"Get", "[", 
   RowBox[{"\"\<Project2.m\>\"", ",", "\"\<IX1501\>\""}], "]"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", "=", "1000"}], ";"}]], "Input",
 CellChangeTimes->{{3.689542838507416*^9, 3.689542841351758*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rand", " ", "=", " ", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"0", ",", " ", "n"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.689542826857292*^9, 3.689542855415639*^9}, {
  3.689543612220111*^9, 3.689543613980782*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Mu]", "=", 
  RowBox[{"Mean", "[", "rand", "]"}]}]], "Input",
 CellChangeTimes->{{3.689542725456745*^9, 3.689542731920597*^9}, 
   3.689542858655929*^9}],

Cell[BoxData["5.197593498679902`"], "Output",
 CellChangeTimes->{
  3.689542863249511*^9, 3.689542912739605*^9, 3.689543025747182*^9, 
   3.6895435825872383`*^9, {3.6895436308758507`*^9, 3.689543642521742*^9}, 
   3.689543848334518*^9, 3.689544106353016*^9, {3.689544144412428*^9, 
   3.689544169561483*^9}, {3.689544234166641*^9, 3.689544288866078*^9}, {
   3.6895443202578382`*^9, 3.689544353683655*^9}, {3.6895443942720823`*^9, 
   3.689544407491365*^9}, 3.689544591954623*^9, {3.689544725700815*^9, 
   3.689544760686508*^9}, 3.6895451663735027`*^9, 3.689546426390933*^9, {
   3.68954647905198*^9, 3.689546555181979*^9}, 3.689546598872224*^9, {
   3.689546903303974*^9, 3.689546954104438*^9}, {3.6895470169883413`*^9, 
   3.6895471106442204`*^9}, 3.689547186044783*^9, {3.6895473260686493`*^9, 
   3.689547335748032*^9}, {3.6895473898466187`*^9, 3.6895474037746487`*^9}, 
   3.689547487639367*^9, 3.689547719837453*^9, 3.689547900784041*^9, 
   3.689548062307022*^9, 3.68954822570462*^9, {3.689548282409718*^9, 
   3.689548299760364*^9}, {3.6895484590551558`*^9, 3.689548483570013*^9}, 
   3.689549870516218*^9, {3.689549904377899*^9, 3.689549927511986*^9}, 
   3.689549961605392*^9, 3.689550043230514*^9, {3.689550137920607*^9, 
   3.689550160487719*^9}, 3.689550194668445*^9, {3.689550430036314*^9, 
   3.6895504462392*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sigma]", " ", "=", " ", 
  RowBox[{"StandardDeviation", "[", "rand", "]"}]}]], "Input",
 CellChangeTimes->{{3.689542736924251*^9, 3.6895427494804153`*^9}}],

Cell[BoxData["3.3529002788399236`"], "Output",
 CellChangeTimes->{
  3.6895428632816753`*^9, 3.6895429128313513`*^9, 3.689543025778246*^9, 
   3.689543582617787*^9, {3.689543630960196*^9, 3.6895436426122513`*^9}, 
   3.689543848419615*^9, 3.689544106400235*^9, {3.6895441444507103`*^9, 
   3.6895441696000977`*^9}, {3.689544234197071*^9, 3.6895442888956423`*^9}, {
   3.689544320289385*^9, 3.6895443537151203`*^9}, {3.6895443943068237`*^9, 
   3.689544407530759*^9}, 3.68954459198834*^9, {3.689544725737005*^9, 
   3.689544760722148*^9}, 3.6895451664224863`*^9, 3.689546426438218*^9, {
   3.6895464791455097`*^9, 3.6895465552821007`*^9}, 3.6895465989723988`*^9, {
   3.689546903392358*^9, 3.6895469541896477`*^9}, {3.689547017027128*^9, 
   3.6895471106756153`*^9}, 3.689547186084037*^9, {3.689547326100968*^9, 
   3.689547335785157*^9}, {3.689547389888287*^9, 3.689547403806077*^9}, 
   3.689547487728425*^9, 3.6895477198810377`*^9, 3.689547900815884*^9, 
   3.689548062347662*^9, 3.6895482257446938`*^9, {3.6895482824506693`*^9, 
   3.689548299806511*^9}, {3.68954845910291*^9, 3.6895484836044807`*^9}, 
   3.689549870560741*^9, {3.6895499044548893`*^9, 3.689549927552878*^9}, 
   3.689549961647279*^9, 3.689550043274578*^9, {3.6895501379635468`*^9, 
   3.689550160529656*^9}, 3.68955019471658*^9, {3.689550430103548*^9, 
   3.689550446302227*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Trying models"
}], "Subsection",
 CellChangeTimes->{{3.688337833284293*^9, 3.6883378387402563`*^9}, {
  3.689530732142811*^9, 3.689530736910651*^9}, {3.689541403408222*^9, 
  3.689541403816*^9}, {3.689542929727227*^9, 3.68954293079245*^9}, {
  3.689542962742992*^9, 3.689542965262998*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, 
   3.688339206676055*^9}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"P", 
    RowBox[{"(", "\[CapitalOmega]", ")"}]}], " ", "=", " ", "1"}], 
  TraditionalForm]]]], "Text",
 CellChangeTimes->{3.689541846172804*^9}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"C", "*", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{
      RowBox[{"pd", "(", "x", ")"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}], TraditionalForm]]],
 "= 1, x > 0"
}], "Text",
 CellChangeTimes->{{3.6882217670043726`*^9, 3.6882218004647083`*^9}, {
   3.68822183080496*^9, 3.6882218356972265`*^9}, 3.6882947303798904`*^9, {
   3.6882951383775945`*^9, 3.688295175004483*^9}, {3.68830624783696*^9, 
   3.688306399881089*^9}, {3.6883064708229246`*^9, 3.688306556048299*^9}, {
   3.6883066513402257`*^9, 3.6883066882442403`*^9}, 3.689169394345349*^9, 
   3.6891694647933187`*^9, {3.6891695145565915`*^9, 3.689169514981202*^9}, {
   3.689323007498064*^9, 3.6893230106501584`*^9}, {3.689415786495446*^9, 
   3.6894158615147285`*^9}, {3.689415920319048*^9, 3.689416001347562*^9}, {
   3.6894160381462326`*^9, 3.6894161615465307`*^9}, {3.689416193876233*^9, 
   3.6894162617389393`*^9}, {3.689416388201764*^9, 3.689416388201764*^9}, {
   3.689416422094041*^9, 3.6894165521199036`*^9}, {3.6894167442888823`*^9, 
   3.6894168522941303`*^9}, {3.689416948871025*^9, 3.6894169676844654`*^9}, {
   3.68941702171835*^9, 3.689417087381785*^9}, {3.689417122602254*^9, 
   3.68941720085609*^9}, {3.6894173661803017`*^9, 3.6894173944629297`*^9}, {
   3.6894175912924285`*^9, 3.6894176388103714`*^9}, {3.6894176748746033`*^9, 
   3.6894177035322742`*^9}, {3.6894177502220507`*^9, 
   3.6894177672737403`*^9}, {3.6895254409378815`*^9, 3.689525524968902*^9}, {
   3.689525566967901*^9, 3.6895256356426845`*^9}, {3.689541887285232*^9, 
   3.689541912637052*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, {
  3.688339162508295*^9, 3.688339166187951*^9}, {3.688342470353647*^9, 
  3.6883424708497562`*^9}}],

Cell[CellGroupData[{

Cell["Code used by all models", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533896803755*^9, 3.6895338968119373`*^9}, {3.6895448426920424`*^9, 
  3.689544844851783*^9}, {3.689547256365437*^9, 3.6895472682453413`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sort", "=", 
   RowBox[{"Sort", "[", "rand", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]", "=", 
   RowBox[{"1", "/", "n"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{
     FractionBox["\[CapitalDelta]", "2"], "+", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", 
       RowBox[{"1", "-", "\[CapitalDelta]"}], ",", "\[CapitalDelta]"}], 
      "]"}]}], "//", "N"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6895021356594806`*^9, 3.6895022124449425`*^9}, {
   3.689502260720151*^9, 3.6895022996199045`*^9}, {3.6895023508288116`*^9, 
   3.689502389690081*^9}, {3.6895028158879547`*^9, 3.68950281977877*^9}, 
   3.689503221949534*^9, {3.6895033164541397`*^9, 3.6895033443617506`*^9}, {
   3.689503390242427*^9, 3.6895034789498906`*^9}, 3.68950351476412*^9, {
   3.6895035980112934`*^9, 3.689503600214526*^9}, 3.6895043778827095`*^9, 
   3.689504472462247*^9, 3.689504603619569*^9, {3.6895046601992064`*^9, 
   3.6895046630274696`*^9}, {3.6895050792343597`*^9, 3.689505079406242*^9}, {
   3.689505240886032*^9, 3.6895052436830425`*^9}, {3.689505672198988*^9, 
   3.689505674199063*^9}, {3.689505710575859*^9, 3.689505712310317*^9}, {
   3.6895058632925463`*^9, 3.6895058661520386`*^9}, {3.6895059041382885`*^9, 
   3.689505935155425*^9}, {3.689506422002355*^9, 3.6895064744267817`*^9}, {
   3.6895065269449854`*^9, 3.6895065479928646`*^9}, {3.6895065812165613`*^9, 
   3.689506592935882*^9}, {3.6895068447224407`*^9, 3.6895068472850876`*^9}, {
   3.6895071213173513`*^9, 3.6895071641944184`*^9}, {3.6895450387072897`*^9, 
   3.689545045971064*^9}, {3.68954653634658*^9, 3.689546550905695*^9}, 
   3.689546991147743*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"lineplot", " ", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"x", ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model 1", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533896803755*^9, 3.6895338968119373`*^9}, {3.6895448426920424`*^9, 
  3.689544844851783*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", " ", 
  RowBox[{"c", "/.", 
   RowBox[{
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"c", "*", 
          RowBox[{"E", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "a"}], "*", "x"}], ")"}]}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "0", ",", " ", "\[Infinity]"}], "}"}]}], 
        "]"}], " ", "\[Equal]", " ", "1"}], ",", " ", "c"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.689543798906279*^9, 3.689543889035437*^9}, {
   3.689544024177054*^9, 3.689544164872308*^9}, {3.6895442216723948`*^9, 
   3.689544285759673*^9}, 3.689544339671418*^9, 3.689544387304167*^9, {
   3.6895504186837177`*^9, 3.689550422427335*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{"a", ",", 
   RowBox[{
    RowBox[{"Re", "[", "a", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.6895443426690063`*^9, 3.6895443539313*^9}, {
   3.689544394554863*^9, 3.689544407805244*^9}, 3.6895445922102413`*^9, {
   3.6895447258107347`*^9, 3.689544761032374*^9}, 3.689545166810231*^9, 
   3.6895464268405247`*^9, {3.689546479556724*^9, 3.689546555699821*^9}, 
   3.689546599393282*^9, {3.689546903802494*^9, 3.689546954603397*^9}, {
   3.6895470173545218`*^9, 3.689547111003703*^9}, 3.689547186418198*^9, {
   3.689547326422887*^9, 3.689547336119972*^9}, {3.689547390264138*^9, 
   3.6895474041482887`*^9}, 3.689547488159108*^9, 3.689547720378695*^9, 
   3.6895479011673117`*^9, 3.6895480629091797`*^9, 3.689548226106571*^9, {
   3.689548282782243*^9, 3.689548300202447*^9}, {3.689548459516461*^9, 
   3.689548484002405*^9}, 3.689549870952668*^9, {3.6895499049165983`*^9, 
   3.689549927997404*^9}, 3.689549962007381*^9, 3.689550043670045*^9, {
   3.6895501383342037`*^9, 3.6895501609012337`*^9}, 3.689550195079846*^9, {
   3.689550430515377*^9, 3.6895504468522663`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"^", "We"}], " ", "can", " ", "see", " ", "that", " ", "we", " ", 
   "can", " ", 
   RowBox[{"replace", " ", "'"}], 
   RowBox[{"c", "'"}], " ", 
   RowBox[{"with", " ", "'"}], 
   RowBox[{"a", "'"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.689547192975294*^9, 3.6895472151592484`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"a", " ", "/.", " ", 
    RowBox[{
     RowBox[{"NSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Integrate", "[", 
           RowBox[{
            RowBox[{"x", "*", "a", "*", 
             RowBox[{"E", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "a"}], "*", "x"}], ")"}]}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "0", " ", ",", " ", "\[Infinity]"}], 
             "}"}]}], "]"}], " ", "\[Equal]", " ", "\[Mu]"}], " ", "&&", " ", 
         
         RowBox[{"a", " ", "\[GreaterEqual]", " ", "0"}]}], "}"}], ",", " ", 
       "a"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6895444940898943`*^9, 3.6895445818219852`*^9}, {
   3.689544631862047*^9, 3.6895447479970837`*^9}, 3.689547180039057*^9, {
   3.689550410779364*^9, 3.689550414363288*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdf", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"a", " ", "*", " ", 
   RowBox[{"E", "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "a"}], "*", "x"}], ")"}], "  ", 
    RowBox[{"(*", 
     RowBox[{"The", " ", "model"}], "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.689544782304646*^9, 3.6895447960364532`*^9}, {
  3.689544861924007*^9, 3.689544865052135*^9}, {3.689544904499917*^9, 
  3.689544937883894*^9}, {3.689550407602914*^9, 3.689550408139325*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distribution", "=", 
  RowBox[{"ProbabilityDistribution", "[", 
   RowBox[{
    RowBox[{"pdf", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.689506505568923*^9, {3.689507139302579*^9, 3.6895071483811483`*^9}, {
   3.6895071804139814`*^9, 3.6895071907147093`*^9}, {3.689507267843452*^9, 
   3.689507269796689*^9}, {3.6895073409095106`*^9, 3.6895073466285596`*^9}, 
   3.6895078930717382`*^9, {3.689508067943055*^9, 3.689508093041513*^9}, 
   3.689508248299082*^9, {3.6895105329935346`*^9, 3.6895105353567033`*^9}, {
   3.68954688925823*^9, 3.689546898984172*^9}}],

Cell[BoxData[
 RowBox[{"ProbabilityDistribution", "[", 
  RowBox[{
   RowBox[{"0.19239673134383875`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.19239673134383875`"}], " ", "\[FormalX]"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalX]", ",", "0", ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.689546927148818*^9, 3.689546955714987*^9}, {
   3.689547018331625*^9, 3.689547111886224*^9}, 3.689547187360375*^9, {
   3.6895473273112793`*^9, 3.689547337056299*^9}, {3.6895473911829987`*^9, 
   3.689547405040764*^9}, 3.689547489160904*^9, 3.689547721083935*^9, 
   3.689547902128811*^9, 3.689548064150709*^9, 3.689548227077016*^9, {
   3.689548283490898*^9, 3.6895483012053747`*^9}, {3.689548460505237*^9, 
   3.689548484975729*^9}, 3.689549871965357*^9, {3.689549906029483*^9, 
   3.689549928968128*^9}, 3.6895499629349337`*^9, 3.6895500447465153`*^9, {
   3.689550139255683*^9, 3.689550161849286*^9}, 3.689550196010507*^9, {
   3.689550431511415*^9, 3.689550447884871*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"model", "=", 
   RowBox[{"CDF", "[", 
    RowBox[{"distribution", ",", "sort"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.689506505568923*^9, {3.689507139302579*^9, 3.6895071483811483`*^9}, {
   3.6895071804139814`*^9, 3.6895071907147093`*^9}, {3.689507267843452*^9, 
   3.689507269796689*^9}, {3.6895073409095106`*^9, 3.6895073466285596`*^9}, 
   3.6895078930717382`*^9, {3.689508067943055*^9, 3.689508093041513*^9}, 
   3.689508248299082*^9, {3.6895105329935346`*^9, 3.6895105353567033`*^9}, {
   3.689546917792138*^9, 3.689546948096325*^9}, 3.689546989415676*^9, 
   3.6895470304473763`*^9, {3.689547079223199*^9, 3.689547079590987*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"compare", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"model", ",", " ", "data"}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6895469657385397`*^9, 3.689546995663527*^9}, {
  3.689547028071478*^9, 3.689547051815598*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataplot", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"compare", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<model\>\"", ",", "\"\<data\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<comparing cdf for equation1\>\""}], 
     ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.689506505568923*^9, {3.689507139302579*^9, 3.6895071483811483`*^9}, {
   3.6895071804139814`*^9, 3.6895071907147093`*^9}, {3.689507267843452*^9, 
   3.689507269796689*^9}, {3.6895073409095106`*^9, 3.6895073466285596`*^9}, 
   3.6895078930717382`*^9, {3.689508067943055*^9, 3.689508093041513*^9}, 
   3.689508248299082*^9, {3.6895105329935346`*^9, 3.6895105353567033`*^9}, 
   3.689547011233674*^9, {3.6895470953276997`*^9, 3.6895471080156403`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"dataplot", ",", " ", "lineplot"}], "]"}]], "Input",
 CellChangeTimes->{{3.6895464078968077`*^9, 3.689546423379075*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJw113Vck28XBnAbFQvFAAUTxe6OS1GxCxUxUOwCzJ+FCii2gIiImCgG2CBi
0J0SG2xsY2PdGwZgou8DOy//+DkfdTy7n3Pu73V6b9rjtLVJo0aN1E0bNar/
M4YTFjX19GP8ifrCWrRpOkQjXMb6tH2BXyd3JRwMdkHywkTx/OrX8LJ8OUdy
bAuqlS02dGoWjaOa/iNbPneHesqN9WOdozG5col/qOd+fGiqDhWwovFxXpsm
g88dwhe7FSHZ36MxMTbnUNK9Y0iotehtPBCD97ZndMven0SBW9bujeIY3M7o
9Xr/Dl/Y/+n6Y67bGwh+1j/AabSPWu1XlhmL7sOF/Vr4nsGRWYM7tvgRhzVb
6n/jOZSw9t3hFn3AzbD6nwvgeB/8Gxb7EbzC78tljy5h/CpfbtbyeFg1c243
NMYf7txQw4uWCXBpeKBA2M+/PPbW+AQsHH9hhpviCpp3zjp1vE8i9MvqnzAI
Ac9DvtzamohL7qrfUV+uYkjgwcKnJ5Mw+FwX5lcE42Ko2u9RQRLy78+O+1Z3
DXbt+Akn1ySj/vS6NbuOmfnCvJudUtGaG7F3autQNB7T0Xz8oFQ8rT/uDjeQ
e+nbiydrUjG//ri6hKHZhkrNkvBUNBxvj5uoC7NpP7N3GuqfrrjPLVhL2poP
mZyGgesC02rsb8O8rdWS3jfTkMucrvXwO6gb8/vz5+Q07AgyHMfYuzCq4wu7
atLAfBhzZPfwIzX1j0W/dKyQPbqV0SscsQv3jw+fno6HzNNxI8IhOWq57vqi
dFTXlR7R9L+Po/YXrWKWpGNWwwHcx/KbFR0PbUgH8+WYA32AQeNF7dtkpqPh
414/QFaLzpMDlekY3fATgV33Yi33aNJxOiWPOaEIODcfwo7RpYPNfHuXiQ9x
ZrPyM2rS0bfhhT/E3Nf/quxbZ+BAwxd4BPmFxqMOO2Ygvcae+caPwBmf2+/y
mQx0bPjAx2jmsPiAxdMM1H9abM5jXPMuaFTzIgMxd6qeZC14Ap14yXmzxAw0
aXhhT1Cjnuo2bEImnBoaMBInwpaZN52RiQf1r680Et1tygo/zc7E1/rX4xKF
nRvnX3CryoRD/fELoiD2P+Qsqs5Ew/Guf4pvj3rf8fiZCcmx+gF5iuO7Oo7Y
0S0LIxsO/Bm2Wj0r6uicBd+QmcwJPkPihwu8Yy5ZKOlT/4WfY9j+iK49U7PQ
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
PQH5ycJA2yrp9ucCmi8WXrT4zOa9FZCnLERfyo8990FA88bkQJ+7NkeKBeQr
G3y7SKNLhYDmj6n/44w8XiUgb9norzhW2PGLgOaRjX27uAfO/BKQv2zca3d7
+M5mFTSfbJifXBzq1L6CPGYDH37HzxtYQfPKhk+bSwluoyvIZza87yRxnSZW
0PyycbjXv8GxSyrIazZmpd2K4dytoHlm43ib6u5BTyvIbzYGFB/5+fVdBc03
GyLLJafHZ1WQ56V4HLOpqWV2BeX3UjzPFz6/qKog30vRgafqMEZbQXm+FDkh
GQG9vlWQ96XI2NUmfl1tBeX7Uvz4ffbtpLoK8r8Ujew4rT3MhJT3S2FtiBQa
WgkpD5TC8rjzxPH9hJT/S1Ezpm64wzAh5YNSPLWbfy56jpD2gVK8rQkYlb5Z
SHmhFBHLVd5rtghpPyjFV2v3IZE7hZQfSrF38MOHV/cJaV8ohUvnbeXXLwkp
T5ThzsPAGS0ChLQ/lGH2laZW8idCyhdl+GL/t+vvNCHtE2VYK/q9bkuxkPJG
GeLTrae2EghpvyiDTmx2cqdYSPmjDOF2Qcun/BPSvlEG+e/vI7q2F1EeKcNV
lfeJaR1FtH+UIUl8uviftYjySRkujz8ZFz9SRPtIGVYLR0bsnSWivFKGwiz/
YeuXimg/KcMpXoR71zUiyi9Mbt5/nj3XVUT7ShmaFlTmnvMQUZ7hQCLpUPzi
uIj2Fw4c4jyO8U+JKN9w8OH66D4W50W0z3Cw46TGcitTm/IOB/guHvMhTET7
DQfefmVtDoeLKP9w8OTXHWH3FyLadzhITHx9Z+9LEeUhDmSHz6YlMLVp/+Fg
mtWGU8kJIspHTO49a5f9NU9E+xAH426smbO8QER5iYPzvprmNnoR7UccXCjM
++FrFFF+4iA1OEsV81VE+xIXmX/cLGZYVVKe4kIzw7FD6OBK2p+4mDig7kD5
8ErKV1wc3j85+PbkStqnuPgj9m2SP7uS8hYXFnde+H+bU0n7FRfWa484fF1W
SfmLizWycN1rp0rat7i43+zLnz8bKimPMbnwttfC43sraf/iYtSMp68uelVS
PmM+3yPj1tnzlbSPcZGwd4xx5PVKymtcrI4J3Gv7vJL2My5cnJ/+OxJdSfmN
i7Oty7NSkyvJ83IUZ+RezsqqJM/LMcri1QYbcSV5Xg71sKZnBzC1yfNyJDmZ
ydZ/qyTPy3HZXr7F+L2SPC9Hnp1bjKCukjwvR4vcC4e3dBCT5+VImMVTSSzF
5Hk5Dl5rsmNiFzF5Xg7WqUbPh1uLyfNyDKyc1HqnvZg8L8eYRWPVvHFi8rwc
Tb5J7naYLibPy5G2MHSSM1ObPC+HMknUsp+DmDwvhzRj/NzFs8TkOQ//XkqS
BjqKyXMerPM2xUqZ2uQ5k9u+9Trmu0JMnvNQ0ytDsshFTJ4z/9+rlV3GGjF5
zkOP7jtu3nQVk+dMLjqycFWnbWLynMl9jX+GFHqIyXMeXvusOPR6j5g85yH0
cJed5SfE5DkPulNuM+18xOQ5D+iCXiuZ2uQ5D3PYN9K6+orJcx6CX7VtDKY2
ec7kxP8mzh3oJybP+Yj3HRp+4JaYPGdyRGxM+8hwMXnOR2u/qhTOIzF5zsfD
sUsvXosUk+d8LBb6c769FpPnfHBvDB6eES0mz/mIGtd11f44MXnOh7lja0ez
D2LynI/H+nOSkzwxec5HyNkPj5uLxeQ5Hz91rrPuMrXJcz4mJh38dkUjJs/5
2D55h87eICbP+fC8XOTuVSMmz/nY6LM3YJmZhDzno/Hkdk4rWkrIcwGGHzlc
Pba1hDwX4MYeVbhlWwl5LgDLvUexWwcJeS7AsMsnh1t0lJDnAjT1jixa0llC
ngvwKSP15jFrCXkugOPEpydrbCTkuQD6om/d8gZKyHMBDntFdfnK1CbPBVj9
1LzWfrCEPBcgbeynPSfHSshzAdKVrhKriRLyXICvf+8Im06VkOcCaLM3WvZ3
lJDnAsx9cle7Y66EPGfcnyI6FLBGQp5XYE/o29a1TG3yvALzbn93jHSVkOcV
0H36L4i/WUKeMzki1cbPe6eEPK+AZNDm+aM9JOR5BUr5dz4H75WQ5xUwmzoi
YsF+CXlegejrB3aKzkjI8wp83ctaXXNeQp5XIHZ58gznyxLyvAJjPVo1b+Iv
Ic8rsLbJkdWHr0jI8wqoThuKaq9KyPMKBNzdlGB5X0KeVyBns5v/oWcS8lwI
bRsn/7XvJeS5EJ1LHw7p80FCnjPOr9nYLytBQp4Lscfz7cO/KRLyXIib6rtd
PqdKyHMh7JrO2BaZJiHPmZzhlrnGJUdCngtRN6Jvv3f5EvJcCFbyriUTPknI
cyEsYutWBPAk5LkQfZ2uqXoKJeS5ECv5rvev6iXkuRCtn/lEsZna5LkQ05Jt
c4qqJeS5EGa7HtQerJOQ50KcH9Vizpe/EvJchG2H4h27NpKS5yKcfTS6f3Fj
KXkuwpJdmhfLWknJcxGOHBt2YlIPKXkuQosO/tu9+0rJcxGso3wz7w2Xkuci
bLlzMvrZKCl5LsLlCnbspXFS8lyEH+bFzsdnSslzET60wqK4eVLyXARxYL/i
xKVS8lyErz7dDDbLpeS5CP1cjnR+tkJKnouQPchp5iMXKXkuwuxKec9Nq6Xk
eSUO8562rVorJc8r8bjxMxnfVUqeVyLQwjv8/BYpeV4Jp63ClItMbfK8EvJF
Lf0+b5WS55UIne2sPrZDSp5XYtroyb2f7JWS55XoMNR7xo4DUvK8EuZlSoeT
x6XkOeN07fiI0FNS8rwSVmPmuv/wk5LnlYgKC7tx8byUPK+ErH3XqRymNnle
ifTBw9L0/lLyvBKdU1oP/8PUJs8rEXt0yK2tQVK638XQlb11ZV2V0vsX47HP
T/NZIVK678Xod2D+0WW3/t8PYlhHSPNe3pPS/S9GlFP3MPfE//eHGE8OvlQ9
ypWSB2LomWNwKPt/v4gx6YD5ihyOlHwQo3BRx5mTZf/vH8aFXpYD5qmk5IUY
LQ9IhwR9/n8/iTHi27UXqTVS8oN5nnusGd2ayKi/mNxwICF1FlObPBHjW7ZZ
2MJWMuo3xolu8XUBHWTkixg32LPtgixl1H/M81qcbm/WRUbeiHH1bf7tvrYy
6kfGxfXXGu3oKSN/xNjq1eejZ28Z9acY0bY3e1SPlZFHYoS6vqlxmySjfhWj
Se3ca7sWyMgnJpe8K9RtXyij/hUj/nGL59fXysgrMd507eNydruM+lkM32/x
qzmeMvJLjEFz8jY/2iej/hbj+ev/JHknZOSZGL+bTNye4yujfpfgVBPWkujT
MvKNcS/MeCr1jIz6X4KRl5s/XxUgI++YezD8atvWQTKaBwnuSfU1L6/KyD8J
9loKJ8bekNF8SFBwdJqVf7iMPJQgYNTw9/ERMpoXCT7yzsRefSgjHyXwtjlt
dfKpjOZHAq3f4erXr2XkpQTl4dtF7LcymicJvHo4HF/2TkZ+SjAk7NyN0I8y
mi8JPJq8Nm5MkJGnEmwbJS9akCajeZPg36YjviuzZOSrBO/sZupX5cto/iQQ
3jzc7RhXRt5KoClqujafqU3zKMEd4+IonwoZ+StBvwdWOxtJZDSfzL+f2T6u
p0JGHksgeFHSd4dSRvMqwc7jzfgbvsjIZwk+fFV2e/9NRvMrQd22q72f/pCR
18w9HrfKks3UpnmWwOdI1rjmv2XktwRVl8ZadWsup/mWYOsQT8cCMzl5LsVS
t0vBZi3llN+Ze834YYmgtZx8l6JZ3+Ezle3llOeZOS+Z37hlJzl5L8UAr4WO
HXvIKd9L8X5BllRqKyf/pRh19pVXo/5yyvtS/O0yZ1DxEDnlASkGjbL+b9tQ
OeV/5p6zLvFJHCmnfCBF+Sqd79XJctoHpKi5JfV/xtSmvCCFxdfD8tZT5bQf
SLGzz6pOR5nalB+kmLO381DOLDntC1IUboubvmuunPIEcy9t2xnuvkpO+4MU
zaeqrnJc5JQvpLi2aE7lhM1y2ieYe/zFLw5ri5zyhhQt2GM4x3fIab+Q4krB
Zc5DpjblDymMf6Njaj3ltG9IwWpzRtrhoJzyiBSevV3WFx6R0/7BnPcF9cgm
J+WUT6SICCsOiveW0z4ihUvbrs0Dzskpr0hh9qNpxNvzctpPpEhZ1CN50FU5
5Rcp5l/ulN06WE77CnOe6YsP1kXIKc/IUL64qMWXSDntLzLcHzEkavFzOeUb
GZ5Oq87f+FZO+4wMef0zNmW9k1PeYe6VmLTAaqY27TcyuL64P1L7QU75R4Yj
mjfLUuPltO/IsGd8QTMBU5vykAyvVK7658ly2n9kCDj/6Fi3PDnlI6aPvxVN
82Fq0z4kg5XsU+3efDnlJRkcHU/16FUgp/1IhtII+1V9i+SUn2ToO9Q78BdP
TvuSDF7jg0/48OWUp2RoXr5/2yGpnPYnGa4Gi4Z1VMgpX8lQfWBlh3tMbdqn
ZKjttn9+HFOb8hZzb87rtGC0Rk77lQwrZ7f0DKmSU/6SoficrXriZzntWzKE
Wvc4q2VqUx6TYWdNmfp6jZz2LxkeRwZv7PFXTvlMhqgRj6eVN1LQPibDn3m7
/feaKyivyZAblcGb1k5B+5kM7nr7sXZdFJTfZEiZMXu0RVcFeS7H2WOtno21
UZDncswzX5DLY2qT53JsDrXfN3iwgjyXI3r3O9GwEQrynHnvub7HZk5UkOfM
PWJ1wTwZCvKcuSf29WpxzUFBnstxYeqU5PdOCvJcjqrgmqhbKxTkuRy9Fu5J
LWRqk+dy9B8d/frnKgV5Lkfy6AdNB65WkOdyrDk79JmAqU2eM33Ca3Pi0DEF
eS7HpLeDhE+OK8hzOTp/tEqx9VGQ53L8Ozgy0JOpTZ7LsSVk4+7evgryXI4l
eccdrC4qyHNmDmSBYUWXFOS5HNOvpa68fEVBnsvxbNuh4OtXFeS5HKwTF7V3
ghXkuRx94jbHX7ihIM/l+B5/5seqhwrynOnL6+I+m58oyHPmHlG1f3frmYI8
l6Ox1brRHi8U5Lkchb//ur/9qCDP5TBnaf9LylaQ53IYXn1snluoIM8V2Dcw
dNq8IgV5rkDdgOkLB7IV5LkCM1+WjEzgKMhzBbT5jo4feAryXIHZQVzHdKY2
ea7AlwBWwl2+gjxn+ubmtg3GCgV5rsBO2z2tt4sU5LkC/13tq/JmapPnCkyf
U5DQWawgzxW42dUx7JVGQZ4rEB/yumLTVwV5rkA3rF3sW6sgzxVQHkq91+eP
gjxXwLXCa4W4hZI8V6Cgueq8s5mSPFdgz9pcWTVTmzxX4Ew/eeyLlkryXIFH
/e7VdTdXkufM96/RfDvWVUmeK9DZ9/KuLjZK8lwBn/k/+NKeSvJcgSv/Zo3O
Hqokz5nvGXu/ZuE4JXnO/H3REE4nKMlzBRb6HPQ+P0NJniuQtWrOH38HJXnO
PI8nX13I1CbPFRCP6tP29Wwlec68v2aXF3ydqyTPFWh8deG0hYuV5LkSTYXd
PtcsUZLnSkRzz2VfWa4kz5WwmnegUxVTmzxXQqn+Z/N5hZI8V6JyRlDo+vVK
8lyJiKkPb0S7KclzJXIChZW/mNrkuRKT7Fp1SNmqJM+VaC0eljNov5I8V2KD
faPTtw8ryXMlgpo2D19wTEmeK2G8KCtp66Ukz5n3lNHOd4SPkjxXovxJ3Jup
Z5TkOfOnpq/rgAAlec5871qP3zeY2uS5ErOuDNbxbivJcyXslx+rGfdESZ4z
z5l7vLN/pJI8VwKePZqlvlSS50rcVvS5v+idkjxnvvfOoHVuGUryXInzGWMC
3bKV5LkSnXXuix/kKMlzJWa7WFzax1KS58x5Fo8Y+p6tJM+VkJzAdT5Tmzxn
PictKzOR+dPkuRJhizdVn9IqyXMlUpfkDV9XpSTPlXijyomwY/40ec4876sr
Uce/K8lzFcKqW2y990NJnqswvu3LxVObqMhzFSZn15Qtbq4iz1WwH9fb+5uZ
ijxXMfnIrYmvhYo8V0GfPXJ8ZVcVea7CG9e/F0d2U5HnKkzs+bhkhrWKPFeh
+TTX50tHqchzFQLc24V9GKMiz1XQNs58U8fUJs9VGKzQdhnDfK7JcxWkHcey
nSapyHMVxvzCuB5TVOS5CnfKA/pqFqjIcxX21G7dFLdQRZ6r8MU/J8xskYo8
V6HX9ykhx5ja5LkKR++VHRUvVZHnKrA7eH/P3Kgiz1VwapahFG1WkecqfL/5
adCw7SryXIUJ+wxHV3qoyHMVlsZaNM3fpyLPVWANT8z4wTynyXMVXPSLrs89
pSLPmfdTFDGg0k9FnqtQU/Tt+gHmOU2eq3DcW2Djc01FnjPnoCxImXFdRZ6r
oAhw6ebM1CbP1TA/+aVv4m0Vea7Gre7un++/VZHnavRo1rLLe+a5TJ6rIdRv
iGn6SUWeq/HjbPDF2UUq8lyNReK+bQOZ2uS5GlOHvKmM5KjIczViXQfna5na
5Dnz+zs2qj5UoSLP1ZgdObisXKwiz9Vw5utW6KQq8lwNm96yv6vVKvJcDVc7
4e5vWhV5rkb1cI/rLYwq8lyNgojJP1rUqMhzNZQTLO61/Kkiz9UYcin33pZf
KvJcjcpx3T+7M+dk8pz5+8fvDt9qpSbP1ejQunNBEHNOJs/V0IT82FrXTk2e
q+HUySunoJOaPFdjhVtKYGBnNXmuRvy67omjrNXkuRrqwx6cYOZcTZ6rsS39
0UYFU5s8Z85z8tE2UwaryXM1kiy80vYx52ryXA2522hb3ng1ea6G74H5I7tN
VJPnajzYNflLNlObPNdgTYx50gMHNXmuQSN9/mA4qslzDV4e/P3w6Rw1ea5B
XMuaJoNWqclzDVivnzyqZmqT5xpEsSMch69Wk+caWExfVrveTU2ea+B47VSb
SxvV5LkGB3O/7FYwtclzDQJbxan27lCT5xqcOjNueBlTmzzXoLV3yYUxe9Xk
uQb9jzTZdumwmjzXwLnPhrpaHzV5rsHE6Im9V51Vk+ca/FhTu9Llgpo816BN
SVUvVrCaPNfgy5hpA2Q31OS5BpO3zj7qGK4mzzXYOc7SctJDNXmuwUjnU/NX
vVST5xqkhTiZJcSqyXMNVn08+or9UU2ea4Aua7bOSlKT5xp0CR3fOSdZTZ4z
5zt6YD8x0xcmz5nz2dCrKCZDTZ5rsLCD85Nitpo812Bx9fUrB8vV5LkGi1pN
STfK1eS5Bju21f2TflaT51qITl6bnsj0hclzLS55tk/z/aomz7UYvehvYdEv
NXmuxexavGT/U5PnWow6ntP5RgsNea7FlJ6nzjgzfWPyXIv+70dk/mD6xuS5
FhNH703ra6shz7Vo1fLAbT7TNybPtXg+eBanySANea5FV9WnsqQhGvJcizYb
JtxMn6ghz7XoPO3ORM9pGvJcizdP+r1fPE9DnmsRFP2gb8kyDXmuhVumWNnD
SUOea7Gzq9R+2goNea4Fy5wv6OymIc+1eDH6t6XZVg15rsXLpfdUV3ZqyHMt
vhe/v79ul4Y81+Kz6+VjnT015LkWe9wfhF1iapPnWthIb2+N2aMhz7WwfHHI
5ftRDXmuheLV7aRD3hrynHke5awXE05pyHMtzqnenS87rSHPtRj+WJjS9qyG
PNfCz3DdMISpTZ5r0WfS0HLrqxryXIuvI1YeyL2uIc91mLVuYjMl08cmz3Wo
27Gsne1dDXmug1+Vz93kcA15rsPzvze/+j3RkOc6xMz/UR31XEOe6zBqX9P5
pcka8lyH91arT04v1pDnOnhlr141q0xDnusw0+vDzbl8DXmug7tTi98lAg15
rsPvjZmDtsk05LkO2pdHBYOZPjZ5znx+p8W8mB8a8lyHRb6qZuI6DXnOfN76
Wbd7ttCS5zok1lw9FWKuJc916Nt/qrZJOy15rkOUlOWWZ6Elz3Woup80yctW
S57rUMxJKLfpryXPdTj0Lnio8zAtea6DPS9ztcUELXmuQ/ucvCXeTG3yXIdK
lniu1RQtea5DwVAbWEBLnuvwUJr9fcB8LXmuw0/2o8Z+C7TkuQ6x8sPPmizV
kuc65v5hTfBjapPnOtjxN8TudtKS5zrkTOvk9nqjljzXoyVP7irZoiXP9QgU
PfUp2q4lz/U4l9eidugRLXmuh3DaoyIxU5s812MBxxB0kZkjk+d6bG+2hfPT
W0ue69H0r9PFwb5a8lyP9zuSW3NOaclzPW5w/V5fDtGS53o0X5Eoq3qqJc/1
iAv6t3ccM0cmz/VQv1t6OemtljzXY0fEHC9ZqpY812Oo0/ujdYVa8lyPH56/
hvflaclzPX6tm7BDIdaS53qcj8pNMpdoyXPm9726s3mFUkue66FY18TGRqcl
z/VwCF8xI+WzljzXY8u7PU4X/mjJcz2eu3/NedVcR57rcTry00r7VjrynPl+
N+bP8GNqk+d6eLjrq8aa68hz5vNufj55s7uOPNej2dM2SZN668hzPUbPP7jG
pp+OPNcjYVJg1WBm7kye63FYJBhQOUZHnuvRseDg0oPM3Jk8N8CsyGJqzGQd
eW7A6LSiUWnTdOS5AbqybtI+zByaPDcgoKp5tsdCHXlugJXcd36xk448NyDM
cqOhjJlLk+cGrG3hsCRlg448NwDldnnnd+vIcwO+zZoljd2jI88NeGs21nUU
M3cmzw0oSLmz6tRlHXluwNQvh9oNC9aR5wbEO8ua/2DmzuS5AYPfrXD0idSR
5wY8nbQ1IPm9jjw3YFJiz7TwMh15bsDegxd7zpDoyHMDPEezHJYyc2Ty3ICx
534OWK7SkecGNF9+Zv+2ah15boDz15l/vZg5MnluAKvvijGrmurJcwN+BomW
FXTTk+cG7A8/NUBiqyfPDejKHvwsopeePDegdfjC7PuD9eS5AeMnrHIqZObI
5LkB0imThx110JPnBpzkR0bn7NaT5wbcP+jl/HOfnjw3INRTfODPUT15boQg
Y9M9By89eW5EmwG5gSOv6slzI1pb3mLvuaEnz42473x9Gm7ryXMjZA/v/VkW
rifPjZjovjxG/1RPnhsx2iUx5HeMnjw3ovGwrU4ZTN+bPDfC3q39041ZevLc
CJ3z9GdlTN+bPDfiYvxGbi+hnjw3gnfmX7GFQk+eG3F8/4F1k3R68tyIMfLa
EuuvevLciCl5k4wda/XkuREn9w2tYpsZyHPm/9d6y9LaGMhzI/SpnNDEbgby
3IhUYa+e+Uxt8twIl5CESL/uBvKc+X1TXnzsaWsgz42I8gxZe7a3gTw34uAm
kTF9oIE8N8K2S5iN/TADeW7EpVJ1U7ORBvLciKcTAuYXMnNi8tyIc7qUqf7T
DeS5EQ97RZesdzCQ50bMTecGdZtnIM+NSLvsnV/L1CbPjTgxy3LdHicDeW7E
wCvzHHxXGcjzKnAjp8y3dTGQ51UYNFj6+ukaA3lehbEOarNZ+w3keRXWjVXs
7uRlIM+rsL/6YeAqPwN5XgXDvNqc0GgDeV6FkZ9mB09l+trkeRV2fpo9bmuO
gTyvwqPcQKFjnoE8r8K36Z93fywwkOdVkDctLsorMpDnVfDY1aU0V2Ygz6ug
0ZqF2MsN5HkVNvRcP9eJ6XuT51WQrTYvft7USJ5XIXHe25BFPYzkeRVsc3at
FE83kudViDrY+257ByN5XoU3rB3+7FlG8rwKc4Nyl1gvNJLnVeji8+ig1Toj
eV6FQ22H5ldtNZLnVRg/cE7K+BAjeV6FkMzEqaU3jOR5FdhtfpZ6JRvJ8yoc
6a6cuonpC5PnVRBeaOX6hOkDk+dVEHzqMXZfrZE8r8Ly5qWTJyyrIs+Z/297
8Ujh+SryvAr/A8a28+M=
       "]]}, {}}, {}, {}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJxFxW0w03EcAPCNdZRrjMr9adxE5SlOUlKpuMhDneHk8nRCWk/InXR1WrdJ
nua6nZTnh5R2jGyuMnHsdDnPo1GzMUtj83RndnRZ9cL39+JzH0r8XWqiHg6H
C/7n/wGJypGu+fAz2xN8LFJkmLv39kcrS8paMV84cED8vhwLgyMStB3PsQR4
yuWpTwGWDlftvZydizFgumHroWcYG74SWc1dWa2DjXT0KD8rLmwXsqTsyePB
GYOe3iVrH2FzHkmKx3fCbXKf/qFT3XA3rdwyUi2ENQdPGzfe/gLrbXBMLO36
YA9dXFtoUz/cz3Af7HUYgq2LVBsNS8OwSiuTjruOwnUL7X3EQhFMJL9ZVijG
4Pwb/KQq22/w+lmOIjlLDKe7CXn7eiZgWZMwb4TyHf5NGyu1f/ADdjxnsJXU
LoH9aijXW8ylcAY51mYmSgY7qcONxMHTsJnxiqFwE03oLOUeKJuBb7q3T+4M
lMOci/FVn9fRGpWFyVzxLMwP9dNn+yrgLH9mJW8OTZkKmKhl/oRPHmewMbc5
OMpqaAMvQmv6CuQp9F9wCSEmnWqrhM2k/Bo9IXrHI3qYZ+o8jGuI4cpNF+C0
V9wC0250h2OOIemOCiYFpDk9IaphifOwKFOAbq7wtlXELMLRXA8SeQv9mFlN
l7xbghuV5FJi0DKcU86Mk15CJ1AX7ZpC0PsFgubgCHQu62pvfjw62ePl6q5M
tA1jj79BPXrrxMPd4rfoycXZ0XoOuiiiNfpCC1rnQL3HFKAlI6wKfRH6Q7b2
mmgczfaKta+dQAe+PsI7L0V/uj/wlT6PLnY+xgpRo1PlZWGUZfThoFuyrjU0
AT9WV6RFT/O9aHGbaAGt1sX1D/qFtZFGp0P/BaO4ekM=
        "]]},
      Annotation[#, "Charting`Private`Tag$340#1"]& ]}, {}, {}}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"model\"", TraditionalForm], 
    FormBox["\"data\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"comparing cdf for equation1\"", TraditionalForm],
  PlotRange->{{0, 0.9854500154769559}, {0, 0.9995}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.689546428883671*^9, {3.689546481600938*^9, 3.689546557645986*^9}, 
   3.6895466009162703`*^9, {3.689546905125093*^9, 3.68954695611379*^9}, {
   3.689547018969294*^9, 3.689547112255991*^9}, 3.689547187605555*^9, {
   3.689547327553433*^9, 3.689547337301271*^9}, {3.689547391402254*^9, 
   3.689547405269219*^9}, 3.689547489516706*^9, 3.689547721309462*^9, 
   3.6895479023770638`*^9, 3.68954806457699*^9, 3.689548227277648*^9, {
   3.689548283688613*^9, 3.689548301410131*^9}, {3.689548460792651*^9, 
   3.689548485185128*^9}, 3.689549872173826*^9, {3.689549906237363*^9, 
   3.689549929150103*^9}, 3.6895499631383533`*^9, 3.689550044959077*^9, {
   3.6895501394530993`*^9, 3.689550162066825*^9}, 3.689550196224106*^9, {
   3.689550431793632*^9, 3.6895504490243683`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model 2", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533896803755*^9, 3.6895338968119373`*^9}, {3.6895448426920424`*^9, 
  3.689544844851783*^9}, {3.6895452784812393`*^9, 3.6895452785292397`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "c", ",", " ", "a", ",", " ", "pdf", ",", " ", "distribution", ",", " ", 
   "model", ",", " ", "compare", ",", " ", "dataplot"}], "]"}]], "Input",
 CellChangeTimes->{{3.6895451932824802`*^9, 3.6895452034983597`*^9}, {
  3.68954730658185*^9, 3.6895473183014727`*^9}, {3.689547351877369*^9, 
  3.689547400842082*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", " ", 
  RowBox[{"c", "/.", 
   RowBox[{
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"c", "*", "x", " ", "*", 
          RowBox[{"E", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "a"}], "*", "x"}], ")"}]}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "0", ",", " ", "\[Infinity]"}], "}"}]}], 
        "]"}], " ", "\[Equal]", " ", "1"}], ",", " ", "c"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6895474669900293`*^9, 3.689547474220845*^9}, {
  3.689550372379788*^9, 3.689550401659358*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   SuperscriptBox["a", "2"], ",", 
   RowBox[{
    RowBox[{"Re", "[", "a", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.689547490568247*^9, 3.689547722217751*^9, 3.689547903356495*^9, 
   3.689548065556266*^9, 3.689548228263775*^9, {3.6895482845888968`*^9, 
   3.689548302431408*^9}, {3.689548461805236*^9, 3.689548486207183*^9}, 
   3.689549873125441*^9, {3.6895499072759037`*^9, 3.6895499301035233`*^9}, 
   3.689549964146885*^9, 3.689550045953291*^9, {3.689550140428295*^9, 
   3.6895501629770193`*^9}, 3.6895501972169724`*^9, {3.689550432690044*^9, 
   3.6895504500099792`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"^", " ", "'"}], 
   RowBox[{"c", "'"}], " ", "kan", " ", "ers\[ADoubleDot]ttas", " ", "med", 
   " ", 
   RowBox[{"a", "^", "2"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.689547911540415*^9, 3.68954792748195*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"a", " ", "/.", " ", 
    RowBox[{
     RowBox[{"NSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Integrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "^", "2"}], " ", "*", 
             RowBox[{"a", "^", "2"}], " ", "*", 
             RowBox[{"E", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "a"}], "*", "x"}], ")"}]}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "0", " ", ",", " ", "\[Infinity]"}], 
             "}"}]}], "]"}], " ", "\[Equal]", " ", "\[Mu]"}], " ", "&&", " ", 
         
         RowBox[{"a", " ", "\[GreaterEqual]", " ", "0"}]}], "}"}], ",", " ", 
       "a", ",", " ", "Reals"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.689547611669496*^9, 3.6895476559716682`*^9}, {
  3.689548177024436*^9, 3.6895481811949863`*^9}, {3.689550364163561*^9, 
  3.689550369387246*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdf", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"a", "^", "2"}], "*", "x", " ", "*", 
   RowBox[{"E", "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "a"}], "*", "x"}], ")"}], " "}]}]}]], "Input",
 CellChangeTimes->{{3.689547821767735*^9, 3.689547884874092*^9}, {
   3.689550385115686*^9, 3.689550398787199*^9}, 3.689550438187746*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"distribution", " ", "=", " ", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     RowBox[{"pdf", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6895071104886975`*^9, 3.6895071157233076`*^9}, {
  3.6895072409359074`*^9, 3.6895072607806244`*^9}, {3.6895072979230623`*^9, 
  3.6895073333779135`*^9}, {3.689510520914795*^9, 3.689510523368045*^9}, {
  3.689547956201785*^9, 3.689547962345546*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"model", " ", "=", " ", 
   RowBox[{"CDF", "[", 
    RowBox[{"distribution", ",", " ", "sort"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.689547968979562*^9, 3.6895480087374153`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"compare", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"model", ",", " ", "data"}], "}"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataplot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"compare", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<model\>\"", ",", "\"\<data\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<comparing cdf for equation2\>\""}], 
     ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.689548021846052*^9, 3.689548058617103*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"lineplot", ",", " ", "dataplot"}], "]"}]], "Input",
 CellChangeTimes->{{3.6895480467858887`*^9, 3.6895480536379013`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJxFxW0w03EcAPCNdZRrjMr9adxE5SlOUlKpuMhDneHk8nRCWk/InXR1WrdJ
nua6nZTnh5R2jGyuMnHsdDnPo1GzMUtj83RndnRZ9cL39+JzH0r8XWqiHg6H
C/7n/wGJypGu+fAz2xN8LFJkmLv39kcrS8paMV84cED8vhwLgyMStB3PsQR4
yuWpTwGWDlftvZydizFgumHroWcYG74SWc1dWa2DjXT0KD8rLmwXsqTsyePB
GYOe3iVrH2FzHkmKx3fCbXKf/qFT3XA3rdwyUi2ENQdPGzfe/gLrbXBMLO36
YA9dXFtoUz/cz3Af7HUYgq2LVBsNS8OwSiuTjruOwnUL7X3EQhFMJL9ZVijG
4Pwb/KQq22/w+lmOIjlLDKe7CXn7eiZgWZMwb4TyHf5NGyu1f/ADdjxnsJXU
LoH9aijXW8ylcAY51mYmSgY7qcONxMHTsJnxiqFwE03oLOUeKJuBb7q3T+4M
lMOci/FVn9fRGpWFyVzxLMwP9dNn+yrgLH9mJW8OTZkKmKhl/oRPHmewMbc5
OMpqaAMvQmv6CuQp9F9wCSEmnWqrhM2k/Bo9IXrHI3qYZ+o8jGuI4cpNF+C0
V9wC0250h2OOIemOCiYFpDk9IaphifOwKFOAbq7wtlXELMLRXA8SeQv9mFlN
l7xbghuV5FJi0DKcU86Mk15CJ1AX7ZpC0PsFgubgCHQu62pvfjw62ePl6q5M
tA1jj79BPXrrxMPd4rfoycXZ0XoOuiiiNfpCC1rnQL3HFKAlI6wKfRH6Q7b2
mmgczfaKta+dQAe+PsI7L0V/uj/wlT6PLnY+xgpRo1PlZWGUZfThoFuyrjU0
AT9WV6RFT/O9aHGbaAGt1sX1D/qFtZFGp0P/BaO4ekM=
        "]]},
      Annotation[#, "Charting`Private`Tag$340#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1:eJwt13dcTX8YB3CUPSJkk+zM7P0JZc9kR8OeyczIaCBRIjuUSkIqSaTS3uN2
u7fbvN29h53xw+/Uffqn1/d169zv+Z7nOe/PM9DF1W57i2bNmimMmjVr/H00
dvBy/URX/Bf1ib3MxRpeLeJbqPkn8OvMnuQjN9Yj8fvEXGnAeZzq9nKB8OQ2
jDpWNsE29jxOKIdatXmxD33+RawL2OiJGfUrrt4+cAhpeU6VVS5eSFrUocXI
i8fwYu2JwtOvvDDtdd6x1EcncSg1LqYgwxtv+/uoV709g3Z5Dnmb3vggOMs8
9tCu81gzlX/4QO0F1Pxs3IAX+h4tn31q2mX0GVs3uNV5H4wKWm+U8T0AG7c1
fuNFHPbdsmdM7yDcu9v444udD/qHRnncRFVJw2pxhB9C/pgvenfqFnoZr+00
+tVV8N0PDzMPu431TRsKwB8bzzDFx9tYOsV3jpP0Gl6s7PBnk8ddaFY17jAQ
2y+cGM/9eBd+++S/oz5dx367eEEZ/z5GXjRjvuIGws9snF+3JxiFobZvvvwJ
QvnE0ca6fQ/QeHo9jW/hoMre+otLKNrxwg7OancbOxbNu/E5IBTPGo+78x28
wvi9XT6FYnHjcZndxbhh8ZfczjxG0/H2vYfKyL+/T/qGoXF3LIv7MONkpDZ8
CMMIh4CMb8OD0XdJu9GtL4cjnznd3mMfwOb54s4+NeHYFag9jUkPMWhAq17C
iRFgLsYc2SNcaDl37PA3EbAXR9zPMg+Bf8nsAfO+RSCc2R0vLATHz9uaGps+
wdc/HHfl0FC4LSoyizd7ApumAwhF8IgNj3KnPQFzc8yBPkagbPlQ6/6RaLpc
7GO4lq/PubwnEhOafsLQbusllz5ukfBKK2BOKAw24hNdFh6LRDlz9+unhWPg
u+Mi8yuRGNT0wMPR2iHD1Cw5EoebbiACq7psL9+64Ckyvw1n7jgCdvJxJdHV
T2HadMEnKDvj0C1mXBQar/Y67wlMt596Vj8tCq8e6CNzlkQy58k5fGVzFFo0
PbBIHC342/mI9zPYNRXgU7iYJy3n3n2Gx42Pj/MUS82M3h+KeIbPjY9nfRSG
iFwLNsx/gbmNx18Theqhppp29i/QdLxbnqHtSG7kXscXEJ5sbJBniF3YvPLj
ixewajrw59gZeqS5y8JonL85jznB5ziV5hN+cnk0yiwab/gFWEdNN+ZueImB
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
CRbEzw/bGykhzyXorhmz1O2phDyX4FHX4T1HVkrIc+ZcTz1e6lQjIc8lGGzz
0NdNICHPJfDqlz9PxqwNnktgdNKrRi2UkOcSnN16t2VbvYQ8l8Dm/Io6308S
8lyCn4dXhxz7ISHPJSjg3NO6/ZaQ58y5VD0u+vyfhDyXYKPVvsJBxlLyXALh
yG1vXbpLyXMJfD1ibnB6SclzCSJ2dtn0d4CUPJdAdjBHF2EhJc+Z+47TObSZ
LCXPJeDd2hjRfpGUPJegY1qw/4rVUvJcipjPPkfa2UvJcylWjQq3j90gJc+l
CPpU6SndIiXPpcg81m6C9VYpec7si7UtezmzNnguxQQfi9P+26TkuRSjfhWu
0uyUkudShNcnfuu8R0qeS8Ed8nHkJGZt8Jw5h4Pd4L1PSp5LMTqj7fczJ6Xk
uRSLJ/5wHn5RSp5LUfAp2XXoVSl5LoWKX5+39qaUPJciPl2x8Wu4lDyXorL3
3qEhEVLyXIoe1pcXX3giJc+lWKOaKrweKSXPpfjsfGhIn+dS8lyKhBOv53RN
kZLnUswImzhjSraUPGf+z/Jf9wX5UvJcihRnX9sDdVLyXIqFVQut8pVS8lyK
26+OZZ77LiXPmefio1xt8ktKnkuRu8y99eXfUvJcCkuLzR0VzNrguRSDPVud
6NpMRp5LsXvzhXmFxjLyXAqL535dL3eQkecyvOrO6/K5k4w8l8F5X7OpI7rJ
yHMZLGtuhMQxa4PnMvBsgtyGmMnIcxnOX73NzhskI89l+Nz3Fn/wMBl5LsOD
XmG5/sza4LkMPx3/O3l4jIw8l+HU85NTXKxl5LkM5wZeK5i1UEaey9Bpou+U
fktl5LkMwV/MXCYtk5HnMsx5MSvmgb2MPJchRl2+TLZJRp7LMGs+73jqLhl5
LkObOyuHuuyWkecymKz8/kfuISPPZfDNW7WSdUVGnsvwNfv3tGR/GXnO/P/e
wvgnt2XkuQzmn8NSdcxvg+fM90zZbPvqjYw8l+F3Z555s/cy8lyGqqS7l4uZ
3wbPZbC6uXdiXYGMPJfh0bUj4+KY3wbPZWjgSE6LmLXBcxmaz7Jc0L5GRp7L
4H17ut1KrYw8l8GR1ylh9lcZeS7DqBDjM17/ychzGTYEV/as+Scjz+XYv/v4
kpPN5eS5HB52x45MNJGT53JMqk8xvdlVTp7L4TshwXxjDzl5LseKS790DYPl
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
4//vKHNfBs81mNSq7Z71bhryXIN+qy4VFh3XkOcaGGem8nqf0pDnGoz7uuvo
UQ8Nea4B3+XUhun+GvKcOa+YC10sAzXkuRafa+/0/n1TQ55r8XVTl+ZH7mrI
cy069f2+RvdYQ55rsbVgXhv5Uw15rkXW0FkfzZj7NHiuxYAjm/6reqMhz7UI
suoXdydVQ54z1yt3NEkt1JDnWvya+jDbmblPg+davEvb8fuKRkOeayFK8lk9
7qOGPNfitoeD4GyDhjzXwvxs3P3Q1lryXIu0e+17vOukJc+Zzy+7nbQ115Ln
WhQkprUcDC15roWz3UXjw8z3GjzXMn1/YtajZVryXIuZV8ZaVa3SkudahImr
LQMdteS5Fi06FOz9vkNLnmshq44YZOGqJc+1GDPMZsdC5nsMnmuRWdLxo5ef
ljzX4lDzYa9WMt9r8FwLXeyBVj53tOS5Fh4Hby9Kuqclz5nnsz7xya0YLXnO
7HN8mxPXKrXkuRYZS3NCHvK15LkWkiEpQftkWvJchyHRo3dFMf9n8FyH7f2H
/Mz+oyXPdSjLMv2XbKQjz3VoERXfsLm1jjzX4Z7XX/+Z7XXkuQ7RVq4r53XX
kec6fK0OUnP76shzHaK8i81goSPPdZi8yNdeNkZHnjO/k4xYlsz/GTzXYVa8
x8TceTryXIelW7cN/rNYR57rUJKev/vqSh15rkNS81y75LU68lyH1imd7Rcz
/2fwXId6s2afTJi/M3iuQ0Jh2PJdB3TkuQ7SS6YFYncdec5ct27bdT2zNnjO
3K+Lw77lp3TkuQ6ehRlXAj105Dmz/ynG97zO6chzHdJNt05/eFFHnuvQ/0bP
gy7M9xg812Fg6RhZxVUdea5DXJfQtEnXdOQ5s98yboUR870Gz3U4Kuk54Eqw
jjzXodnDUTesHuvIcx3in7T3VTNrg+c6yCqd9L+idOQ5c56KkfZjXurIcz0e
D/XvF8usDZ7rsfTQ7RsFsTryXI9jvx7y2jH7NHjOrD0/Xh1QqCPP9ZhXN/rb
ebaOPNfj7ael7x8y32vwXA+nQ7mZvVvqyXM9ahyeO8Uz32vwXI9J7Ts59Gij
J8/1GJL3tLOsrZ4810Pd9eDjoR305Lkef3X6e09768lzPcavNLmiYdYGz/Vw
XhPxvt5CT57rMSX4/sWeVnryXI8DO3Un2XP05Lke/SVrhz7doCfP9WgpdfHd
tVFPnuvRefS55cMd9OS5Hgl2C5PfMfsweK4H60jJmdt79OQ5s5+Aued8mX0Y
PNfj3IdnBTl+evJcD6Xk4aXMq3ryXA+voW67Rj3Wk+fM75PhSyPC9eQ5c5/L
UuRRL/TkuR5VRrfXb0zWk+d6bOb4v7lRryfP9QiTLBbd1uvJcz3+B1H9lHM=

       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.9999999795918367}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6895480670882263`*^9, 3.689548229394643*^9, {3.689548285673195*^9, 
   3.689548303499229*^9}, {3.689548462921455*^9, 3.689548487276791*^9}, 
   3.68954987439985*^9, {3.6895499084897337`*^9, 3.6895499312924023`*^9}, 
   3.689549965217741*^9, 3.689550047035203*^9, {3.6895501417978697`*^9, 
   3.68955016426945*^9}, 3.689550198405943*^9, 3.689550451135227*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model 3", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533896803755*^9, 3.6895338968119373`*^9}, {3.6895448426920424`*^9, 
  3.689544844851783*^9}, {3.689545280609522*^9, 3.689545280665216*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "c", ",", " ", "a", ",", " ", "pdf", ",", " ", "distribution", ",", " ", 
   "model", ",", " ", "compare", ",", " ", "dataplot"}], "]"}]], "Input",
 CellChangeTimes->{3.68954740933072*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", " ", 
  RowBox[{"c", "/.", 
   RowBox[{
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"c", " ", "*", " ", "x", " ", 
          RowBox[{"(", 
           RowBox[{"x", "  ", "+", " ", "b"}], ")"}], " ", 
          RowBox[{"E", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "a"}], " ", "*", "x"}], ")"}]}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "0", ",", " ", "\[Infinity]"}], "}"}]}], 
        "]"}], " ", "\[Equal]", " ", "1"}], ",", " ", "c", ",", " ", 
      "Reals"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6895474669900293`*^9, 3.689547474220845*^9}, {
  3.689548241888596*^9, 3.689548245536222*^9}, {3.689548292289433*^9, 
  3.689548293416737*^9}, {3.689550348820191*^9, 3.6895503550674953`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox["a", "3"], 
    RowBox[{"2.`", "\[VeryThinSpace]", "+", 
     RowBox[{"a", " ", "b"}]}]], ",", 
   RowBox[{"a", ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.689548230324603*^9, {3.6895482900251303`*^9, 3.689548307645513*^9}, {
   3.689548467069335*^9, 3.68954849143859*^9}, 3.689549878618362*^9, {
   3.689549912744803*^9, 3.6895499355358067`*^9}, 3.689549969513845*^9, 
   3.689550051315497*^9, {3.689550146661088*^9, 3.689550168703067*^9}, 
   3.689550203095401*^9, 3.6895504555137463`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"expression", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a", "^", "3"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", "+", " ", 
       RowBox[{"a", " ", "*", " ", "b"}]}], ")"}]}], ")"}], " ", "*", " ", 
   "x", " ", "*", " ", 
   RowBox[{"(", 
    RowBox[{"x", " ", "+", " ", "b"}], ")"}], " ", "*", " ", 
   RowBox[{"E", "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "a"}], "*", "x"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.689548359970731*^9, 3.689548435287003*^9}, {
   3.6895484761988087`*^9, 3.6895484798385563`*^9}, 3.689548541974638*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", " ", "b"}], "}"}], " ", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", " ", "b"}], "}"}], " ", "/.", " ", 
   RowBox[{
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Integrate", "[", 
           RowBox[{
            RowBox[{"x", " ", "*", " ", 
             RowBox[{"expression", "[", "x", "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "0", " ", ",", " ", "\[Infinity]"}], 
             "}"}]}], "]"}], " ", "\[Equal]", " ", "\[Mu]"}], " ", "&&", " ", 
         
         RowBox[{"a", " ", "\[GreaterEqual]", " ", "0"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Integrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "^", "2"}], " ", "*", " ", 
              RowBox[{"expression", "[", "x", "]"}]}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"x", ",", " ", "0", " ", ",", " ", "\[Infinity]"}], 
              "}"}]}], "]"}], " ", "-", " ", 
           RowBox[{"\[Mu]", "^", "2"}]}], " ", "\[Equal]", " ", 
          RowBox[{"\[Sigma]", "^", "2"}]}], " ", "&&", " ", 
         RowBox[{"b", "\[GreaterEqual]", " ", "0"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", " ", "b"}], "}"}]}], " ", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.689549591653146*^9, 3.6895496955993547`*^9}, {
  3.689549726887698*^9, 3.689549803407023*^9}, {3.689549833833197*^9, 
  3.689549899806155*^9}, {3.689549954646521*^9, 3.689549956894025*^9}, {
  3.689550017925508*^9, 3.6895500375977182`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5039529993266463`", ",", "2.4391744164757316`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.689549883893858*^9, {3.689549918042502*^9, 3.689549940359746*^9}, 
   3.689549974676097*^9, 3.689550056547756*^9, {3.6895501522000713`*^9, 
   3.689550174114306*^9}, 3.6895502082302933`*^9, 3.689550461014402*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdf", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a", "^", "3"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", "+", " ", 
       RowBox[{"a", " ", "*", " ", "b"}]}], ")"}]}], ")"}], "*", "x", "*", 
   RowBox[{"(", 
    RowBox[{"x", "+", "b"}], ")"}], "*", 
   RowBox[{"E", "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "a"}], "*", "x"}], ")"}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{"Model", " ", "function"}], " ", "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.689550083825623*^9, 3.689550157719977*^9}, 
   3.689550188188702*^9, {3.689550223404434*^9, 3.689550229828396*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"distribution", " ", "=", " ", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     RowBox[{"pdf", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6895071104886975`*^9, 3.6895071157233076`*^9}, {
  3.6895072409359074`*^9, 3.6895072607806244`*^9}, {3.6895072979230623`*^9, 
  3.6895073333779135`*^9}, {3.689510520914795*^9, 3.689510523368045*^9}, {
  3.689547956201785*^9, 3.689547962345546*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"model", " ", "=", " ", 
   RowBox[{"CDF", "[", 
    RowBox[{"distribution", ",", " ", "sort"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.689547968979562*^9, 3.6895480087374153`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"compare", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"model", ",", " ", "data"}], "}"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataplot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"compare", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<model\>\"", ",", "\"\<data\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", "\"\<comparing cdf for equation2\>\""}], 
     ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.689548021846052*^9, 3.689548058617103*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"lineplot", ",", " ", "dataplot"}], "]"}]], "Input",
 CellChangeTimes->{{3.6895480467858887`*^9, 3.6895480536379013`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJxFxW0w03EcAPCNdZRrjMr9adxE5SlOUlKpuMhDneHk8nRCWk/InXR1WrdJ
nua6nZTnh5R2jGyuMnHsdDnPo1GzMUtj83RndnRZ9cL39+JzH0r8XWqiHg6H
C/7n/wGJypGu+fAz2xN8LFJkmLv39kcrS8paMV84cED8vhwLgyMStB3PsQR4
yuWpTwGWDlftvZydizFgumHroWcYG74SWc1dWa2DjXT0KD8rLmwXsqTsyePB
GYOe3iVrH2FzHkmKx3fCbXKf/qFT3XA3rdwyUi2ENQdPGzfe/gLrbXBMLO36
YA9dXFtoUz/cz3Af7HUYgq2LVBsNS8OwSiuTjruOwnUL7X3EQhFMJL9ZVijG
4Pwb/KQq22/w+lmOIjlLDKe7CXn7eiZgWZMwb4TyHf5NGyu1f/ADdjxnsJXU
LoH9aijXW8ylcAY51mYmSgY7qcONxMHTsJnxiqFwE03oLOUeKJuBb7q3T+4M
lMOci/FVn9fRGpWFyVzxLMwP9dNn+yrgLH9mJW8OTZkKmKhl/oRPHmewMbc5
OMpqaAMvQmv6CuQp9F9wCSEmnWqrhM2k/Bo9IXrHI3qYZ+o8jGuI4cpNF+C0
V9wC0250h2OOIemOCiYFpDk9IaphifOwKFOAbq7wtlXELMLRXA8SeQv9mFlN
l7xbghuV5FJi0DKcU86Mk15CJ1AX7ZpC0PsFgubgCHQu62pvfjw62ePl6q5M
tA1jj79BPXrrxMPd4rfoycXZ0XoOuiiiNfpCC1rnQL3HFKAlI6wKfRH6Q7b2
mmgczfaKta+dQAe+PsI7L0V/uj/wlT6PLnY+xgpRo1PlZWGUZfThoFuyrjU0
AT9WV6RFT/O9aHGbaAGt1sX1D/qFtZFGp0P/BaO4ekM=
        "]]},
      Annotation[#, "Charting`Private`Tag$340#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1: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
Hc8m1pDntXg6apXZ6oYa8rwW/c8e5Loza73ntQiZetp+6/ca8rwWD9PHZnX4
V0Oe10JueW9xbNta8rwW1kNdHqTY1pLnteCZ2Y4VONaS57Xwu9HxQPmCWvK8
FkU3J37YtaqWPK/FpZQ+F0Z71ZLnzOc2tx71+HkteV4LjSVrSXleLXlei5Nr
OKEP8mvJ81o8+G9HGx3zPr3ntSi4/yVyWWUteV6HQs6DyWW1teR5HeL3z1/x
vr6WPK8Da4lj+wmt6sjzOsz/N3jlAeZzes/rEBw7rTzFrI48r4PZnfkdhjLn
0Xteh7k7znLtbOrI8zpob28xt1lcR57Xwc4kl1XmXEee1+FY66BhqlN15Hkd
Bjj7tM69UEee1+F0/o+7zt515Dlz/Z/5h2/71pHndaitu7W548U68rwOy26c
2pQaUEee1zMjKSfckVNHntdjw5xVwfWSOvK8Hqd9Ana7fqkjz+vx9b7f8Ft/
6sjzeiyZuXRCbM968rweR5LvbRzcp548r0dS4/WuY4fXk+f1WNfHcOD7/+rJ
83pkGv26HxtQT57X45k3T7k1op48r0eYn51yfFQ9eV6PA0fty2Zk1pPn9Zg0
b7Cmf0k9eV6Ps2M8PZZK6snzelz6dydnR18ueV6P0o2SeycsuOQ5F9zF466O
H8olz7m4b2FdrhzDJc+58DRcUf9+Epc85+LcvICr3adxyXMuzhTMa/9xDpc8
56Im/nHm8xVc8pyLoH+yG7M3cslzLqR1e7suv8Alz7ng/bTuXMas9Z5zMcrz
84FzF7nkORe+OZJuXZ5wyXMuwq2m1fWI55LnXOxu9aFnx3Quec7FqmLzhX/r
ueQ5F2Wp/x4pBVzyvAGRQ4Jz/fs0kOcNmNlJF11k3kCeN2C29Z+73YY0kOcN
ELkv0PSZ1ECeN8BYPGzxQccG8rwBizoWWHKWNZDnDfCJND9h69JAnjfg9jD7
tPPM63rPG2B+tcuPqocN5HkD4kOsbrk8aSDPG1AxLc6jOK6BPG8ANyG7oJE5
6j1vwHbBzD9+6Q3keQPiLjtcsc9vIM8bkFy/qbfqYwN53oCzoUMOd+veSJ43
ombVRl7HqY3keSN2TVo28fD0RvK8EfvZR7iZcxvJ80ZMjprxo2FFI3neiD4m
bvKi1Y3keSMU6djXdl0jed6IsDFNj+N3N5LnjQgcl/D7f0cbyfNGjDNPyeKe
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
/2JaGSnJcyUqknOsZ7RSkudKSEtLVqxprSTPlbA/M6XnIuao91yJOI+v0V69
lOS5EnURxh8nDVKS50ps+bG6XZClkjxXosMUjx2a8UryXIknraq6NtgpyXMl
Zq/bODhwnpI8V2LOvJxlac5K8lyJRZNYykerlOS5EusPP1nddaeSPFdCEWSM
J/uV5LkS6S95n/+cUZLnSozL3Fn42U9JnjPX6RE2xtVfSZ4r0fW+ZeD6a0ry
XIlfj33iPj1SkudKrDZOquJGKclzJcxz21lbRSvJcyVevP4yb1GMkjxXIuS5
Ra9T8UryXIkZA91uD2KOes+VKNENa5+aoCTPlTgte9rbiDnqPVdi8pS7YaHF
SvJcibOT7s05WK4kz5VIUkVGxbCV5LkSRVf23Mxg3qf3XIm2NgavVMxa77kS
Y/t7rNrMvE/vuRLCE/+bUaVSkucqxNxuF36XeZ/ecxW25Nj4SZm13nMVvP9z
8Dr3Q0meq5B5WxpWYKQiz1WIGnSnJ9tERZ6rcLbLLo1iiIo8V8F9fg+jYbYq
8lyF6A3/hchnqshzFUy9TnOeMke95yrY8P3lb+epyHMV9p1+MVPurCLPVTiz
fnnZ8r0q8lwF9q2rLi77VeS5CmOW9buKoyryXIX0GZWJ486pyHMVFP17nt15
SUWeq+AyetXtR/4q8lyFR5lZJx4wR73nKlzwHrBiSZiKPFfhyoG5u51eqMhz
FYYNjD3YJVFFnqvwd2JuSUq2ijxXYWTwzuT5OSryXIXYntuGfC9QkecqmCX8
x2OXqMhz5rwHIlNHclXkuQrllYfKlQ0q8py5Ho8TuQlCFXmuQs7CpOvrmdf1
nqsgNPOSlEtU5LkKyzPNXd1+qMhzNT5WNQ30/KMiz9WYUtfBfqKhmjxX40uc
6y2jnmryXA2b0I+dJcxa77kagz51VfzrrSbP1djNCe/eNEBNnqtRuZRf5zpI
TZ6rMcDaMPXYEDV5rsaSGW6877Zq8lwNo63rf95aoSbP1Vj34KLT6FVq8lwN
C13SrA+b1eS5GnOmZY9tOqAmz9UQ2Re15XupyXM16nJnbrS+qibP1ehcHbLy
9m01ea6G89pnobnMWu+5Gh1+788b+lBNnqsR7jGotTRcTZ4znxt8xvfpMzV5
rsa8sAvZ75LU5Lkak09arwrOVpPnamg21LOS89XkuRoBD4fdsixQk+dqdGrq
eHZ4kZo8V6OXec2Zg41q8lwNjy3z+puI1eS5GpZJ3ve3ydTkOXPfSf3iS5mj
3nM1FrKDApp+qslzNWZaLLpY/0dNnmuQPNPuexpz1HuuQYf1PsvmtNGQ5xqM
jfY0FXbRkOcaHG+req0105DnGgTYjSmx7q8hzzUYHqAQtR+qIc81GGN0c2Ij
87recw2OWQ7ZbjFFQ55rcLeoxqFouoY816DHzhXK7ms15LkGKV+q0pNcNOS5
BqJ9F6+bbNWQ5xqYPFFWDjusIc81qC8ZMt3mpIY812BF50+Zz65oyHMN6qy2
brd9oSHPNdCZn/y3PklDnjPX8WTqnbNvNeS5BnMUu8yepmnIcw2GreZ2G1yi
Ic81cPGyX7ypUkOea+Az0+6xK1dDnmuwy39d0vf3GvJcgyNDTz1q+01DnjP7
GG1tlv9dQ55rMFg+6HBEKy15roF9yMa3+cZa8lyDCplCrOqjJc81OLilJPd/
s7TkuQZPlFuTPjhoyXMNTgxvvW39Yi15rsXdEx59Ly3RkudaqP8bnXnQTUue
a5EwKnOZ6U4tea5F9ryUySf3aMlzLZYEbmsz4ICWPNfC2ds/zvu4ljzX4kfb
9673vLTkuRblfVvzony05LkWe2fuObQ7UEuea9F53ebhvkFa8lyLaXXyd6mR
WvJci4/XtULXF1ryXItLwd/qTsRqyXPmeq1KV1omaslzLa7dWP7K/a2WPNdC
OnN1q7wCLXnO3O+4H5GJJVryXAvt1+zPEzha8pzZt9HL7sxg1nrPtdgvPjp7
c62WPNfCturR9t31WvJcC6Melee6N2rJc2YfvFXVh0Va8py53zV3HDhSLXnO
7PPT69p2Ci15rsWhMR2eDFdpyXMtxhy50q7os5Y818LKeRXL8quWPGeu64R7
ychfWvJci9MPcL+MWes918I9JGFbJyMdea7FLdNTnbOMdeS5DgHVSTusmaPe
cx0MbpX5dW6nI891GGxtZa/srSPPdfg9bZu/6QAdea6DdM7JwqPDdOS5DuW7
iizO2OvIcx2OpvRw8FmqI891OJ6aZdzgpCPPmde7zdxn7Kwjz3XodzghwHe5
jjzXQfVfkOH2lTryXIdJoUHuuzbryHMdjOuXrgpn1nrPdRi08aXPyB068lyH
Oveu2uRDOvKcuY+Eifwh53TkuQ5tPau9eUE68lwHtw0fkw/d1JHnzL4MkZ0q
v6Ujz3Ww8rQuXXFPR57rYDvQMFrAvK73nLmORxHDNkfpyHMdzu2eZerLHPWe
M+uGSXFfU3TkuQ7iq4tn7GCOes91eBo63HBAiY48Z/ZlyL6/d9k68lyHBIUf
37BBR57rcKTdoRUuH3TkuQ77w238X/zQkec6/B/wqqb4
       
       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.9999999795918367}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6895502087461777`*^9, 3.6895504616570168`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell["Discussion", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, {
  3.688339162508295*^9, 3.688339166187951*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " 95% confidence intervals for the constans"
}], "Subsection",
 CellChangeTimes->{{3.6883380857471867`*^9, 3.688338093298911*^9}, {
  3.6895307460631933`*^9, 3.6895307489345703`*^9}, {3.689545346401348*^9, 
  3.689545356841613*^9}}],

Cell["Solution", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, 
   3.688339206676055*^9}],

Cell["Code", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, {
  3.688339162508295*^9, 3.688339166187951*^9}, {3.6883424648359222`*^9, 
  3.6883424653138523`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ". Which distribution?"
}], "Section",
 CellChangeTimes->{{3.6883370780341473`*^9, 3.6883370831860743`*^9}, {
  3.689530696414987*^9, 3.6895306977155533`*^9}, {3.689530815894239*^9, 
  3.6895308198461847`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Determine a distribution model "
}], "Subsection",
 CellChangeTimes->{{3.68833807029881*^9, 3.688338079218799*^9}, {
  3.688344869609865*^9, 3.688344869825639*^9}, {3.689530801942465*^9, 
  3.689530810446213*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, 
   3.688339206676055*^9}],

Cell[TextData[{
 "To determine the distribution model of the random data we can use the \
built-in function ",
 StyleBox["FindDistribution, ", "InlineFormula"],
 "which takes a list of values and returns a distribution. This only works \
reliably when we use a large enough sample size.  "
}], "Text",
 CellChangeTimes->{{3.689534173274135*^9, 3.689534303690764*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, {
  3.688339162508295*^9, 3.688339166187951*^9}, {3.6883424648359222`*^9, 
  3.6883424653138523`*^9}, {3.688345011432764*^9, 3.6883450125764303`*^9}, {
  3.688347507361436*^9, 3.688347507537098*^9}}],

Cell[CellGroupData[{

Cell["Distribution 1", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", "=", " ", "1000"}], ";"}]], "Input",
 CellChangeTimes->{{3.6895336048108873`*^9, 3.689533607701769*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rand", " ", "=", " ", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"1", ",", " ", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", " ", 
   RowBox[{"Mean", "[", "rand", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindDistribution", "[", "rand", "]"}]}], "Input",
 CellChangeTimes->{{3.689533336912553*^9, 3.689533359151455*^9}, {
  3.689533458102881*^9, 3.6895334696474733`*^9}, {3.6895335606622953`*^9, 
  3.689533560886615*^9}}],

Cell[BoxData[
 RowBox[{"ExponentialDistribution", "[", "4.390780228654946`", 
  "]"}]], "Output",
 CellChangeTimes->{{3.689533589145258*^9, 3.6895336114604797`*^9}, 
   3.68953396899825*^9, {3.68953413973204*^9, 3.6895341475488453`*^9}, 
   3.689534352859037*^9, {3.689534442751623*^9, 3.68953446351777*^9}, 
   3.6895345947185707`*^9, {3.68953465431334*^9, 3.689534709620193*^9}, {
   3.689534743086966*^9, 3.689534756729333*^9}, {3.689534813229504*^9, 
   3.6895348439663887`*^9}, 3.6895356679375887`*^9, 3.689537682120987*^9, {
   3.689537762796*^9, 3.68953778321637*^9}, 3.689537822627449*^9, 
   3.689538227139634*^9, 3.689538301635296*^9, 3.6895384032744207`*^9, {
   3.6895384781949873`*^9, 3.689538506441395*^9}, 3.68953873649714*^9, 
   3.6895388423508463`*^9, 3.6895393585633097`*^9, 3.6895393911812563`*^9, 
   3.6895394397961073`*^9, 3.689542863796534*^9, 3.689542913785795*^9, 
   3.689543027355006*^9, 3.689543583139615*^9, {3.689543631642535*^9, 
   3.68954364408838*^9}, 3.689543849584641*^9, 3.689544107222102*^9, {
   3.689544146187706*^9, 3.689544170207307*^9}, {3.68954423477036*^9, 
   3.689544289613655*^9}, {3.689544328160262*^9, 3.689544354489758*^9}, {
   3.689544395138595*^9, 3.689544408409953*^9}, 3.689544593358378*^9, {
   3.6895447263834953`*^9, 3.68954476230765*^9}, 3.689545168213032*^9, 
   3.689546429705323*^9, {3.689546482454855*^9, 3.6895465584438133`*^9}, 
   3.689546601600276*^9, {3.689546905878368*^9, 3.68954695683459*^9}, {
   3.689547019501678*^9, 3.689547112784297*^9}, 3.689547188111589*^9, {
   3.689547328139909*^9, 3.689547337961381*^9}, {3.689547392001549*^9, 
   3.689547405832075*^9}, 3.689547491195188*^9, 3.689547723525927*^9, 
   3.689547904659436*^9, 3.689548067795979*^9, 3.689548230857149*^9, {
   3.68954829060436*^9, 3.68954830815442*^9}, {3.689548467647175*^9, 
   3.6895484920540648`*^9}, 3.689549884433457*^9, {3.68954991849999*^9, 
   3.689549940882893*^9}, 3.689549975192648*^9, 3.689550057047502*^9, {
   3.689550152715611*^9, 3.689550174934835*^9}, 3.6895502091821136`*^9, 
   3.6895504624428387`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distribution", " ", "=", " ", 
  RowBox[{"EstimatedDistribution", "[", 
   RowBox[{"rand", ",", " ", 
    RowBox[{"ExponentialDistribution", "[", "\[Lambda]", "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.689533379794179*^9, 3.689533414342951*^9}, {
   3.689533538878354*^9, 3.689533547415498*^9}, 3.689534349729774*^9, 
   3.689534706331526*^9}],

Cell[BoxData[
 RowBox[{"ExponentialDistribution", "[", "4.390780228654946`", 
  "]"}]], "Output",
 CellChangeTimes->{
  3.689534709735973*^9, {3.689534743167547*^9, 3.6895347567794523`*^9}, {
   3.689534813320621*^9, 3.68953484403725*^9}, 3.689535667978613*^9, 
   3.689537682180717*^9, {3.6895377628391457`*^9, 3.689537783251019*^9}, 
   3.689537822667183*^9, 3.689538227182398*^9, 3.68953830167929*^9, 
   3.689538403320284*^9, {3.689538478234755*^9, 3.689538506480606*^9}, 
   3.68953873654795*^9, 3.6895388424018583`*^9, 3.689539358601345*^9, 
   3.689539391219241*^9, 3.689539439824915*^9, 3.689542863823389*^9, 
   3.689542913958976*^9, 3.6895430276191053`*^9, 3.689543583171228*^9, {
   3.689543631807252*^9, 3.689543644442699*^9}, 3.6895438496658382`*^9, 
   3.68954410731563*^9, {3.689544146224905*^9, 3.6895441702371197`*^9}, {
   3.689544234802166*^9, 3.689544289645084*^9}, {3.689544328194907*^9, 
   3.6895443545457163`*^9}, {3.6895443952091913`*^9, 3.689544408481147*^9}, 
   3.689544593391609*^9, {3.689544726423318*^9, 3.6895447623437347`*^9}, 
   3.6895451682499647`*^9, 3.6895464297951593`*^9, {3.68954648254078*^9, 
   3.689546558537128*^9}, 3.689546601816182*^9, {3.689546906067281*^9, 
   3.689546957004876*^9}, {3.68954701957183*^9, 3.689547112819861*^9}, 
   3.689547188147059*^9, {3.6895473281748943`*^9, 3.68954733800744*^9}, {
   3.689547392026311*^9, 3.689547405867125*^9}, 3.689547491243353*^9, 
   3.689547723612935*^9, 3.689547904734455*^9, 3.689548067977401*^9, 
   3.6895482308948383`*^9, {3.6895482906422873`*^9, 3.689548308189352*^9}, {
   3.689548467678581*^9, 3.6895484920876217`*^9}, 3.6895498844816027`*^9, {
   3.6895499185384197`*^9, 3.689549940919262*^9}, 3.689549975237121*^9, 
   3.689550057084468*^9, {3.689550152757269*^9, 3.689550174999723*^9}, 
   3.689550209215979*^9, 3.689550462701212*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProbabilityPlot", "[", 
  RowBox[{"rand", ",", " ", "distribution"}], "]"}]], "Input",
 CellChangeTimes->{{3.689533572968631*^9, 3.689533582949996*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0], 
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      PointBox[CompressedData["
1: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
B3NmH2oIz+vBkV8rNwqvpfVcPVo9Zm3VvKrFGMLzeqybl2TSGldL67t67Lk+
QjQnsxbnCM/r8b53zb/5NbW03qtHbdSYJCtmnyoJz+uR3mpuOJdpt9d/9Xh4
Z658mKIWIwnP6/Htn/4DubqW1oP1MD7n4drRoA6nCc/rcaZ19ZirvepofVgP
/6FJ0l5GdSgjPK/Hq6oSabxJHa0XG1AU5WTow+zrMMLzBtw+eoXXsrmO1o8N
MFBuz9vkVocThOcNsCs732lETB2tJxvQsYfPwKsFdSgmPG8Af8TTzC2ldbS+
bEDfQMPlYRV1GEJ43oBXo9d9Sauso/VmA1aNXtHta10djhKeN2Cs2bsNI7l1
tP5swKAZe3WMeHUoIDxvgGvPm4lPf9bRerQB9T/ujnXsXo+BhOcNeL39c63h
iHpanzYgNvZmiOGEehwiPG/ElzOfrqXa1tN6tRHBFZOcUpzqkUt4zrwvtQvc
s7ue1q/M+5er46/sr0d/wvNGyFPctm88UU/r2UZ8WyHu3+JfjwOE540Iu5aT
7BVfT+vbRvz1HBZxLLcemYTnjbixz2KjaW09rXcbET7PubRLcz3+R3jeiMsx
PRO/tNbT+rcRybrrC9u+1mMv4Xkj5vIcRtp1a6D1cCP4CY0D1jH7mEZ43ojp
/15mHzZsoPVxIyIsxS9+zG+AEeF5Ex7vL7wzd1cDrZeb0Nzyc/CTGw3YSXje
xPAwQFf3XgOtn5sw6Jwo5VdgA1IIz5sQdLvzYe+nDbSebsLF3KMXzRMb0IPw
vAnVi19dMn/XQOvrJkzS4fnxPjRgK+F5EwLHXDB8nN1A6+0mNHpIezXxGpBA
eN6EZYH9rt5ubaD1dxPyEo9ITv5qQDfC8yb8XHCt5YBuI63Hm/C7aZHXmZmN
2ER43gRD42X9zsxrpPU5F7773rzyW96IanLfufBfsK8uyb6R1utcjOp++0WG
cyPOk/vPheeT9d+t3Rpp/c5F1sUSmwambUXiARcWD9N+S2410nqeCzOf2/H3
VI3gkPjAxcUTIw1y2hppfc+FbcqvuaF/G+FN4gUXlvoO3wK7NtF6n4tp53fM
dujZhFEkfnDRmtw1aX2vJlr/c1HBf9C6f1ATKkg84WLdVF3JwXlNVA9g5jN4
2Ym3Lk3U7+ain+ufqRF+TVQf4ILf9qBlfHgTLEm8YcarObDjYUQT1Qu4WPiv
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
rsGitu8PRW0a6p834/8ugrEV
       "]]}, {}, {}}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{}, 
    StyleBox[
     LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
      0.9999999795918367, 0.9999999795918367}}], 
     Directive[
      RGBColor[0.368417, 0.506779, 0.709798], 
      AbsoluteThickness[1.6], 
      Dashing[{0, Small}]], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{456., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.689533590391657*^9, 3.6895336116567*^9}, 
   3.689533969298602*^9, {3.68953413988655*^9, 3.6895341477168827`*^9}, 
   3.689534353046999*^9, {3.6895344430028963`*^9, 3.689534463773303*^9}, 
   3.6895345949301157`*^9, {3.6895346545290737`*^9, 3.689534710021469*^9}, {
   3.689534743398395*^9, 3.68953475694456*^9}, {3.689534813482895*^9, 
   3.6895348444828663`*^9}, 3.689535668141953*^9, 3.689537682355427*^9, {
   3.6895377629654503`*^9, 3.689537783354022*^9}, 3.689537822789391*^9, 
   3.6895382272991867`*^9, 3.689538301787891*^9, 3.6895384034510107`*^9, {
   3.6895384783458157`*^9, 3.6895385065915737`*^9}, 3.6895387366672287`*^9, 
   3.689538842522604*^9, 3.689539358717422*^9, 3.689539391367038*^9, 
   3.6895394399209948`*^9, 3.689542863992929*^9, 3.689542914120322*^9, 
   3.689543027818576*^9, 3.689543583284548*^9, {3.689543631957163*^9, 
   3.6895436447228003`*^9}, 3.6895438498621483`*^9, 3.68954410744659*^9, {
   3.689544146334201*^9, 3.68954417034158*^9}, {3.689544234905164*^9, 
   3.689544289748973*^9}, {3.689544328303301*^9, 3.689544354647196*^9}, {
   3.6895443953418293`*^9, 3.68954440860089*^9}, 3.689544593493018*^9, {
   3.689544726533453*^9, 3.689544762447854*^9}, 3.6895451683582077`*^9, 
   3.6895464300115*^9, {3.689546482695443*^9, 3.689546558692358*^9}, 
   3.689546602024852*^9, {3.689546906268605*^9, 3.689546957163858*^9}, {
   3.689547019694915*^9, 3.689547112987039*^9}, 3.6895471883858633`*^9, {
   3.68954732828305*^9, 3.6895473381714993`*^9}, {3.6895473921275797`*^9, 
   3.68954740597293*^9}, 3.689547491366248*^9, 3.68954772371749*^9, 
   3.6895479048386927`*^9, 3.689548068142748*^9, 3.6895482310050373`*^9, {
   3.689548290755014*^9, 3.6895483083066807`*^9}, {3.689548467790887*^9, 
   3.6895484921962137`*^9}, 3.689549884611446*^9, {3.689549918650948*^9, 
   3.689549941035203*^9}, 3.68954997536731*^9, 3.689550057202229*^9, {
   3.689550152878338*^9, 3.689550175117899*^9}, 3.689550209336187*^9, 
   3.6895504628832903`*^9},ImageCache->GraphicsData["CompressedBitmap", "\<\
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
uvxJNt99/wXoYlpX\
\>"]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution 2", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.6895338949799557`*^9, 3.689533895035796*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rand", " ", "=", " ", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"2", ",", " ", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindDistribution", "[", "rand", "]"}]}], "Input",
 CellChangeTimes->{{3.6895336048108873`*^9, 3.689533607701769*^9}, {
  3.689534024547531*^9, 3.689534051003106*^9}, {3.689534109283185*^9, 
  3.689534109515553*^9}}],

Cell[BoxData[
 RowBox[{"GeometricDistribution", "[", "0.06306363120388472`", 
  "]"}]], "Output",
 CellChangeTimes->{{3.6895341400950193`*^9, 3.6895341479270372`*^9}, 
   3.6895343534344397`*^9, {3.689534443305385*^9, 3.689534464186577*^9}, 
   3.689534595272894*^9, {3.6895346548513727`*^9, 3.689534710305848*^9}, {
   3.6895347437092257`*^9, 3.689534757330789*^9}, {3.689534813820709*^9, 
   3.6895348449935837`*^9}, 3.6895356685487223`*^9, 3.6895376833711*^9, {
   3.68953776320158*^9, 3.689537783546863*^9}, 3.6895378229834023`*^9, 
   3.6895382274904613`*^9, 3.68953830198941*^9, 3.689538403641522*^9, {
   3.689538478574251*^9, 3.689538506783786*^9}, 3.689538736871461*^9, 
   3.689538842720182*^9, 3.6895393589286823`*^9, 3.689539391614729*^9, 
   3.68953944014534*^9, 3.689542864295827*^9, 3.689542914380354*^9, 
   3.689543028757347*^9, 3.689543583451846*^9, {3.689543632232503*^9, 
   3.689543644987267*^9}, 3.689543850227537*^9, 3.6895441076376534`*^9, {
   3.689544146509755*^9, 3.689544170534968*^9}, {3.689544235087489*^9, 
   3.68954428995084*^9}, {3.68954432851411*^9, 3.6895443548381968`*^9}, {
   3.689544395526805*^9, 3.68954440878899*^9}, 3.6895445936480923`*^9, {
   3.689544726732439*^9, 3.68954476260892*^9}, 3.689545168509758*^9, 
   3.689546430378443*^9, {3.689546483171784*^9, 3.689546559056982*^9}, 
   3.689546602277422*^9, {3.689546906524336*^9, 3.6895469574190607`*^9}, {
   3.6895470198483953`*^9, 3.6895471132439947`*^9}, 3.6895471886170063`*^9, {
   3.689547328495048*^9, 3.68954733835338*^9}, {3.6895473923575077`*^9, 
   3.689547406213299*^9}, 3.689547491524023*^9, 3.689547723877626*^9, 
   3.6895479050124702`*^9, 3.689548068399791*^9, 3.689548231186761*^9, {
   3.6895482909246073`*^9, 3.689548308468177*^9}, {3.689548467954561*^9, 
   3.689548492360215*^9}, 3.6895498847902813`*^9, {3.689549918818871*^9, 
   3.6895499411985197`*^9}, 3.68954997553283*^9, 3.689550057363467*^9, {
   3.689550153043045*^9, 3.6895501753083344`*^9}, 3.689550209561142*^9, 
   3.689550463147152*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"distribution", "=", 
  RowBox[{"EstimatedDistribution", "[", 
   RowBox[{"rand", ",", 
    RowBox[{"GeometricDistribution", "[", "p", "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ProbabilityPlot", "[", 
  RowBox[{"rand", ",", "distribution"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6894462406355743`*^9, 3.6894462815669537`*^9}, {
   3.689534117291175*^9, 3.6895341433629007`*^9}, 3.689534704151188*^9}],

Cell[BoxData[
 RowBox[{"GeometricDistribution", "[", "0.06306363120388472`", 
  "]"}]], "Output",
 CellChangeTimes->{{3.689534135827198*^9, 3.689534148033876*^9}, 
   3.689534353587864*^9, {3.689534443427446*^9, 3.68953446433974*^9}, 
   3.6895345954553556`*^9, {3.6895346550101213`*^9, 3.6895347104077063`*^9}, {
   3.689534743800795*^9, 3.689534757426742*^9}, {3.689534813858143*^9, 
   3.6895348454055223`*^9}, 3.689535668586074*^9, 3.6895376834394617`*^9, {
   3.68953776324467*^9, 3.689537783589563*^9}, 3.689537823017864*^9, 
   3.689538227524414*^9, 3.689538302030568*^9, 3.689538403674904*^9, {
   3.689538478610649*^9, 3.689538506823472*^9}, 3.689538736919037*^9, 
   3.689538842768504*^9, 3.689539358967229*^9, 3.689539391658325*^9, 
   3.6895394401807013`*^9, 3.689542864324253*^9, 3.68954291446738*^9, 
   3.689543028862178*^9, 3.6895435835255527`*^9, {3.689543632313387*^9, 
   3.689543645073723*^9}, 3.689543850263041*^9, 3.6895441076705723`*^9, {
   3.689544146546877*^9, 3.689544170566634*^9}, {3.689544235164865*^9, 
   3.689544289984437*^9}, {3.6895443285505123`*^9, 3.689544354876341*^9}, {
   3.6895443955638943`*^9, 3.68954440882906*^9}, 3.689544593678657*^9, {
   3.689544726775305*^9, 3.689544762640101*^9}, 3.689545168542288*^9, 
   3.689546430424913*^9, {3.689546483262001*^9, 3.689546559150601*^9}, 
   3.689546602366572*^9, {3.689546906616816*^9, 3.689546957613304*^9}, {
   3.6895470198973637`*^9, 3.689547113286831*^9}, 3.689547188654814*^9, {
   3.689547328529756*^9, 3.689547338392747*^9}, {3.689547392394228*^9, 
   3.689547406244733*^9}, 3.689547491573174*^9, 3.689547723913155*^9, 
   3.689547905043936*^9, 3.689548068489943*^9, 3.6895482312315273`*^9, {
   3.689548290964349*^9, 3.689548308504673*^9}, {3.6895484679896927`*^9, 
   3.689548492402623*^9}, 3.689549884843664*^9, {3.689549918867106*^9, 
   3.6895499412419786`*^9}, 3.6895499755801077`*^9, 3.6895500574156237`*^9, {
   3.689550153079364*^9, 3.689550175353469*^9}, 3.689550209596445*^9, 
   3.689550463216827*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0], 
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwdlHtQVGUYxneIGEIGHWIESRrcdkgkBEoTJHtiaCHCS6QuAgsiF4fh7o7I
ZYmgdISQy2KtzDjIApExNrAio9yEDQiIkESWYEHuLMvunj0fZg4RGZ1z/jhz
/jjzfvP7fs/znj0xaZ/Hm/F4PCHzsO9Jidx1TaDEqaX6m33OSvDsSzY+EHZD
KUmQmXK7odjKdb7T2g+ribr0I1YD8JZGHQ4RP8IXOBjVHjSMU+/FTsUOjeLo
oSK/aO1jyJMu5Se0qDHKn97IS1RDVVh36FzaBMxFNu7NVRNICGsoFP6nATdu
PYXHf/N3zsQ+xcj6SYbgKb4XjdX01M4iznfuRMmNWez2kaffi5qH1K4xcCFn
Hrd/s614LWIBF46wRAuw5NesZgQuIqnz4nUH80WUpnSJNwRL8OZwFuESerzu
8l9LiCzrebFXvIQsazf/jfvL2FJn6V28llFZ+v43+1K0qBPef/5SvYyEsnXJ
rP0K0m2/Vg3VaNF4tkM68mAFiYwNHFxB1z2X9B+P6WBj5nZ1p2YFYQE7XLZP
6aBk6OwadUiXSfbfjFwFb5w9fxVJSwek05OrGOXutwq/9S//OX1Uj0yGVmSj
R5YmYG9hqx5OHjMCiwI9rFAr1zkZsEvDGtHDIaciZTHXgPIbqQyRAe/MNy/O
jRtQmqzbbHhmQHVLdMNHrkYcsPxpd3icEfKM3yPOZhoRyQk0YqQ9d6ZcZYRn
cxW53W/EaE3qA8GrFPYz9CPrRtia16TGCynkc4FQ8Dm3pa4soKDm8qPQIvU/
zWun8ITjp7DpsO2whqZQz/miYCeQrImdTRBwhaEwLMsO+Pm4CesvWcEmKMbz
6r1zTHjx5FjMjjMmdKS9EvRnrQmBxewFTKh05EkcfzVByKTFn2bmIjflU5QJ
PdWOjBEaoYP2sjAbGn5cAWnI+j7t73CnoWLjFtEYNeg/eyuYRleQNZMIjeyB
NoHyPI3ON68YQ1ppDIl/8MrPp+HL9YGGdlfw5aZKGmWcPxrdipS4M000fNg6
mhGMZV+7cL2PRuvgpa5qR4Leh4qHmZM0SthxPoHFoMeKo5GGNavblyDZc9BN
9i+NYlbnSQKtKvGrW/sIorm+EXz76O24170JrAq+8y9OJlBcbbNo+phgjrHb
eZGgaiwsrzyCIIrLi2D4brwniSew5PaFYCCjd1mVRTDDLQgBv/cTp4Aigmau
bwTBCs/wsFsEYp8Whpig+Jf8ou4WAi8ub4KObRXJeW0MN1vXEYK4dwUeb/QQ
TLPrPEHg/izm7okxAiV7nTnmu9jcdc8fBFdYXB1z/vNajTshCOdwCEJE+u0f
bhB4cP0hCD0fc2d4i4D9l/B4a/gfZ6A+3w==
       "]]}, {}, {}}}, {}, {}, {{}, {}}},
  
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{}, 
    StyleBox[
     LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
      0.9999999795918367, 0.9999999795918367}}], 
     Directive[
      RGBColor[0.368417, 0.506779, 0.709798], 
      AbsoluteThickness[1.6], 
      Dashing[{0, Small}]], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.689534135827198*^9, 3.689534148033876*^9}, 
   3.689534353587864*^9, {3.689534443427446*^9, 3.68953446433974*^9}, 
   3.6895345954553556`*^9, {3.6895346550101213`*^9, 3.6895347104077063`*^9}, {
   3.689534743800795*^9, 3.689534757426742*^9}, {3.689534813858143*^9, 
   3.6895348454055223`*^9}, 3.689535668586074*^9, 3.6895376834394617`*^9, {
   3.68953776324467*^9, 3.689537783589563*^9}, 3.689537823017864*^9, 
   3.689538227524414*^9, 3.689538302030568*^9, 3.689538403674904*^9, {
   3.689538478610649*^9, 3.689538506823472*^9}, 3.689538736919037*^9, 
   3.689538842768504*^9, 3.689539358967229*^9, 3.689539391658325*^9, 
   3.6895394401807013`*^9, 3.689542864324253*^9, 3.68954291446738*^9, 
   3.689543028862178*^9, 3.6895435835255527`*^9, {3.689543632313387*^9, 
   3.689543645073723*^9}, 3.689543850263041*^9, 3.6895441076705723`*^9, {
   3.689544146546877*^9, 3.689544170566634*^9}, {3.689544235164865*^9, 
   3.689544289984437*^9}, {3.6895443285505123`*^9, 3.689544354876341*^9}, {
   3.6895443955638943`*^9, 3.68954440882906*^9}, 3.689544593678657*^9, {
   3.689544726775305*^9, 3.689544762640101*^9}, 3.689545168542288*^9, 
   3.689546430424913*^9, {3.689546483262001*^9, 3.689546559150601*^9}, 
   3.689546602366572*^9, {3.689546906616816*^9, 3.689546957613304*^9}, {
   3.6895470198973637`*^9, 3.689547113286831*^9}, 3.689547188654814*^9, {
   3.689547328529756*^9, 3.689547338392747*^9}, {3.689547392394228*^9, 
   3.689547406244733*^9}, 3.689547491573174*^9, 3.689547723913155*^9, 
   3.689547905043936*^9, 3.689548068489943*^9, 3.6895482312315273`*^9, {
   3.689548290964349*^9, 3.689548308504673*^9}, {3.6895484679896927`*^9, 
   3.689548492402623*^9}, 3.689549884843664*^9, {3.689549918867106*^9, 
   3.6895499412419786`*^9}, 3.6895499755801077`*^9, 3.6895500574156237`*^9, {
   3.689550153079364*^9, 3.689550175353469*^9}, 3.689550209596445*^9, 
   3.689550463294682*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution 3", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533896803755*^9, 3.6895338968119373`*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6895193547359962`*^9, 3.689519384748164*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", "=", " ", "1000"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"numbers", " ", "=", " ", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"3", ",", " ", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindDistribution", "[", "numbers", "]"}]}], "Input",
 CellChangeTimes->{{3.689518850334487*^9, 3.6895188853998528`*^9}, {
  3.689518964750946*^9, 3.689518965039699*^9}, {3.689519431451927*^9, 
  3.689519431508032*^9}, {3.689520211943659*^9, 3.689520211999201*^9}}],

Cell[BoxData[
 RowBox[{"GammaDistribution", "[", 
  RowBox[{"8.162106443831467`", ",", "1.5465039482727485`"}], "]"}]], "Output",\

 CellChangeTimes->{{3.689534444139079*^9, 3.689534465007646*^9}, 
   3.6895345961679277`*^9, {3.689534655824251*^9, 3.689534711390106*^9}, {
   3.68953474456621*^9, 3.689534758407353*^9}, {3.689534814653019*^9, 
   3.689534846651812*^9}, 3.689535669761858*^9, 3.689537684214677*^9, {
   3.689537763969582*^9, 3.689537784250375*^9}, 3.6895378237335377`*^9, 
   3.6895382281828413`*^9, 3.689538303191383*^9, 3.6895384044349823`*^9, {
   3.6895384793462067`*^9, 3.6895385082246304`*^9}, 3.68953873766258*^9, 
   3.6895388438517*^9, 3.689539359712551*^9, 3.689539392392177*^9, 
   3.689539440993738*^9, 3.689542864937956*^9, 3.6895429153285*^9, 
   3.689543029799025*^9, 3.6895435842387333`*^9, {3.689543633053411*^9, 
   3.689543645988039*^9}, 3.6895438510147457`*^9, 3.689544108347809*^9, {
   3.689544147295177*^9, 3.6895441716832123`*^9}, {3.6895442358651533`*^9, 
   3.689544260869259*^9}, 3.689544290985159*^9, {3.689544329180629*^9, 
   3.689544355540021*^9}, {3.6895443963332987`*^9, 3.689544409686976*^9}, 
   3.6895445942929983`*^9, {3.6895447273307877`*^9, 3.6895447632560167`*^9}, 
   3.689545169194901*^9, 3.6895464312343607`*^9, {3.689546484023093*^9, 
   3.689546559910474*^9}, 3.6895466031435747`*^9, {3.6895469073920603`*^9, 
   3.6895469585513573`*^9}, {3.689547020550891*^9, 3.6895471138768663`*^9}, 
   3.689547189260393*^9, {3.689547329221434*^9, 3.689547339012793*^9}, {
   3.68954739304668*^9, 3.689547407100292*^9}, 3.689547492651648*^9, 
   3.6895477245888443`*^9, 3.6895479057184277`*^9, 3.689548069368793*^9, 
   3.689548231833757*^9, {3.689548291672206*^9, 3.68954830910649*^9}, {
   3.6895484686248627`*^9, 3.689548493051921*^9}, 3.6895498855589447`*^9, {
   3.68954991948007*^9, 3.6895499423122377`*^9}, 3.68954997626657*^9, 
   3.689550058107773*^9, {3.689550153674375*^9, 3.689550176018314*^9}, 
   3.689550210205366*^9, 3.689550463884282*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distribution", "=", 
  RowBox[{"EstimatedDistribution", "[", 
   RowBox[{"numbers", ",", 
    RowBox[{"GammaDistribution", "[", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6894457827041025`*^9, 3.689445792818949*^9}, {
   3.689521165826191*^9, 3.689521191540586*^9}, 3.689534459872918*^9, 
   3.689534702127749*^9}],

Cell[BoxData[
 RowBox[{"GammaDistribution", "[", 
  RowBox[{"7.937763150851854`", ",", "1.6279233342261024`"}], "]"}]], "Output",\

 CellChangeTimes->{
  3.689534711471011*^9, {3.689534744750445*^9, 3.68953475876896*^9}, {
   3.689534814840917*^9, 3.689534847059107*^9}, 3.689535669970004*^9, 
   3.689537684272418*^9, {3.689537764014455*^9, 3.6895377842885303`*^9}, 
   3.689537823767667*^9, 3.689538228222048*^9, 3.689538303267561*^9, 
   3.6895384044760103`*^9, {3.689538479385046*^9, 3.6895385082976093`*^9}, 
   3.6895387377080297`*^9, 3.689538843901309*^9, 3.689539359764022*^9, 
   3.689539392519229*^9, 3.689539441041898*^9, 3.6895428649770107`*^9, 
   3.689542915445382*^9, 3.6895430298864202`*^9, 3.689543584293867*^9, {
   3.68954363321978*^9, 3.689543646075549*^9}, 3.689543851184183*^9, 
   3.6895441084490433`*^9, {3.689544147332181*^9, 3.689544171744953*^9}, {
   3.689544235898046*^9, 3.689544260903083*^9}, 3.6895442910766077`*^9, {
   3.689544329218642*^9, 3.6895443556150017`*^9}, {3.689544396425849*^9, 
   3.6895444097646427`*^9}, 3.689544594375486*^9, {3.689544727371376*^9, 
   3.6895447633443613`*^9}, 3.689545169275008*^9, 3.68954643140543*^9, {
   3.68954648419212*^9, 3.689546560087743*^9}, 3.6895466033125763`*^9, {
   3.689546907571699*^9, 3.689546958641048*^9}, {3.689547020686946*^9, 
   3.689547113929317*^9}, 3.689547189301752*^9, {3.689547329256991*^9, 
   3.689547339050404*^9}, {3.689547393079137*^9, 3.689547407152203*^9}, 
   3.689547492759046*^9, 3.689547724656715*^9, 3.689547905779249*^9, 
   3.689548069542083*^9, 3.689548231897747*^9, {3.689548291713051*^9, 
   3.6895483091969643`*^9}, {3.689548468658536*^9, 3.689548493090706*^9}, 
   3.6895498856068153`*^9, {3.68954991957514*^9, 3.689549942361581*^9}, 
   3.6895499763143044`*^9, 3.689550058151836*^9, {3.689550153761744*^9, 
   3.6895501760614643`*^9}, 3.68955021024749*^9, 3.689550464047388*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProbabilityPlot", "[", 
  RowBox[{"numbers", ",", " ", "distribution"}], "]"}]], "Input",
 CellChangeTimes->{{3.689521201612604*^9, 3.689521210932946*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0], 
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      PointBox[CompressedData["
1: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
Hog0dJjD6b8nN5XmizR0Mp6yZ0XvNKzkaR9wGkxVNW5Gemk0f6Rh7OvHFsoV
afgaop1gGvT6/rdyXVUazSdpuH15322jPul4qp1dPvP3mxV2xwel0/yShqD6
kt0q43RYMJtruU46umUmXwmbkk7zTTpc5jiMvtg+A4pW7Q2nQ9ZzvaO8TwbN
P+nouv9LvL1rBu6lkwOMTSdv+YS6Z9B8lI6Am4uS68syME97u6x0VITkHj5b
mUHzUzqMOX8eJjRkQKAdrn8GVuj1mPd0YCbNVxkYNsnuxRHjTFzXpqN1Geja
65zr1FmZNH9lIPvPxPrAJZkwJeVDBmycNzetccuk+SwD8V/yMrYdy0SdNh1U
ZyAoPDzUMi6T5jfm/WdH2PgXZOK89jgPzoTJrQvVUSWZNN9lwsm0ImeKMBMT
tcfRIRPsUXumnP2ZSfNfJpK2FXcIn52FclJeZMKra48nv9dl0XyYCQ/rR5uu
HsjCKe1xqM9Ey4L+q0OPZtH8mIlY4f115z2yMEq7nYdlwfjPii1T0rJovsxC
17/b0t4ycYF2+23LwqZzA8MNcrNo/sxCfN48vYEjs3FE+3hfZiFw9Xr/P5Oz
aT7NQvChIwbcndkw0C6fIAueI95Ur9+bTfNrNkyGfTl73TcbGdrpGWdjuf28
MWPU2TTfZmOmtPI273M29jlrf7Jh4WX1wmVQDs2/2VAduj7EemcOBjDFE5Nh
kZzvecbiQQ7Nx9lIM1iXZ8PECV+1Gzobq9XzxqeG5tD8nIP3B52mtUTmYEe8
dsAcjE+pP5dUkEPzdQ6Ce7p1rRuQi55ntQkqB/t4UUe+LMul+TsHSceNZp7Y
nIv3y7QHJAfTzqZOVDzPpfk8B6lel407ReXCUVvdaXJwpHFafVNCLs3vufh2
xXRR8Mg8dKxkjtu0XMyMeHZ12fg8mu9z4ZlVdtNuah7CtNv5cC4ieiRvjjTN
o/k/F6d0F1x6NSMP6wgec1Gza/XWX0zcxoNc6Oub3WQdzEOr9nE058JvQmR7
72t5lA95yByywtHqbR4Ctbc7Kw9fPzeV3mLiNl4wr6dPvCqozMNK7XAeeVjY
y9Nb3Tmf8iMPMWuqHQzH5eMrwUMejD/YfZnnkU95kod4R/Fyx4f5eKpN7615
mLa3azeDwnzKl3yM7O27txs7Hxba9LwgH9sH5ofFyvIpb/LhmVN1I6hHARTa
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
JzzXoDpkwuGf3zXUP2/C/7lmwTM=
       "]]}, {}, {}}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{}, 
    StyleBox[
     LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
      0.9999999795918367, 0.9999999795918367}}], 
     Directive[
      RGBColor[0.368417, 0.506779, 0.709798], 
      AbsoluteThickness[1.6], 
      Dashing[{0, Small}]], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.68953444450408*^9, 3.689534465322541*^9}, 
   3.689534596524308*^9, {3.6895346564240313`*^9, 3.689534711646373*^9}, {
   3.689534745194306*^9, 3.689534759204048*^9}, {3.689534815108943*^9, 
   3.689534847458797*^9}, 3.6895356701818037`*^9, 3.6895376844049263`*^9, {
   3.689537764144908*^9, 3.68953778441055*^9}, 3.6895378238901377`*^9, 
   3.689538228343923*^9, 3.68953830338907*^9, 3.689538404597847*^9, {
   3.6895384795007353`*^9, 3.689538508666958*^9}, 3.689538737836672*^9, 
   3.6895388440829773`*^9, 3.689539359907892*^9, 3.689539392766872*^9, 
   3.689539441177795*^9, 3.689542865104023*^9, 3.6895429156191874`*^9, 
   3.68954303000653*^9, 3.689543584416645*^9, {3.689543633387108*^9, 
   3.689543646252157*^9}, 3.689543851356389*^9, 3.6895441086338577`*^9, {
   3.689544147452384*^9, 3.689544171922757*^9}, {3.689544236023426*^9, 
   3.689544261017956*^9}, 3.689544291197506*^9, {3.6895443293855247`*^9, 
   3.6895443558150063`*^9}, {3.6895443965910378`*^9, 3.6895444099079027`*^9}, 
   3.689544594498097*^9, {3.6895447275123796`*^9, 3.689544763484271*^9}, 
   3.6895451693991737`*^9, 3.689546431581023*^9, {3.689546484372596*^9, 
   3.689546560261937*^9}, 3.6895466035491667`*^9, {3.6895469078289223`*^9, 
   3.689546958835753*^9}, {3.689547020881212*^9, 3.689547114083824*^9}, 
   3.68954718942733*^9, {3.689547329393697*^9, 3.6895473392130547`*^9}, {
   3.689547393184917*^9, 3.689547407290513*^9}, 3.6895474929184504`*^9, 
   3.689547724786868*^9, 3.6895479059133883`*^9, 3.689548069725429*^9, 
   3.689548232045833*^9, {3.6895482918412046`*^9, 3.689548309326187*^9}, {
   3.689548468789475*^9, 3.689548493220235*^9}, 3.689549885756509*^9, {
   3.689549919705326*^9, 3.689549942551358*^9}, 3.6895499764472427`*^9, 
   3.689550058289464*^9, {3.6895501539210873`*^9, 3.68955017620573*^9}, 
   3.689550210385879*^9, 3.6895504642190647`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution 4", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533908027934*^9, 3.689533908067677*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6895193547359962`*^9, 3.689519384748164*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", "=", " ", "100"}], ";"}]], "Input",
 CellChangeTimes->{{3.689534752791752*^9, 3.689534753015232*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"numbers", " ", "=", " ", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"4", ",", " ", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindDistribution", "[", "numbers", "]"}]}], "Input",
 CellChangeTimes->{{3.689518850334487*^9, 3.6895188853998528`*^9}, {
  3.689518964750946*^9, 3.689518965039699*^9}, {3.689519431451927*^9, 
  3.689519431508032*^9}, {3.689520211943659*^9, 3.689520211999201*^9}, {
  3.689521260953339*^9, 3.689521261000741*^9}}],

Cell[BoxData[
 RowBox[{"NormalDistribution", "[", 
  RowBox[{"4.17024130457591`", ",", "4.648940018857836`"}], "]"}]], "Output",
 CellChangeTimes->{
  3.689534597069957*^9, {3.6895346570080442`*^9, 3.689534712267983*^9}, {
   3.689534745845541*^9, 3.689534759949996*^9}, {3.689534815561721*^9, 
   3.6895348483369207`*^9}, 3.689535670690798*^9, 3.689537685168766*^9, {
   3.689537765274744*^9, 3.6895377856817408`*^9}, 3.689537824518965*^9, 
   3.6895382287079163`*^9, 3.689538303903864*^9, 3.689538405179137*^9, {
   3.6895384803971252`*^9, 3.689538509391769*^9}, 3.689538738185233*^9, 
   3.6895388446647463`*^9, 3.6895393603062677`*^9, 3.6895393937920437`*^9, 
   3.6895394416058273`*^9, 3.68954286564505*^9, 3.6895429167928963`*^9, 
   3.6895430307193737`*^9, 3.6895435849629087`*^9, {3.6895436339579973`*^9, 
   3.689543647012188*^9}, 3.6895438518482313`*^9, 3.6895441094687967`*^9, {
   3.6895441485640593`*^9, 3.689544172258814*^9}, {3.6895442364590673`*^9, 
   3.689544261475285*^9}, 3.689544291882872*^9, {3.689544329992324*^9, 
   3.689544356248098*^9}, {3.689544397665283*^9, 3.689544410304448*^9}, 
   3.689544595243319*^9, {3.68954472813696*^9, 3.68954476383187*^9}, 
   3.689545170098588*^9, 3.6895464323493013`*^9, {3.689546485199449*^9, 
   3.689546560721558*^9}, 3.689546603984144*^9, {3.689546908429324*^9, 
   3.689546959495688*^9}, {3.689547021661849*^9, 3.689547114477304*^9}, 
   3.689547190042831*^9, {3.689547329804161*^9, 3.689547339885006*^9}, {
   3.68954739368417*^9, 3.68954740800998*^9}, 3.68954749324718*^9, 
   3.6895477252734203`*^9, 3.689547906229653*^9, 3.689548070502413*^9, 
   3.6895482329107513`*^9, {3.689548292164907*^9, 3.6895483105049562`*^9}, {
   3.689548469175844*^9, 3.68954849383648*^9}, 3.689549886333091*^9, {
   3.689549920023944*^9, 3.6895499429502497`*^9}, 3.689549976783071*^9, 
   3.68955005877941*^9, {3.689550154315872*^9, 3.68955017702483*^9}, 
   3.689550210743924*^9, 3.689550464635682*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distribution", "=", 
  RowBox[{"EstimatedDistribution", "[", 
   RowBox[{"numbers", ",", " ", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6895213330182333`*^9, 3.689521352880495*^9}}],

Cell[BoxData[
 RowBox[{"NormalDistribution", "[", 
  RowBox[{"4.190127447086443`", ",", "4.464735370890016`"}], "]"}]], "Output",\

 CellChangeTimes->{
  3.689534597160275*^9, {3.68953465711493*^9, 3.689534712425088*^9}, {
   3.689534746014035*^9, 3.689534760063904*^9}, {3.689534815653738*^9, 
   3.689534848460558*^9}, 3.6895356707813377`*^9, 3.689537685209765*^9, {
   3.689537765330635*^9, 3.689537785788186*^9}, 3.6895378245935698`*^9, 
   3.689538228796575*^9, 3.689538303956729*^9, 3.6895384052531137`*^9, {
   3.6895384805203648`*^9, 3.6895385094648438`*^9}, 3.689538738259465*^9, 
   3.689538844705562*^9, 3.6895393605876637`*^9, 3.689539393838455*^9, 
   3.689539441670475*^9, 3.689542865679397*^9, 3.689542916962096*^9, 
   3.68954303076322*^9, 3.689543584996457*^9, {3.689543634039853*^9, 
   3.689543647098214*^9}, 3.6895438519308434`*^9, 3.689544109601993*^9, {
   3.689544148655931*^9, 3.6895441722912893`*^9}, {3.689544236544367*^9, 
   3.6895442615098953`*^9}, 3.689544291910788*^9, {3.6895443300325623`*^9, 
   3.689544356282897*^9}, {3.689544397735579*^9, 3.68954441034056*^9}, 
   3.689544595277399*^9, {3.689544728175688*^9, 3.689544763868034*^9}, 
   3.689545170137452*^9, 3.689546432460744*^9, {3.689546485363359*^9, 
   3.689546560815658*^9}, 3.6895466040741167`*^9, {3.689546908586054*^9, 
   3.6895469595889893`*^9}, {3.689547021797414*^9, 3.68954711451438*^9}, 
   3.689547190083847*^9, {3.689547329843836*^9, 3.689547339922027*^9}, {
   3.68954739371548*^9, 3.689547408047276*^9}, 3.6895474932921133`*^9, 
   3.689547725306225*^9, 3.68954790626513*^9, 3.6895480706608477`*^9, 
   3.689548232972479*^9, {3.689548292249681*^9, 3.689548310564488*^9}, {
   3.689548469232225*^9, 3.6895484939217587`*^9}, 3.68954988639559*^9, {
   3.689549920074019*^9, 3.689549942986932*^9}, 3.689549976853138*^9, 
   3.689550058847535*^9, {3.689550154357353*^9, 3.6895501771059713`*^9}, 
   3.6895502107790747`*^9, 3.689550464696553*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProbabilityPlot", "[", 
  RowBox[{"numbers", ",", " ", "distribution"}], "]"}]], "Input",
 CellChangeTimes->{{3.689521357271723*^9, 3.6895213655975*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0], 
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668],
       AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwtlAtMU3cUh7FqZKAOGRuKwNTxGoibNDqd0R/TKeoUBZHNqFOYaACn+Nis
qIAMIoy5Cb5AAR2KFDVVJhOQRwoFpAjIo1Bogbb0QVv6QAwiTHG7Z5zk5qbp
ved/ft93cueHHg4MY1lYWOz772Lusasj7e2Xc3DKjueniE5A5LXcWlfb3yZ+
X4JHiu3bjsobKHZOHAgozkaLsDT+A2/uxP+34eUa2rQ1gYtrGUzlwzrxkOW8
fYUooed52Iwtd140FcMQwHQogJNQ+U8op2Ti/UL4Z4tWGFRPYCW+FbXSqgj7
2JGSs/pyULuMElzpKeyYe7UCHrv+qBr2KMPUFZPDZ63jo4j6VyDGzdJL9rgK
zNviW3yscVvLYecLMEDnVWJMPWpeVigAm0qA1O8exl4QVk+cXw3PrviY09pq
CIaZE2rga/O911nPGljTPE9RoFi5e2RGLbYRgDpUCA6+Kw+sxXWaT4gj76W/
LE6ohTKaaVgP6UHButE1dfCieRtw1XZzMLdCiGPMeFGNuGBVF3SqVohSmr8J
vzy+Jfslox6TLJhqxlF20O/TOc+QS3maUdQb8jy3sREbFMwBLWDNfRA5Et4M
I+VrQU7++Bz7xy1IrWICtOLdx45bRV+0YgnlbcOV4JDRWfxWdBGgNhT5HKox
HWjDGcovgv5u51ru322Yz4zj3I4Fi197WkwVoYZ4tGNIIfpTnyFC+H6mOlC3
3MYvp6wdM4iPGHLWyTzPMx0o8GMGFCMwp3MsPkyM7cSrE/GzhZXvnxRjlAR2
oq7e260kRows4teF8bKQbZk3xfiKFkCCTRHiR00+nVATTwlueLNda1q7kExC
pXCOygyrmiaBN/HtRl5lY9LkLAlaGpjqxumHnp2tc6T4iXj3YOn9GI/LK6SY
w8S168XGVyt9CoakKCf+vUg75+/yybFuhDDtdsmwePpI/yv3XrDIhxy7Qyz3
braXIYjyyGHD9uLf/1KGO+RHjhdcL9llZzleUz45UjbEzmMVy7GRfCnwWXJu
MH+nApmUV4Gk8HSfLVEKmMifAo3pvqPsZAV8KX8fMhf5v/0wrQ9p5LMPe/zO
mzNH+qCidn2wXFWaPZioxFLyq0R9+FEk8JRIIj5KFPpr+NXDSkhIjxKpjoO8
IVsVFhIvFazXnxpZ7K9CDPlXwcnIe36Po0Iz8VPhTdbVvh+SVFhA+6CGpM4p
b+ieCseJpxqlkx7u3z6mQi3thxp50zY0zAxSYzbx1aDwNspfn1AjgvZFg3HO
qvzraWqUEW8NIgLjYp9p1JhJ+9OPQ6GyXWPvNNhL/PvBPtuX7M7rx1+0T/3I
uLvePa6hH1PIhxYOpXZ+iWwtgsmHFt/m+AoKorXgkg8txgVpOx1DdRgjH1qc
6P9oy82LOmwiHzr4fD3WLOHqkE0+dNhxwTrlwAMdBsmHDt4bWb1HRTqsJh96
8I+/kR9w0eMS+dBj/ZHsaneeHhryoYdk6pMr6cN6LCMfAzB1pMQJUwbw6/8f
IEx3CZgW/WwA3eRjANL2b2SHFxiwiHwY8ONuu3uceUbEkQ8D9vKmvHx72YhW
8mFAREDPkkcOJriQDyOMT8MCPz1hws/kwwi31DQXVpYJdeTDiGgHq3VFHSY4
kA8TmvwNObFKEw6SDxOczgf1WC80o4J8mHBuyenjgZ+bYUM+zJBJXbvt2WaE
kg8z5EEXdziuMaOQfJix2vpJcfUeMyaTj0H8C3i3KM4=
       
       "]]}, {}, {}}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{}, 
    StyleBox[
     LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
      0.9999999795918367, 0.9999999795918367}}], 
     Directive[
      RGBColor[0.368417, 0.506779, 0.709798], 
      AbsoluteThickness[1.6], 
      Dashing[{0, Small}]], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{593., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.689534597325185*^9, {3.689534657286951*^9, 3.689534712578033*^9}, {
   3.689534746179221*^9, 3.6895347602201138`*^9}, {3.689534815848744*^9, 
   3.689534848634171*^9}, 3.689535670984376*^9, 3.689537685311235*^9, {
   3.689537765422201*^9, 3.6895377858758183`*^9}, 3.689537824675428*^9, 
   3.689538228892953*^9, 3.689538304060206*^9, 3.68953840537967*^9, {
   3.68953848073884*^9, 3.6895385095698757`*^9}, 3.689538738355661*^9, 
   3.689538844808022*^9, 3.6895393607029448`*^9, 3.68953939394532*^9, 
   3.6895394417743683`*^9, 3.6895428657727757`*^9, 3.68954291710857*^9, 
   3.689543030867155*^9, 3.689543585096039*^9, {3.689543634174103*^9, 
   3.689543647283317*^9}, 3.6895438520184917`*^9, 3.689544109698008*^9, {
   3.6895441487448397`*^9, 3.689544172379233*^9}, {3.6895442366328278`*^9, 
   3.6895442616017513`*^9}, 3.689544291998733*^9, {3.689544330120461*^9, 
   3.689544356369351*^9}, {3.689544397857148*^9, 3.689544410460438*^9}, 
   3.689544595367689*^9, {3.689544728335722*^9, 3.689544763959929*^9}, 
   3.689545170225299*^9, 3.689546432650443*^9, {3.68954648550872*^9, 
   3.689546560964158*^9}, 3.689546604216631*^9, {3.689546908731718*^9, 
   3.689546959786942*^9}, {3.689547021913437*^9, 3.6895471146060123`*^9}, 
   3.689547190195829*^9, {3.6895473299486113`*^9, 3.689547340024995*^9}, {
   3.6895473938102617`*^9, 3.6895474081488113`*^9}, 3.6895474934069777`*^9, 
   3.689547725401813*^9, 3.6895479063563557`*^9, 3.6895480708035927`*^9, 
   3.689548233066062*^9, {3.6895482923880787`*^9, 3.689548310663698*^9}, {
   3.689548469326087*^9, 3.689548494019877*^9}, 3.689549886492839*^9, {
   3.689549920174336*^9, 3.6895499430829487`*^9}, 3.6895499769710073`*^9, 
   3.689550058942586*^9, {3.689550154459607*^9, 3.689550177261808*^9}, 
   3.6895502108747168`*^9, 3.6895504648567667`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution 5", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533910635722*^9, 3.6895339213557587`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", "=", " ", "1000"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"numbers", " ", "=", " ", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"5", ",", " ", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindDistribution", "[", "numbers", "]"}]}], "Input",
 CellChangeTimes->{{3.689518850334487*^9, 3.6895188853998528`*^9}, {
  3.689518964750946*^9, 3.689518965039699*^9}, {3.689519431451927*^9, 
  3.689519431508032*^9}, {3.689520211943659*^9, 3.689520211999201*^9}, {
  3.689521260953339*^9, 3.689521261000741*^9}, {3.689521402592505*^9, 
  3.689521402640362*^9}}],

Cell[BoxData[
 RowBox[{"BinomialDistribution", "[", 
  RowBox[{"14", ",", "0.23438978240302744`"}], "]"}]], "Output",
 CellChangeTimes->{{3.689534657557785*^9, 3.689534712712695*^9}, {
   3.6895347463796*^9, 3.689534760465695*^9}, {3.689534816190724*^9, 
   3.689534849096017*^9}, 3.68953567121524*^9, 3.6895376862724867`*^9, {
   3.6895377656300917`*^9, 3.68953778604103*^9}, 3.6895378248516273`*^9, 
   3.6895382290473967`*^9, 3.68953830423503*^9, 3.689538405582655*^9, {
   3.6895384808880463`*^9, 3.689538509734865*^9}, 3.6895387385231047`*^9, 
   3.6895388449735622`*^9, 3.689539360880528*^9, 3.689539394140308*^9, 
   3.689539441939115*^9, 3.6895428659030037`*^9, 3.68954291735531*^9, 
   3.689543031033072*^9, 3.689543585227612*^9, {3.689543634517618*^9, 
   3.689543647423025*^9}, 3.68954385236751*^9, 3.689544109866693*^9, {
   3.689544148876684*^9, 3.6895441731554956`*^9}, {3.689544236773436*^9, 
   3.6895442617405167`*^9}, 3.6895442921646633`*^9, {3.689544330263196*^9, 
   3.689544356509254*^9}, {3.689544398046606*^9, 3.689544410611456*^9}, 
   3.6895445955251417`*^9, {3.689544728463265*^9, 3.689544764087595*^9}, 
   3.689545170902575*^9, 3.689546432880554*^9, {3.689546485722061*^9, 
   3.689546561307372*^9}, 3.689546604558346*^9, {3.689546908963457*^9, 
   3.689546960022677*^9}, {3.689547022048675*^9, 3.689547114735991*^9}, 
   3.6895471903325233`*^9, {3.689547330086076*^9, 3.68954734016012*^9}, {
   3.6895473939422293`*^9, 3.6895474083382072`*^9}, 3.6895474935456657`*^9, 
   3.689547725535953*^9, 3.689547906488299*^9, 3.689548071648406*^9, 
   3.689548233204505*^9, {3.689548292528428*^9, 3.689548310799334*^9}, {
   3.689548469464162*^9, 3.6895484941876698`*^9}, 3.689549886641316*^9, {
   3.689549920316586*^9, 3.689549943236309*^9}, 3.689549977145055*^9, 
   3.689550059095923*^9, {3.689550154595811*^9, 3.689550177456209*^9}, 
   3.689550211008716*^9, 3.689550465050178*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distribution", " ", "=", " ", 
  RowBox[{"EstimatedDistribution", "[", 
   RowBox[{"numbers", ",", " ", 
    RowBox[{"BinomialDistribution", "[", 
     RowBox[{"num", ",", " ", "p"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6895214144880867`*^9, 3.689521416244576*^9}, {
  3.689521544232088*^9, 3.6895215659478416`*^9}, {3.689534675072062*^9, 
  3.689534675863736*^9}}],

Cell[BoxData[
 RowBox[{"BinomialDistribution", "[", 
  RowBox[{"12", ",", "0.2763333333333333`"}], "]"}]], "Output",
 CellChangeTimes->{{3.689534657666144*^9, 3.6895347128155537`*^9}, {
   3.68953474648779*^9, 3.689534760580184*^9}, {3.6895348162857313`*^9, 
   3.6895348492001553`*^9}, 3.689535671319265*^9, 3.6895376863572073`*^9, {
   3.68953776569858*^9, 3.689537786091691*^9}, 3.689537824903923*^9, 
   3.6895382291034184`*^9, 3.689538304327793*^9, 3.689538405649189*^9, {
   3.689538480938829*^9, 3.689538509793839*^9}, 3.689538738570217*^9, 
   3.689538845051416*^9, 3.689539360936028*^9, 3.689539394197608*^9, 
   3.689539441991764*^9, 3.689542865949089*^9, 3.689542917449471*^9, 
   3.689543031093508*^9, 3.6895435852779493`*^9, {3.6895436345658283`*^9, 
   3.689543647657599*^9}, 3.689543852416334*^9, 3.689544109925465*^9, {
   3.689544148936159*^9, 3.689544173231769*^9}, {3.689544236822668*^9, 
   3.689544261792248*^9}, 3.689544292215252*^9, {3.689544330311584*^9, 
   3.689544356560379*^9}, {3.68954439811309*^9, 3.689544410670805*^9}, 
   3.689544595581237*^9, {3.6895447285132923`*^9, 3.689544764136643*^9}, 
   3.689545170957547*^9, 3.6895464329885387`*^9, {3.689546485773106*^9, 
   3.689546561367152*^9}, 3.689546604619198*^9, {3.689546909062557*^9, 
   3.6895469602062473`*^9}, {3.689547022108618*^9, 3.689547114790781*^9}, 
   3.689547190387568*^9, {3.689547330139771*^9, 3.6895473403516417`*^9}, {
   3.689547394001711*^9, 3.689547408393002*^9}, 3.689547493615313*^9, 
   3.689547725647255*^9, 3.689547906532159*^9, 3.68954807188551*^9, 
   3.68954823326215*^9, {3.689548292593305*^9, 3.689548310858683*^9}, {
   3.6895484695153418`*^9, 3.689548494242815*^9}, 3.6895498867096148`*^9, {
   3.689549920378997*^9, 3.68954994329943*^9}, 3.689549977210825*^9, 
   3.689550059157617*^9, {3.689550154669859*^9, 3.68955017752885*^9}, 
   3.689550211060213*^9, 3.689550465194002*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProbabilityPlot", "[", 
  RowBox[{"numbers", ",", " ", "distribution"}], "]"}]], "Input",
 CellChangeTimes->{{3.689521570563677*^9, 3.689521584139305*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0], 
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{0.02062827083772212, 0.022}, {0.11515154964640921`, 
       0.11499999999999999`}, {0.31366785076488407`, 0.323}, {
       0.5663471285588582, 0.569}, {0.7834406444064913, 0.772}, {
       0.9160766828313185, 0.91}, {0.9751651928097672, 0.978}, {
       0.9945049472766228, 0.995}, {0.9991205208754894, 
       1.}}]}, {}, {}}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{}, 
    StyleBox[
     LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
      0.9999999795918367, 0.9999999795918367}}], 
     Directive[
      RGBColor[0.368417, 0.506779, 0.709798], 
      AbsoluteThickness[1.6], 
      Dashing[{0, Small}]], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.68953474665606*^9, 3.6895347607470217`*^9}, {
   3.689534816441122*^9, 3.68953484976656*^9}, 3.6895356714712687`*^9, 
   3.6895376864662027`*^9, {3.689537765833898*^9, 3.689537786217157*^9}, 
   3.689537825015236*^9, 3.689538229203247*^9, 3.6895383044250937`*^9, 
   3.6895384057689867`*^9, {3.689538481092243*^9, 3.689538509904228*^9}, 
   3.6895387387003527`*^9, 3.689538845192614*^9, 3.689539361258668*^9, 
   3.68953939431505*^9, 3.689539442106567*^9, 3.689542866048912*^9, 
   3.689542917645001*^9, 3.689543031194498*^9, 3.6895435853814077`*^9, {
   3.689543634728219*^9, 3.689543647756818*^9}, 3.689543852562372*^9, 
   3.689544110094487*^9, {3.6895441490340033`*^9, 3.6895441733492804`*^9}, {
   3.689544236972135*^9, 3.689544261885274*^9}, 3.689544292312667*^9, {
   3.689544330507128*^9, 3.689544356751738*^9}, {3.6895443982367277`*^9, 
   3.6895444107941113`*^9}, 3.689544595678463*^9, {3.689544728662527*^9, 
   3.689544764238871*^9}, 3.689545171063938*^9, 3.689546433139143*^9, {
   3.689546485935089*^9, 3.689546561522229*^9}, 3.689546604768674*^9, {
   3.6895469092146177`*^9, 3.689546960357471*^9}, {3.689547022299986*^9, 
   3.689547115028283*^9}, 3.689547190499291*^9, {3.689547330246949*^9, 
   3.689547340471442*^9}, {3.689547394101478*^9, 3.68954740850642*^9}, 
   3.689547493738002*^9, 3.689547725805955*^9, 3.689547906634595*^9, 
   3.689548072038453*^9, 3.689548233363462*^9, {3.689548292707355*^9, 
   3.6895483109631023`*^9}, {3.6895484696170187`*^9, 3.689548494347644*^9}, 
   3.689549886833123*^9, {3.6895499204897337`*^9, 3.689549943425926*^9}, 
   3.68954997735203*^9, 3.6895500594374638`*^9, {3.689550154792679*^9, 
   3.689550177685766*^9}, 3.689550211173791*^9, 3.689550465320195*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution 6", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533910635722*^9, 3.6895339327476263`*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6895193547359962`*^9, 3.689519384748164*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", "=", " ", "100"}], ";"}]], "Input",
 CellChangeTimes->{3.689534823038959*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"numbers", " ", "=", " ", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"6", ",", " ", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindDistribution", "[", "numbers", "]"}]}], "Input",
 CellChangeTimes->{{3.689518850334487*^9, 3.6895188853998528`*^9}, {
  3.689518964750946*^9, 3.689518965039699*^9}, {3.689519431451927*^9, 
  3.689519431508032*^9}, {3.689520211943659*^9, 3.689520211999201*^9}, {
  3.689521260953339*^9, 3.689521261000741*^9}, {3.689521715216063*^9, 
  3.689521715295082*^9}}],

Cell[BoxData[
 RowBox[{"PoissonDistribution", "[", "10.07843137254902`", "]"}]], "Output",
 CellChangeTimes->{{3.68953481800159*^9, 3.6895348515831003`*^9}, 
   3.689535673880952*^9, 3.689537686973453*^9, {3.689537767321225*^9, 
   3.689537787618403*^9}, 3.689537825456216*^9, 3.68953822967622*^9, 
   3.6895383051334133`*^9, 3.689538407403947*^9, {3.689538481789956*^9, 
   3.689538510467657*^9}, 3.689538739963182*^9, 3.6895388456176853`*^9, 
   3.689539361887919*^9, 3.689539396215872*^9, 3.689539443585421*^9, 
   3.689542866488332*^9, 3.689542919199156*^9, 3.689543032832265*^9, 
   3.689543586527656*^9, {3.6895436353378677`*^9, 3.689543649452526*^9}, 
   3.689543854313629*^9, 3.689544111327628*^9, {3.689544150383402*^9, 
   3.689544173878622*^9}, {3.6895442385949507`*^9, 3.689544263431076*^9}, 
   3.689544293640771*^9, {3.6895443316683273`*^9, 3.689544358703576*^9}, {
   3.689544399672336*^9, 3.689544412323595*^9}, 3.689544597038125*^9, {
   3.68954472987073*^9, 3.6895447655932493`*^9}, 3.689545172460516*^9, 
   3.689546434377842*^9, {3.689546487314843*^9, 3.689546562857975*^9}, 
   3.689546606689108*^9, {3.689546910900647*^9, 3.689546960941153*^9}, {
   3.689547023432486*^9, 3.689547115426642*^9}, 3.6895471920244827`*^9, {
   3.689547331635459*^9, 3.689547341628594*^9}, {3.6895473956733847`*^9, 
   3.689547409878108*^9}, 3.6895474949653683`*^9, 3.689547726748086*^9, 
   3.6895479078986473`*^9, 3.6895480740567713`*^9, 3.689548235235634*^9, {
   3.689548293998938*^9, 3.6895483121074753`*^9}, {3.689548470825965*^9, 
   3.689548495826572*^9}, 3.68954988732139*^9, {3.689549922211832*^9, 
   3.689549943901022*^9}, 3.6895499787833757`*^9, 3.6895500608656797`*^9, {
   3.689550156189492*^9, 3.689550178862391*^9}, 3.689550212701524*^9, 
   3.689550466630472*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distribution", " ", "=", " ", 
  RowBox[{"EstimatedDistribution", "[", 
   RowBox[{"numbers", ",", " ", 
    RowBox[{"PoissonDistribution", "[", "\[Mu]", "]"}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.689521636689365*^9, 3.689521651679364*^9}, {
   3.6895216898633947`*^9, 3.6895217240548363`*^9}, 3.68953484071087*^9, 
   3.689536808722978*^9}],

Cell[BoxData[
 RowBox[{"PoissonDistribution", "[", "10.05`", "]"}]], "Output",
 CellChangeTimes->{
  3.689534851848463*^9, 3.689535674164373*^9, 3.689537687011857*^9, {
   3.689537767390489*^9, 3.689537787674781*^9}, 3.6895378254926767`*^9, 
   3.689538229715208*^9, 3.689538305354002*^9, 3.6895384074643393`*^9, {
   3.6895384818506117`*^9, 3.689538510581874*^9}, 3.6895387400299873`*^9, 
   3.689538845649823*^9, 3.689539361931225*^9, 3.68953939626096*^9, 
   3.689539443850842*^9, 3.689542866557749*^9, 3.689542919364698*^9, 
   3.689543032906507*^9, 3.6895435865818996`*^9, {3.6895436354993896`*^9, 
   3.6895436496310673`*^9}, 3.689543854487966*^9, 3.6895441113888817`*^9, {
   3.689544150501746*^9, 3.689544173924878*^9}, {3.689544238653618*^9, 
   3.689544263495338*^9}, 3.689544293697946*^9, {3.689544331734909*^9, 
   3.689544358835607*^9}, {3.689544399739649*^9, 3.689544412435484*^9}, 
   3.689544597096765*^9, {3.689544729952095*^9, 3.68954476565484*^9}, 
   3.689545172646069*^9, 3.689546434605006*^9, {3.689546487448615*^9, 
   3.689546563795923*^9}, 3.689546606854897*^9, {3.6895469110661373`*^9, 
   3.689546961037633*^9}, {3.6895470235076227`*^9, 3.689547115474522*^9}, 
   3.689547192084632*^9, {3.6895473316970797`*^9, 3.689547341712597*^9}, {
   3.689547395723688*^9, 3.689547409960627*^9}, 3.689547495034939*^9, 
   3.689547726822448*^9, 3.689547907952607*^9, 3.6895480742367077`*^9, 
   3.689548235293508*^9, {3.689548294059669*^9, 3.6895483121663637`*^9}, {
   3.6895484708816433`*^9, 3.689548495893587*^9}, 3.68954988736703*^9, {
   3.689549922293922*^9, 3.6895499439931507`*^9}, 3.689549978930379*^9, 
   3.6895500609523687`*^9, {3.689550156266992*^9, 3.6895501789301567`*^9}, 
   3.68955021276795*^9, 3.6895504667451153`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProbabilityPlot", "[", 
  RowBox[{"numbers", ",", " ", "distribution"}], "]"}]], "Input",
 CellChangeTimes->{{3.689521726984947*^9, 3.689521740463024*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0], 
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{0.00996426677445776, 0.03}, {0.02832091824269642, 0.05}, {
       0.06521778769385614, 0.07}, {0.12702004402454867`, 0.16}, {
       0.21575042632790006`, 0.24}, {0.3272179690964853, 0.3}, {
       0.4516900585214055, 0.39}, {0.57678450839345, 0.54}, {
       0.6910753466856365, 0.6900000000000001}, {0.7867939237553425, 0.79}, {
       0.8607917467976924, 0.87}, {0.913911612624522, 0.92}, {
       0.9495019227284979, 0.9600000000000001}, {0.9718570862625576, 
       0.9800000000000001}, {0.9924517806683103, 0.9900000000000001}, {
       0.9983160713552975, 1.}}]}, {}, {}}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{}, 
    StyleBox[
     LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
      0.9999999795918367, 0.9999999795918367}}], 
     Directive[
      RGBColor[0.368417, 0.506779, 0.709798], 
      AbsoluteThickness[1.6], 
      Dashing[{0, Small}]], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.689534818434407*^9, 3.68953485206444*^9}, 
   3.689535674348456*^9, 3.689537687109518*^9, {3.68953776750394*^9, 
   3.689537787777752*^9}, 3.689537825588957*^9, 3.6895382298136044`*^9, 
   3.689538305519206*^9, 3.6895384075558453`*^9, {3.6895384819500847`*^9, 
   3.6895385108361797`*^9}, 3.689538740120246*^9, 3.689538845747972*^9, 
   3.689539362237821*^9, 3.689539396344946*^9, 3.6895394441592817`*^9, 
   3.689542866645183*^9, 3.689542919523674*^9, 3.6895430330822897`*^9, 
   3.68954358667167*^9, {3.689543635634581*^9, 3.689543649765337*^9}, 
   3.6895438546457977`*^9, 3.689544111474456*^9, {3.689544150592312*^9, 
   3.689544174015645*^9}, {3.689544238752192*^9, 3.689544263596322*^9}, 
   3.6895442937879*^9, {3.6895443318764887`*^9, 3.6895443589504557`*^9}, {
   3.689544399861191*^9, 3.689544412633849*^9}, 3.689544597189128*^9, {
   3.689544730040544*^9, 3.689544765751717*^9}, 3.6895451729705276`*^9, 
   3.689546435385961*^9, {3.689546487604495*^9, 3.6895465640404787`*^9}, 
   3.6895466070020113`*^9, {3.6895469112205553`*^9, 3.689546961298925*^9}, {
   3.689547023621586*^9, 3.689547115581025*^9}, 3.6895471921913443`*^9, {
   3.689547331805689*^9, 3.6895473418110037`*^9}, {3.689547395815445*^9, 
   3.689547410209268*^9}, 3.689547495142658*^9, 3.689547726918688*^9, 
   3.689547908045815*^9, 3.689548074388476*^9, 3.689548235389715*^9, {
   3.6895482941614933`*^9, 3.689548312266033*^9}, {3.689548470976633*^9, 
   3.6895484959917183`*^9}, 3.689549887527831*^9, {3.689549922403631*^9, 
   3.689549944178541*^9}, 3.689549979060069*^9, 3.689550061057317*^9, {
   3.6895501563653717`*^9, 3.689550179042778*^9}, 3.689550212867641*^9, 
   3.6895504668814077`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Point estimates, and confidence intervals, for parameters"
}], "Subsection",
 CellChangeTimes->{{3.68833807029881*^9, 3.688338079218799*^9}, {
  3.6883445611314297`*^9, 3.688344568635379*^9}, {3.689530863222073*^9, 
  3.689530887894001*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, 
   3.688339206676055*^9}],

Cell["", "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, {
  3.688339162508295*^9, 3.688339166187951*^9}, {3.6883424648359222`*^9, 
  3.6883424653138523`*^9}}],

Cell[CellGroupData[{

Cell["Distribution 1 (Exponential distribution)", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533910635722*^9, 3.6895339327476263`*^9}, {3.6895374845826197`*^9, 
  3.6895374846622334`*^9}, {3.689537937020055*^9, 3.68953794256383*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{3.689537584453005*^9}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<HypothesisTesting`\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"amountOfLists", "=", "100"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"listLength", "=", "1000"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrixOfRands", "=", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"amountOfLists", ",", "listLength"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6895368768343763`*^9, 3.689536945129941*^9}, {
  3.689537603813986*^9, 3.6895376038858967`*^9}, {3.6895377576623287`*^9, 
  3.689537759957205*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"find\[Lambda]", "[", "data_", "]"}], ":=", 
   RowBox[{"List", "@@", 
    RowBox[{"EstimatedDistribution", "[", 
     RowBox[{"data", ",", 
      RowBox[{"ExponentialDistribution", "[", "\[Lambda]", "]"}]}], "]"}]}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.689537626293838*^9, 3.689537630205764*^9}, 
   3.6895376749815607`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", "\[Lambda]list", "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"find\[Lambda]", "/@", "matrixOfRands"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.689522088508964*^9, 3.689522091045245*^9}, {
  3.689525525767474*^9, 3.689525533055564*^9}, {3.689537638205762*^9, 
  3.689537655837504*^9}, {3.689537793637046*^9, 3.689537798914296*^9}, {
  3.6895384656649017`*^9, 3.689538471072948*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"conf\[Lambda]", "=", 
  RowBox[{"MeanCI", "[", 
   RowBox[{"\[Lambda]list", ",", " ", 
    RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.6895121961802244`*^9, {3.689537659589612*^9, 3.689537666941614*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.443009263522062`", ",", "4.49927957162626`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.689537687478684*^9, {3.6895377676193323`*^9, 3.6895377879004717`*^9}, 
   3.689537825779601*^9, 3.6895382299928713`*^9, 3.689538305924168*^9, 
   3.6895384077145348`*^9, {3.689538482324613*^9, 3.689538511033368*^9}, 
   3.689538740265155*^9, 3.689538845898408*^9, 3.6895393626843557`*^9, 
   3.6895393965069027`*^9, 3.689539444488196*^9, 3.6895428667815723`*^9, 
   3.689542920078329*^9, 3.689543033289122*^9, 3.6895435868098917`*^9, 
   3.689543650316749*^9, 3.689543855177781*^9, 3.689544111610868*^9, {
   3.68954415077225*^9, 3.6895441742270813`*^9}, {3.689544238947555*^9, 
   3.689544263744665*^9}, 3.689544293933601*^9, {3.6895443321411333`*^9, 
   3.689544359123199*^9}, {3.689544400048128*^9, 3.6895444129162283`*^9}, 
   3.689544597332158*^9, {3.689544730176086*^9, 3.6895447659603786`*^9}, 
   3.6895451731064663`*^9, 3.689546436073204*^9, {3.689546488186493*^9, 
   3.689546564601215*^9}, 3.689546607540213*^9, {3.689546911710231*^9, 
   3.689546961845686*^9}, {3.6895470238012533`*^9, 3.689547115774199*^9}, 
   3.689547192349*^9, {3.689547332006575*^9, 3.689547342102696*^9}, {
   3.689547395955941*^9, 3.689547410354961*^9}, 3.689547495274905*^9, 
   3.6895477270505333`*^9, 3.689547908178742*^9, 3.689548074919379*^9, 
   3.689548235543264*^9, {3.689548294303351*^9, 3.689548312406328*^9}, {
   3.689548471128244*^9, 3.689548496308819*^9}, 3.689549887677102*^9, {
   3.6895499225584393`*^9, 3.6895499443544207`*^9}, 3.689549979194161*^9, 
   3.689550061245796*^9, {3.689550156532961*^9, 3.6895501792201967`*^9}, 
   3.6895502130036583`*^9, 3.689550467097226*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "WALLA", " ", "BRUSH", " ", "H\[CapitalADoubleDot]R", " ", 
    "M\[CapitalARing]STE", " ", "DU", " ", "SE", " ", "TILL", " ", "ATT", " ",
     "DET", " ", "D\[CapitalADoubleDot]R", " ", "MED", " ", "10", "%", " ", 
    "\[CapitalADoubleDot]R", " ", "GREJS"}], ",", " ", 
   RowBox[{"TACK", " ", "MR"}]}], " ", "*)"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution 2 (Geometric distribution)", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533910635722*^9, 3.6895339327476263`*^9}, {3.68953748759827*^9, 
  3.689537487966322*^9}, {3.689537949211651*^9, 3.689537952187593*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{3.689537584453005*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"amountOfLists", "=", "100"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"listLength", "=", "1000"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrixOfRands", "=", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{"amountOfLists", ",", "listLength"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6895368768343763`*^9, 3.689536945129941*^9}, {
  3.689537603813986*^9, 3.6895376038858967`*^9}, {3.6895377576623287`*^9, 
  3.689537759957205*^9}, {3.689537877820333*^9, 3.689537877884139*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findp", "[", "data_", "]"}], ":=", 
  RowBox[{"List", "@@", 
   RowBox[{"EstimatedDistribution", "[", 
    RowBox[{"data", ",", 
     RowBox[{"GeometricDistribution", "[", "p", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.6895146793008604`*^9, {3.6895224639304667`*^9, 3.689522471098274*^9}, {
   3.689538221714323*^9, 3.689538223346095*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", "prob", "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"findp", "/@", "matrixOfRands"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.6895261508357277`*^9, 3.689526342930228*^9, {3.689538182730485*^9, 
   3.689538202858317*^9}, 3.689538248605811*^9, {3.689538497144638*^9, 
   3.689538500448495*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"confp", "=", 
  RowBox[{"MeanCI", "[", 
   RowBox[{"prob", ",", " ", 
    RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.6895122434562206`*^9, 3.6895262758590717`*^9, {3.689538212922412*^9, 
   3.689538216290059*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.06481492672938986`", ",", "0.06560860634516887`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.689538230354422*^9, 3.689538259238578*^9}, 
   3.689538306250523*^9, 3.689538408021451*^9, {3.689538482531855*^9, 
   3.689538511333164*^9}, 3.689538740404413*^9, 3.689538846089357*^9, 
   3.689539363037661*^9, 3.689539396652712*^9, 3.689539444636053*^9, 
   3.68954286700237*^9, 3.689542920878916*^9, 3.689543033528946*^9, 
   3.689543587016068*^9, 3.689543650997448*^9, 3.689543855795558*^9, 
   3.689544111768001*^9, {3.689544150978945*^9, 3.689544174423781*^9}, {
   3.689544239094825*^9, 3.689544263903346*^9}, 3.689544294095544*^9, {
   3.689544332312024*^9, 3.689544359352541*^9}, {3.6895444002420273`*^9, 
   3.689544413118783*^9}, 3.689544597489726*^9, {3.689544730329505*^9, 
   3.689544766112528*^9}, 3.6895451732596073`*^9, 3.689546436788341*^9, {
   3.6895464896024113`*^9, 3.689546565181246*^9}, 3.689546608169387*^9, {
   3.6895469123429613`*^9, 3.6895469624970913`*^9}, {3.689547023986865*^9, 
   3.689547115941329*^9}, 3.689547192535097*^9, {3.6895473322117558`*^9, 
   3.6895473424069033`*^9}, {3.6895473961025352`*^9, 3.689547410516609*^9}, 
   3.689547495444356*^9, 3.6895477272101192`*^9, 3.689547908327363*^9, 
   3.6895480757645273`*^9, 3.689548235694118*^9, {3.689548294483832*^9, 
   3.689548312566689*^9}, {3.689548471287483*^9, 3.6895484965001593`*^9}, 
   3.6895498878767223`*^9, {3.6895499227826138`*^9, 3.689549944559306*^9}, 
   3.689549979370995*^9, 3.689550061416547*^9, {3.689550156746304*^9, 
   3.689550179444227*^9}, 3.689550213168354*^9, 3.689550467320115*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "WALLA", " ", "BRUSH", " ", "H\[CapitalADoubleDot]R", " ", 
    "M\[CapitalARing]STE", " ", "DU", " ", "SE", " ", "TILL", " ", "ATT", " ",
     "DET", " ", "D\[CapitalADoubleDot]R", " ", "MED", " ", "10", "%", " ", 
    "\[CapitalADoubleDot]R", " ", "GREJS"}], ",", " ", 
   RowBox[{"TACK", " ", "MR"}]}], " ", "*)"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution 3 (Gamma distribution)", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533910635722*^9, 3.6895339327476263`*^9}, {3.689537489502226*^9, 
  3.6895374902383738`*^9}, {3.689537954675495*^9, 3.6895379568593903`*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{3.689537584453005*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"amountOfLists", "=", "100"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"listLength", "=", "1000"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrixOfRands", "=", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"3", ",", 
     RowBox[{"{", 
      RowBox[{"amountOfLists", ",", "listLength"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6895368768343763`*^9, 3.689536945129941*^9}, {
  3.689537603813986*^9, 3.6895376038858967`*^9}, {3.6895377576623287`*^9, 
  3.689537759957205*^9}, {3.6895378850923367`*^9, 3.6895378851078043`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"find\[Alpha]and\[Beta]", "[", "data_", "]"}], ":=", 
  RowBox[{"List", "@@", 
   RowBox[{"EstimatedDistribution", "[", 
    RowBox[{"data", ",", 
     RowBox[{"GammaDistribution", "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6895385573841763`*^9, 3.689538557656199*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Alpha]list", ",", "\[Beta]list"}], "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"find\[Alpha]and\[Beta]", "/@", "matrixOfRands"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.689538657999823*^9, 3.689538695411717*^9}, {
   3.689538766975774*^9, 3.6895387724950113`*^9}, 3.6895388231295443`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"conf\[Alpha]", "=", 
  RowBox[{"MeanCI", "[", 
   RowBox[{"\[Alpha]list", ",", " ", 
    RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6895386464479923`*^9, 3.68953864671235*^9}, {
   3.6895386997085752`*^9, 3.6895387020876207`*^9}, 3.68953877584778*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.991729383446084`", ",", "8.117331578267805`"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.689538846314275*^9, 3.689539363446447*^9, 3.689539396861154*^9, 
   3.689539444863193*^9, 3.6895428672848797`*^9, 3.689542921544752*^9, 
   3.689543033771761*^9, 3.689543587324768*^9, 3.689543651691559*^9, 
   3.689543856391465*^9, 3.689544112000285*^9, {3.6895441512066603`*^9, 
   3.689544174736907*^9}, {3.689544239327229*^9, 3.689544264134774*^9}, 
   3.689544294465632*^9, {3.689544332635188*^9, 3.6895443596406527`*^9}, {
   3.689544400549704*^9, 3.689544413427194*^9}, 3.689544597729599*^9, {
   3.689544730567109*^9, 3.689544766457567*^9}, 3.689545173539124*^9, 
   3.6895464374484587`*^9, {3.6895464902883863`*^9, 3.689546565814114*^9}, 
   3.689546608956468*^9, {3.68954691344119*^9, 3.6895469632212687`*^9}, {
   3.689547024243679*^9, 3.689547116224522*^9}, 3.689547192788505*^9, {
   3.689547332469511*^9, 3.68954734267766*^9}, {3.689547396341982*^9, 
   3.689547410780978*^9}, 3.689547495683011*^9, 3.6895477275291147`*^9, 
   3.689547908569126*^9, 3.689548076799684*^9, 3.689548235917823*^9, {
   3.689548294810524*^9, 3.689548312802071*^9}, {3.689548471528419*^9, 
   3.689548496732005*^9}, 3.689549888130643*^9, {3.6895499230346527`*^9, 
   3.689549944797752*^9}, 3.689549979601663*^9, 3.689550061663726*^9, {
   3.689550157019579*^9, 3.689550179689928*^9}, 3.689550213407208*^9, 
   3.6895504677379837`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"conf\[Beta]", "=", 
  RowBox[{"MeanCI", "[", 
   RowBox[{"\[Beta]list", ",", " ", 
    RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.689538652471923*^9, {3.689538705127668*^9, 3.68953870917542*^9}, 
   3.689538780464347*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.5800912208685132`", ",", "1.604424512625903`"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.689538846347323*^9, 3.689539363483054*^9, 3.689539396883978*^9, 
   3.6895394448968773`*^9, 3.689542867294076*^9, 3.689542921645179*^9, 
   3.689543033805193*^9, 3.689543587355245*^9, 3.6895436517774267`*^9, 
   3.689543856455411*^9, 3.6895441120294647`*^9, {3.6895441512406263`*^9, 
   3.689544174772996*^9}, {3.689544239360708*^9, 3.6895442641647587`*^9}, 
   3.6895442945035677`*^9, {3.689544332674595*^9, 3.68954435967299*^9}, {
   3.689544400588521*^9, 3.6895444134767647`*^9}, 3.689544597764408*^9, {
   3.689544730606501*^9, 3.689544766491228*^9}, 3.6895451735865793`*^9, 
   3.689546437720665*^9, {3.689546490431896*^9, 3.689546565913561*^9}, 
   3.6895466090480137`*^9, {3.68954691353275*^9, 3.689546963322051*^9}, {
   3.689547024297418*^9, 3.689547116274004*^9}, 3.689547192800186*^9, {
   3.6895473325052967`*^9, 3.6895473427175198`*^9}, {3.689547396381172*^9, 
   3.6895474108225594`*^9}, 3.689547495734322*^9, 3.6895477275699453`*^9, 
   3.6895479086086884`*^9, 3.6895480769069767`*^9, 3.6895482359614563`*^9, {
   3.689548294854533*^9, 3.689548312845396*^9}, {3.689548471567459*^9, 
   3.689548496773478*^9}, 3.68954988817979*^9, {3.689549923082192*^9, 
   3.689549944835187*^9}, 3.689549979642795*^9, 3.689550061706992*^9, {
   3.689550157058041*^9, 3.689550179764866*^9}, 3.689550213451708*^9, 
   3.689550467806815*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "WALLA", " ", "BRUSH", " ", "H\[CapitalADoubleDot]R", " ", 
    "M\[CapitalARing]STE", " ", "DU", " ", "SE", " ", "TILL", " ", "ATT", " ",
     "DET", " ", "D\[CapitalADoubleDot]R", " ", "MED", " ", "10", "%", " ", 
    "\[CapitalADoubleDot]R", " ", "GREJS"}], ",", " ", 
   RowBox[{"TACK", " ", "MR"}]}], " ", "*)"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution 4 (Normal distribution)", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533910635722*^9, 3.6895339327476263`*^9}, {3.689537491862501*^9, 
  3.6895374924301167`*^9}, {3.689537959235478*^9, 3.6895379740593853`*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{3.689537584453005*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"amountOfLists", "=", "100"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"listLength", "=", "1000"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrixOfRands", "=", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"4", ",", 
     RowBox[{"{", 
      RowBox[{"amountOfLists", ",", "listLength"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6895368768343763`*^9, 3.689536945129941*^9}, {
  3.689537603813986*^9, 3.6895376038858967`*^9}, {3.6895377576623287`*^9, 
  3.689537759957205*^9}, {3.689537890084263*^9, 3.689537890124125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"find\[Mu]and\[Sigma]", "[", "data_", "]"}], ":=", 
  RowBox[{"List", "@@", 
   RowBox[{"EstimatedDistribution", "[", 
    RowBox[{"data", ",", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"\[Mu]", ",", " ", "\[Sigma]"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6895370924490843`*^9, 3.689537123808956*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]list", ",", "\[Sigma]list"}], "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"find\[Mu]and\[Sigma]", "/@", "matrixOfRands"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.689537083401013*^9, 3.689537127232671*^9}, {
  3.6895371716727047`*^9, 3.689537173992269*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"conf\[Mu]", " ", "=", " ", 
  RowBox[{"MeanCI", "[", 
   RowBox[{"\[Mu]list", ",", " ", 
    RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.689537147108474*^9, 3.6895371890803223`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.950341134160765`", ",", "3.009503556527007`"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.689538230616239*^9, 3.689538306681322*^9, 3.68953840822589*^9, {
   3.6895384829675617`*^9, 3.689538511650489*^9}, 3.6895387408049173`*^9, 
   3.689538846524207*^9, 3.6895393637829037`*^9, 3.689539397036745*^9, 
   3.689539445072627*^9, 3.689542867489945*^9, 3.689542922197649*^9, 
   3.689543034028625*^9, 3.6895435875331993`*^9, 3.689543652397344*^9, 
   3.689543857071217*^9, 3.6895441122155046`*^9, {3.6895441514378157`*^9, 
   3.689544174955697*^9}, {3.6895442395417223`*^9, 3.689544264338397*^9}, 
   3.689544294730616*^9, {3.689544332988027*^9, 3.6895443599529037`*^9}, {
   3.689544400854759*^9, 3.689544413735717*^9}, 3.689544597947192*^9, {
   3.68954473082253*^9, 3.689544766680131*^9}, 3.689545173821582*^9, 
   3.689546438203435*^9, {3.689546491067618*^9, 3.6895465665207663`*^9}, 
   3.689546609585142*^9, {3.6895469141798563`*^9, 3.6895469639280233`*^9}, {
   3.689547024592305*^9, 3.689547116466859*^9}, 3.689547193175601*^9, {
   3.689547332815721*^9, 3.689547342915577*^9}, {3.689547396560315*^9, 
   3.6895474110509377`*^9}, 3.6895474959255943`*^9, 3.6895477277340097`*^9, 
   3.6895479087912407`*^9, 3.68954807756339*^9, 3.689548236134276*^9, {
   3.689548295095768*^9, 3.689548313021606*^9}, {3.689548471743256*^9, 
   3.6895484970912867`*^9}, 3.689549888387657*^9, {3.689549923313014*^9, 
   3.689549945034135*^9}, 3.689549979833452*^9, 3.6895500619237757`*^9, {
   3.689550157256871*^9, 3.689550180021882*^9}, 3.6895502136360283`*^9, 
   3.6895504680285892`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"conf\[Sigma]", " ", "=", " ", 
  RowBox[{"MeanCI", "[", 
   RowBox[{"\[Sigma]list", ",", " ", 
    RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.689537200959888*^9, 3.689537234768128*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.9545706727414025`", ",", "5.003940719060811`"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.689538230645528*^9, 3.689538306719116*^9, 3.689538408255295*^9, {
   3.689538483028468*^9, 3.689538511694331*^9}, 3.689538740885271*^9, 
   3.689538846532589*^9, 3.689539363812016*^9, 3.68953939706066*^9, 
   3.689539445105727*^9, 3.689542867523931*^9, 3.689542923100868*^9, 
   3.689543034060685*^9, 3.689543587565691*^9, 3.6895436525085163`*^9, 
   3.6895438571572933`*^9, 3.689544112252344*^9, {3.6895441514728394`*^9, 
   3.6895441749923553`*^9}, {3.6895442395796347`*^9, 3.6895442643741302`*^9}, 
   3.689544294762312*^9, {3.689544333049301*^9, 3.689544359960226*^9}, {
   3.6895444008637543`*^9, 3.689544413773999*^9}, 3.689544597982368*^9, {
   3.6895447308651733`*^9, 3.6895447667171*^9}, 3.689545173861136*^9, 
   3.689546438299789*^9, {3.689546491225177*^9, 3.68954656663293*^9}, 
   3.6895466096805677`*^9, {3.689546914274888*^9, 3.689546964026454*^9}, {
   3.689547024656736*^9, 3.689547116508716*^9}, 3.6895471932239227`*^9, {
   3.689547332852195*^9, 3.689547342954734*^9}, {3.689547396591284*^9, 
   3.6895474110967503`*^9}, 3.689547495935564*^9, 3.689547727772359*^9, 
   3.689547908831514*^9, 3.689548077666329*^9, 3.6895482361815567`*^9, {
   3.6895482951399107`*^9, 3.689548313063036*^9}, {3.689548471784075*^9, 
   3.6895484971418953`*^9}, 3.689549888471694*^9, {3.689549923357544*^9, 
   3.6895499450845823`*^9}, 3.68954997987593*^9, 3.689550061971984*^9, {
   3.689550157298538*^9, 3.689550180032714*^9}, 3.689550213649253*^9, 
   3.689550468100136*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "WALLA", " ", "BRUSH", " ", "H\[CapitalADoubleDot]R", " ", 
    "M\[CapitalARing]STE", " ", "DU", " ", "SE", " ", "TILL", " ", "ATT", " ",
     "DET", " ", "D\[CapitalADoubleDot]R", " ", "MED", " ", "10", "%", " ", 
    "\[CapitalADoubleDot]R", " ", "GREJS"}], ",", " ", 
   RowBox[{"TACK", " ", "MR"}]}], " ", "*)"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution 5 (Binomial distribution)", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533910635722*^9, 3.6895339327476263`*^9}, {3.689537493478397*^9, 
  3.689537499798092*^9}, {3.689538046315036*^9, 3.6895380495709553`*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"amountOfLists", "=", "100"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"listLength", "=", "1000"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrixOfRands", "=", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"5", ",", 
     RowBox[{"{", 
      RowBox[{"amountOfLists", ",", "listLength"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6895368768343763`*^9, 3.689536945129941*^9}, {
  3.689537746493998*^9, 3.689537777751533*^9}, {3.689538024059567*^9, 
  3.6895380240913353`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findmandp", "[", "data_", "]"}], ":=", 
  RowBox[{"List", "@@", 
   RowBox[{"EstimatedDistribution", "[", 
    RowBox[{"data", ",", 
     RowBox[{"BinomialDistribution", "[", 
      RowBox[{"listLength", " ", ",", "p"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6895390469497023`*^9, 3.689539051853167*^9}, {
  3.689539214196733*^9, 3.689539220100338*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", ",", " ", "plist"}], "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"findmandp", "/@", "matrixOfRands"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.689538994894006*^9, 3.689539020021387*^9}, {
   3.6895390702615957`*^9, 3.689539079389385*^9}, {3.689539122845323*^9, 
   3.689539129388883*^9}, 3.689539223332388*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"confp", "=", 
  RowBox[{"MeanCI", "[", 
   RowBox[{"plist", ",", " ", 
    RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.689539133301797*^9, 3.689539135453285*^9}, 
   3.689539383438189*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.0032901883029997766`", ",", "0.0033078916970002226`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.689539066002466*^9, 3.689539083371196*^9}, 
   3.689539363964327*^9, 3.689539397209196*^9, 3.6895394452631407`*^9, 
   3.6895428677583733`*^9, 3.689542923872323*^9, 3.689543034328658*^9, 
   3.6895435877526217`*^9, 3.6895436532592297`*^9, 3.689543857775258*^9, 
   3.689544112520795*^9, {3.689544151651229*^9, 3.689544175165017*^9}, {
   3.689544239803955*^9, 3.689544264654174*^9}, 3.689544294928568*^9, {
   3.689544333303625*^9, 3.689544360180079*^9}, {3.6895444010505943`*^9, 
   3.689544413975218*^9}, 3.689544598256065*^9, {3.6895447311733723`*^9, 
   3.6895447668770103`*^9}, 3.689545174024117*^9, 3.689546438874198*^9, {
   3.689546491785932*^9, 3.689546567288313*^9}, 3.689546610315227*^9, {
   3.689546914826355*^9, 3.6895469648877296`*^9}, {3.689547024900688*^9, 
   3.6895471166914873`*^9}, 3.689547193433647*^9, {3.689547333061409*^9, 
   3.68954734315556*^9}, {3.689547396762479*^9, 3.6895474113469133`*^9}, 
   3.6895474962041616`*^9, 3.6895477279292088`*^9, 3.689547909036067*^9, 
   3.68954807834114*^9, 3.689548236354607*^9, {3.689548295362536*^9, 
   3.6895483132528667`*^9}, {3.689548471964327*^9, 3.689548497325232*^9}, 
   3.689549888737713*^9, {3.689549923674184*^9, 3.689549945256651*^9}, 
   3.689549980101755*^9, 3.689550062158272*^9, {3.689550157469573*^9, 
   3.689550180271894*^9}, 3.689550213836925*^9, 3.68955046831388*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "WALLA", " ", "BRUSH", " ", "H\[CapitalADoubleDot]R", " ", 
    "M\[CapitalARing]STE", " ", "DU", " ", "SE", " ", "TILL", " ", "ATT", " ",
     "DET", " ", "D\[CapitalADoubleDot]R", " ", "MED", " ", "10", "%", " ", 
    "\[CapitalADoubleDot]R", " ", "GREJS"}], ",", " ", 
   RowBox[{"TACK", " ", "MR"}]}], " ", "*)"}]], "Input",
 CellChangeTimes->{{3.689537261968349*^9, 3.689537269519713*^9}, {
  3.689537379807048*^9, 3.6895373988229513`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution 6 (Poisson distribution)", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533910635722*^9, 3.6895339327476263`*^9}, {3.6895374664145403`*^9, 
  3.6895374974300756`*^9}, {3.689538051307454*^9, 3.689538059994791*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"amountOfLists", "=", "100"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"listLength", "=", "1000"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrixOfRands", "=", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"6", ",", 
     RowBox[{"{", 
      RowBox[{"amountOfLists", ",", "listLength"}], "}"}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"List", "@@", 
  RowBox[{"EstimatedDistribution", "[", 
   RowBox[{
    RowBox[{"randomNumber", "[", 
     RowBox[{"6", ",", " ", "100"}], "]"}], ",", 
    RowBox[{"PoissonDistribution", "[", "\[Mu]", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.689536066367434*^9, 3.68953609881474*^9}}],

Cell[BoxData[
 RowBox[{"{", "9.85`", "}"}]], "Output",
 CellChangeTimes->{
  3.689539364044848*^9, 3.689539397303412*^9, 3.6895394453448687`*^9, 
   3.689542867839517*^9, 3.689542924261508*^9, 3.6895430343930492`*^9, 
   3.689543587824407*^9, 3.689543654507553*^9, 3.6895438581007547`*^9, 
   3.689544112601851*^9, {3.68954415171664*^9, 3.689544175249456*^9}, {
   3.689544239897067*^9, 3.689544264803124*^9}, 3.6895442949954243`*^9, {
   3.689544333452146*^9, 3.689544360273489*^9}, {3.689544401121215*^9, 
   3.689544414117557*^9}, 3.689544598329296*^9, {3.6895447312887487`*^9, 
   3.6895447669479218`*^9}, 3.689545174098743*^9, 3.6895464391654882`*^9, {
   3.689546492229455*^9, 3.689546567617812*^9}, 3.689546610699862*^9, {
   3.689546915272875*^9, 3.689546965362073*^9}, {3.689547024994021*^9, 
   3.689547116782959*^9}, 3.689547193555167*^9, {3.689547333131123*^9, 
   3.689547343231179*^9}, {3.689547396846608*^9, 3.689547411457851*^9}, 
   3.68954749628893*^9, 3.689547728000667*^9, 3.6895479091131496`*^9, 
   3.689548078841556*^9, 3.6895482365129232`*^9, {3.689548295516732*^9, 
   3.689548313334176*^9}, {3.689548472034382*^9, 3.689548497434277*^9}, 
   3.689549888855163*^9, {3.689549923788128*^9, 3.689549945376652*^9}, 
   3.689549980188045*^9, 3.6895500623148327`*^9, {3.6895501575547*^9, 
   3.689550180429144*^9}, 3.689550213915987*^9, 3.6895504684297037`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"find\[Mu]", "[", "data_", "]"}], ":=", 
  RowBox[{"List", "@@", 
   RowBox[{"EstimatedDistribution", "[", 
    RowBox[{"data", ",", 
     RowBox[{"PoissonDistribution", "[", "\[Mu]", "]"}]}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.689539321363881*^9, 3.6895393242277*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[Mu]list", "=", 
   RowBox[{
    RowBox[{"Transpose", "[", 
     RowBox[{"find\[Mu]", "/@", "matrixOfRands"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.689539328883832*^9, 3.689539342027525*^9}, 
   3.689539427187538*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"conf\[Mu]", "=", 
  RowBox[{"MeanCI", "[", 
   RowBox[{"\[Mu]list", ",", " ", 
    RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.689539345670295*^9, 3.689539354267528*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9.786342419128351`", ",", "9.82849758087165`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.689539397339336*^9, 3.689539445446267*^9, 3.689542867932569*^9, 
   3.689542924502988*^9, 3.689543034491295*^9, 3.689543587935485*^9, 
   3.689543654811393*^9, 3.689543858343635*^9, 3.689544112734585*^9, {
   3.689544151820044*^9, 3.689544175344281*^9}, {3.6895442400426397`*^9, 
   3.689544264902998*^9}, 3.6895442950971603`*^9, {3.68954433355877*^9, 
   3.68954436042699*^9}, {3.689544401238974*^9, 3.689544414219985*^9}, 
   3.689544598423036*^9, {3.689544731382663*^9, 3.6895447670865297`*^9}, 
   3.689545174203991*^9, 3.689546439367474*^9, {3.689546492554351*^9, 
   3.689546567876052*^9}, 3.689546611023779*^9, {3.689546915525078*^9, 
   3.689546965612418*^9}, {3.6895470251055*^9, 3.6895471168924417`*^9}, 
   3.6895471936679173`*^9, {3.689547333231152*^9, 3.6895473433370037`*^9}, {
   3.689547396942706*^9, 3.689547411582796*^9}, 3.6895474964065943`*^9, 
   3.68954772814363*^9, 3.689547909213417*^9, 3.689548079094667*^9, 
   3.689548236614403*^9, {3.689548295613147*^9, 3.689548313429295*^9}, {
   3.6895484721336927`*^9, 3.6895484975325193`*^9}, 3.68954988995319*^9, {
   3.689549923904799*^9, 3.689549945503344*^9}, 3.6895499803069468`*^9, 
   3.689550062428084*^9, {3.689550157660831*^9, 3.6895501805380297`*^9}, 
   3.6895502140289927`*^9, 3.689550468574788*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{
   "WALLA", " ", "BRUSH", " ", "H\[CapitalADoubleDot]R", " ", 
    "M\[CapitalARing]STE", " ", "DU", " ", "SE", " ", "TILL", " ", "ATT", " ",
     "DET", " ", "D\[CapitalADoubleDot]R", " ", "MED", " ", "10", "%", " ", 
    "\[CapitalADoubleDot]R", " ", "GREJS"}], ",", " ", 
   RowBox[{"TACK", " ", "MR"}]}], " ", "*)"}]], "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{839, 995},
WindowMargins->{{Automatic, -357}, {-175, Automatic}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 308, 4, 93, "Title"],
Cell[891, 28, 101, 1, 51, "Subtitle"],
Cell[995, 31, 361, 10, 30, "Text"],
Cell[CellGroupData[{
Cell[1381, 45, 282, 7, 65, "Section"],
Cell[1666, 54, 442, 9, 77, "Text"],
Cell[CellGroupData[{
Cell[2133, 67, 218, 9, 45, "Subsection"],
Cell[CellGroupData[{
Cell[2376, 80, 176, 2, 35, "Subsubsection"],
Cell[2555, 84, 567, 9, 99, "Text"],
Cell[CellGroupData[{
Cell[3147, 97, 267, 8, 34, "ItemNumbered"],
Cell[3417, 107, 295, 9, 34, "ItemNumbered"],
Cell[3715, 118, 353, 11, 34, "ItemNumbered"]
}, Open  ]],
Cell[4083, 132, 290, 5, 55, "Text"]
}, Open  ]],
Cell[4388, 140, 219, 3, 35, "Subsubsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4644, 148, 190, 8, 45, "Subsection"],
Cell[CellGroupData[{
Cell[4859, 160, 176, 2, 35, "Subsubsection"],
Cell[5038, 164, 440, 7, 99, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5515, 176, 169, 2, 35, "Subsubsection"],
Cell[5687, 180, 176, 4, 33, "Text"],
Cell[CellGroupData[{
Cell[5888, 188, 129, 2, 31, "ItemNumbered"],
Cell[6020, 192, 176, 3, 31, "ItemNumbered"],
Cell[6199, 197, 172, 3, 31, "ItemNumbered"],
Cell[6374, 202, 173, 3, 31, "ItemNumbered"],
Cell[6550, 207, 173, 3, 31, "ItemNumbered"]
}, Open  ]],
Cell[6738, 213, 92, 1, 32, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[6891, 221, 276, 8, 65, "Section"],
Cell[CellGroupData[{
Cell[7192, 233, 350, 10, 45, "Subsection"],
Cell[CellGroupData[{
Cell[7567, 247, 170, 2, 35, "Subsubsection"],
Cell[7740, 251, 363, 7, 55, "Text"],
Cell[8106, 260, 442, 13, 58, "DisplayFormula"],
Cell[8551, 275, 116, 1, 33, "Text"],
Cell[8670, 278, 557, 18, 71, "DisplayFormula"],
Cell[9230, 298, 167, 3, 33, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9434, 306, 169, 2, 35, "Subsubsection"],
Cell[9606, 310, 123, 3, 34, "Input"],
Cell[9732, 315, 144, 4, 34, "Input"],
Cell[9879, 321, 141, 3, 34, "Input"],
Cell[10023, 326, 265, 6, 34, "Input"],
Cell[CellGroupData[{
Cell[10313, 336, 179, 4, 32, "Input"],
Cell[10495, 342, 1330, 19, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11862, 366, 181, 3, 32, "Input"],
Cell[12046, 371, 1350, 19, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13457, 397, 369, 11, 45, "Subsection"],
Cell[CellGroupData[{
Cell[13851, 412, 125, 2, 35, "Subsubsection"],
Cell[13979, 416, 206, 6, 33, "Text"],
Cell[14188, 424, 1643, 29, 37, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15868, 458, 195, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[16088, 465, 269, 3, 31, "Subsubsubsection"],
Cell[16360, 470, 1738, 32, 97, "Input"],
Cell[18101, 504, 217, 7, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18355, 516, 205, 3, 31, "Subsubsubsection"],
Cell[CellGroupData[{
Cell[18585, 523, 836, 21, 34, "Input"],
Cell[19424, 546, 1153, 18, 34, "Output"]
}, Open  ]],
Cell[20592, 567, 346, 9, 32, "Input"],
Cell[20941, 578, 998, 26, 34, "Input"],
Cell[21942, 606, 503, 12, 34, "Input"],
Cell[CellGroupData[{
Cell[22470, 622, 683, 13, 34, "Input"],
Cell[23156, 637, 1040, 19, 46, "Output"]
}, Open  ]],
Cell[24211, 659, 684, 12, 34, "Input"],
Cell[24898, 673, 300, 7, 34, "Input"],
Cell[25201, 682, 937, 19, 57, "Input"],
Cell[CellGroupData[{
Cell[26163, 705, 167, 3, 34, "Input"],
Cell[26333, 710, 18111, 310, 383, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[44493, 1026, 255, 3, 31, "Subsubsubsection"],
Cell[44751, 1031, 367, 7, 34, "Input"],
Cell[CellGroupData[{
Cell[45143, 1042, 704, 19, 34, "Input"],
Cell[45850, 1063, 665, 13, 38, "Output"]
}, Open  ]],
Cell[46530, 1079, 268, 7, 32, "Input"],
Cell[46801, 1088, 1069, 28, 79, "Input"],
Cell[47873, 1118, 393, 10, 34, "Input"],
Cell[48269, 1130, 544, 12, 34, "Input"],
Cell[48816, 1144, 224, 5, 34, "Input"],
Cell[49043, 1151, 183, 5, 34, "Input"],
Cell[49229, 1158, 540, 13, 57, "Input"],
Cell[CellGroupData[{
Cell[49794, 1175, 169, 3, 34, "Input"],
Cell[49966, 1180, 17771, 306, 236, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[67786, 1492, 251, 3, 31, "Subsubsubsection"],
Cell[68040, 1497, 239, 5, 34, "Input"],
Cell[CellGroupData[{
Cell[68304, 1506, 921, 23, 34, "Input"],
Cell[69228, 1531, 603, 13, 54, "Output"]
}, Open  ]],
Cell[69846, 1547, 649, 18, 34, "Input"],
Cell[CellGroupData[{
Cell[70520, 1569, 1716, 43, 126, "Input"],
Cell[72239, 1614, 349, 7, 34, "Output"]
}, Open  ]],
Cell[72603, 1624, 678, 19, 34, "Input"],
Cell[73284, 1645, 544, 12, 34, "Input"],
Cell[73831, 1659, 224, 5, 34, "Input"],
Cell[74058, 1666, 183, 5, 34, "Input"],
Cell[74244, 1673, 540, 13, 57, "Input"],
Cell[CellGroupData[{
Cell[74809, 1690, 169, 3, 34, "Input"],
Cell[74981, 1695, 17447, 301, 236, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[92467, 2001, 150, 2, 35, "Subsubsection"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92654, 2008, 310, 10, 44, "Subsection"],
Cell[92967, 2020, 125, 2, 35, "Subsubsection"],
Cell[93095, 2024, 197, 3, 29, "Subsubsection"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[93341, 2033, 253, 7, 65, "Section"],
Cell[CellGroupData[{
Cell[93619, 2044, 293, 10, 44, "Subsection"],
Cell[CellGroupData[{
Cell[93937, 2058, 125, 2, 35, "Subsubsection"],
Cell[94065, 2062, 367, 7, 78, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94469, 2074, 294, 4, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[94788, 2082, 110, 1, 31, "Subsubsubsection"],
Cell[94901, 2085, 70, 1, 32, "Input"],
Cell[94974, 2088, 148, 3, 34, "Input"],
Cell[CellGroupData[{
Cell[95147, 2095, 505, 11, 79, "Input"],
Cell[95655, 2108, 2069, 30, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97761, 2143, 378, 8, 34, "Input"],
Cell[98142, 2153, 1839, 27, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100018, 2185, 176, 3, 34, "Input"],
Cell[100197, 2190, 30221, 508, 303, 17787, 308, "CachedBoxData", "BoxData", \
"Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[130467, 2704, 161, 2, 31, "Subsubsubsection"],
Cell[130631, 2708, 70, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[130726, 2713, 472, 10, 79, "Input"],
Cell[131201, 2725, 2016, 29, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133254, 2759, 441, 9, 57, "Input"],
Cell[133698, 2770, 2009, 29, 32, "Output"],
Cell[135710, 2801, 5095, 95, 245, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[140854, 2902, 161, 2, 31, "Subsubsubsection"],
Cell[141018, 2906, 138, 2, 32, "Input"],
Cell[141159, 2910, 80, 2, 34, "Input"],
Cell[CellGroupData[{
Cell[141264, 2916, 443, 8, 56, "Input"],
Cell[141710, 2926, 2003, 29, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[143750, 2960, 389, 8, 34, "Input"],
Cell[144142, 2970, 1894, 28, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[146073, 3003, 179, 3, 34, "Input"],
Cell[146255, 3008, 19633, 333, 245, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[165937, 3347, 159, 2, 31, "Subsubsubsection"],
Cell[166099, 3351, 138, 2, 32, "Input"],
Cell[166240, 3355, 145, 3, 34, "Input"],
Cell[CellGroupData[{
Cell[166410, 3362, 492, 9, 56, "Input"],
Cell[166905, 3373, 1950, 28, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168892, 3406, 295, 6, 34, "Input"],
Cell[169190, 3414, 1945, 29, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171172, 3448, 177, 3, 34, "Input"],
Cell[171352, 3453, 5419, 101, 387, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[176820, 3560, 161, 2, 31, "Subsubsubsection"],
Cell[176984, 3564, 80, 2, 34, "Input"],
Cell[CellGroupData[{
Cell[177089, 3570, 541, 10, 56, "Input"],
Cell[177633, 3582, 1905, 27, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179575, 3614, 403, 8, 34, "Input"],
Cell[179981, 3624, 1897, 27, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181915, 3656, 179, 3, 34, "Input"],
Cell[182097, 3661, 3836, 73, 245, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[185982, 3740, 161, 2, 31, "Subsubsubsection"],
Cell[186146, 3744, 138, 2, 32, "Input"],
Cell[186287, 3748, 121, 3, 34, "Input"],
Cell[CellGroupData[{
Cell[186433, 3755, 541, 10, 56, "Input"],
Cell[186977, 3767, 1782, 25, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188796, 3797, 380, 8, 34, "Input"],
Cell[189179, 3807, 1751, 25, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190967, 3837, 179, 3, 34, "Input"],
Cell[191149, 3842, 4048, 76, 245, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[195270, 3926, 321, 10, 45, "Subsection"],
Cell[CellGroupData[{
Cell[195616, 3940, 125, 2, 35, "Subsubsection"],
Cell[195744, 3944, 16, 0, 33, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195797, 3949, 197, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[196019, 3956, 286, 3, 31, "Subsubsubsection"],
Cell[196308, 3961, 112, 2, 32, "Input"],
Cell[196423, 3965, 83, 1, 32, "Input"],
Cell[196509, 3968, 81, 2, 34, "Input"],
Cell[196593, 3972, 79, 2, 34, "Input"],
Cell[196675, 3976, 391, 10, 34, "Input"],
Cell[197069, 3988, 379, 10, 34, "Input"],
Cell[197451, 4000, 453, 10, 34, "Input"],
Cell[CellGroupData[{
Cell[197929, 4014, 276, 6, 34, "Input"],
Cell[198208, 4022, 1709, 25, 34, "Output"]
}, Open  ]],
Cell[199932, 4050, 389, 8, 56, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200358, 4063, 280, 3, 31, "Subsubsubsection"],
Cell[200641, 4068, 112, 2, 32, "Input"],
Cell[200756, 4072, 81, 2, 34, "Input"],
Cell[200840, 4076, 79, 2, 34, "Input"],
Cell[200922, 4080, 437, 10, 34, "Input"],
Cell[201362, 4092, 386, 9, 34, "Input"],
Cell[201751, 4103, 364, 9, 34, "Input"],
Cell[CellGroupData[{
Cell[202140, 4116, 287, 7, 34, "Input"],
Cell[202430, 4125, 1635, 24, 34, "Output"]
}, Open  ]],
Cell[204080, 4152, 389, 8, 56, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204506, 4165, 281, 3, 31, "Subsubsubsection"],
Cell[204790, 4170, 112, 2, 32, "Input"],
Cell[204905, 4174, 81, 2, 34, "Input"],
Cell[204989, 4178, 79, 2, 34, "Input"],
Cell[205071, 4182, 441, 10, 34, "Input"],
Cell[205515, 4194, 362, 8, 34, "Input"],
Cell[205880, 4204, 378, 9, 34, "Input"],
Cell[CellGroupData[{
Cell[206283, 4217, 323, 6, 34, "Input"],
Cell[206609, 4225, 1458, 23, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208104, 4253, 295, 7, 34, "Input"],
Cell[208402, 4262, 1472, 23, 34, "Output"]
}, Open  ]],
Cell[209889, 4288, 389, 8, 56, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210315, 4301, 282, 3, 31, "Subsubsubsection"],
Cell[210600, 4306, 112, 2, 32, "Input"],
Cell[210715, 4310, 81, 2, 34, "Input"],
Cell[210799, 4314, 79, 2, 34, "Input"],
Cell[210881, 4318, 437, 10, 34, "Input"],
Cell[211321, 4330, 364, 8, 34, "Input"],
Cell[211688, 4340, 349, 9, 34, "Input"],
Cell[CellGroupData[{
Cell[212062, 4353, 253, 5, 34, "Input"],
Cell[212318, 4360, 1619, 25, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[213974, 4390, 257, 5, 34, "Input"],
Cell[214234, 4397, 1610, 25, 34, "Output"]
}, Open  ]],
Cell[215859, 4425, 389, 8, 56, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[216285, 4438, 282, 3, 31, "Subsubsubsection"],
Cell[216570, 4443, 70, 1, 32, "Input"],
Cell[216643, 4446, 81, 2, 34, "Input"],
Cell[216727, 4450, 79, 2, 34, "Input"],
Cell[216809, 4454, 389, 10, 34, "Input"],
Cell[217201, 4466, 402, 9, 57, "Input"],
Cell[217606, 4477, 398, 9, 34, "Input"],
Cell[CellGroupData[{
Cell[218029, 4490, 259, 6, 34, "Input"],
Cell[218291, 4498, 1495, 22, 34, "Output"]
}, Open  ]],
Cell[219801, 4523, 506, 10, 56, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220344, 4538, 283, 3, 31, "Subsubsubsection"],
Cell[220630, 4543, 81, 2, 34, "Input"],
Cell[220714, 4547, 79, 2, 34, "Input"],
Cell[220796, 4551, 221, 7, 34, "Input"],
Cell[CellGroupData[{
Cell[221042, 4562, 316, 7, 34, "Input"],
Cell[221361, 4571, 1379, 20, 32, "Output"]
}, Open  ]],
Cell[222755, 4594, 313, 8, 34, "Input"],
Cell[223071, 4604, 306, 8, 34, "Input"],
Cell[CellGroupData[{
Cell[223402, 4616, 241, 5, 34, "Input"],
Cell[223646, 4623, 1409, 21, 34, "Output"]
}, Open  ]],
Cell[225070, 4647, 389, 8, 56, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

