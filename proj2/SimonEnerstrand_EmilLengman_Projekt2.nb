(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    310830,       6401]
NotebookOptionsPosition[    297778,       5982]
NotebookOutlinePosition[    298121,       5997]
CellTagsIndexPosition[    298078,       5994]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[TextData[StyleBox["Project 2 - Distributions",
 FontFamily->"Times New Roman"]], "Title",
 CellChangeTimes->{{3.6883365237665243`*^9, 3.6883365334510736`*^9}, {
  3.688336605068591*^9, 3.688336624396627*^9}, {3.688336877147334*^9, 
  3.688336877211543*^9}, {3.689531919887904*^9, 3.689531926262679*^9}}],

Cell["       Report", "Subtitle",
 CellChangeTimes->{{3.6883366477040377`*^9, 3.688336681980423*^9}}],

Cell[TextData[{
 StyleBox["Emil",
  IgnoreSpellCheck->True],
 " Lengman, emillen@kth.se\nSimon Enerstrand, simonene@kth.se"
}], "Text",
 CellMargins->{{27, 10}, {0, 0}},
 CellChangeTimes->{
  3.688336421059956*^9, {3.688336691860662*^9, 3.6883367156480083`*^9}, {
   3.6883420597172327`*^9, 3.688342061500751*^9}},
 FontFamily->"Times New Roman",
 FontSize->10],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ". Summary"
}], "Section",
 CellChangeTimes->{{3.688336718948107*^9, 3.688336720452073*^9}, {
  3.688336774819894*^9, 3.688336777371758*^9}, {3.68834502411273*^9, 
  3.688345025232695*^9}, {3.6884668618208437`*^9, 3.6884668621312857`*^9}}],

Cell[TextData[{
 "For this project we were handed a module for randomizing numbers from six \
different distributions (",
 StyleBox["randomNumber", "Program"],
 "). We are going to use it to test different distribution models, divided in \
two sub-assignments. "
}], "Text",
 CellChangeTimes->{{3.689531891401449*^9, 3.6895319642555656`*^9}, {
  3.689531998167654*^9, 3.6895320316633663`*^9}, {3.689532232870101*^9, 
  3.689532250854061*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 "  Summary sub-assignment 1"
}], "Subsection",
 CellChangeTimes->{{3.688336971634904*^9, 3.6883369780908213`*^9}, 
   3.688337034234638*^9}],

Cell[CellGroupData[{

Cell["Description", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, 
   3.688339206676055*^9, {3.688343885127437*^9, 3.6883438872876377`*^9}}],

Cell["\<\
For this sub-assignment we are going to use the first (index zero in the \
module) distribution to test three models. We are going to calculate the \
point estimates for the expected value, and standard deviation, for the \
random data. Then we are going to determine see which model fits the random \
data the best. The models are:\
\>", "Text",
 CellChangeTimes->{{3.689532045157538*^9, 3.689532096911127*^9}, {
  3.6895323791892767`*^9, 3.689532391109068*^9}, {3.689541506311454*^9, 
  3.68954152267135*^9}, {3.689541591575204*^9, 3.689541683214943*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"pdf", "(", "x", ")"}], "\[Proportional]", 
    SuperscriptBox["e", 
     RowBox[{
      RowBox[{"-", "a"}], " ", "x"}]]}], ",", 
   RowBox[{"x", "\[GreaterEqual]", "0"}]}], TraditionalForm]], "ItemNumbered"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"pdf", "(", "x", ")"}], "\[Proportional]", 
    RowBox[{"x", " ", 
     SuperscriptBox["e", 
      RowBox[{
       RowBox[{"-", "a"}], " ", "x"}]]}]}], ",", 
   RowBox[{"x", "\[GreaterEqual]", "0"}]}], TraditionalForm]], "ItemNumbered"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    RowBox[{"pdf", "(", "x", ")"}], "\[Proportional]", 
    RowBox[{"x", " ", 
     RowBox[{"(", 
      RowBox[{"x", "+", "b"}], ")"}], 
     SuperscriptBox["e", 
      RowBox[{
       RowBox[{"-", "a"}], " ", "x"}]]}]}], ",", 
   RowBox[{"x", "\[GreaterEqual]", "0"}]}], TraditionalForm]], "ItemNumbered"]
}, Open  ]],

Cell["\<\
When we\[CloseCurlyQuote]ve found the most fitting model we are going to \
compute the 95% confidence intervals for the constants in the chosen model. \
\>", "Text",
 CellChangeTimes->{{3.689532138582408*^9, 3.689532207966091*^9}, {
  3.689541487575457*^9, 3.689541493640847*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Result", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, 
   3.688339206676055*^9, {3.688343891055583*^9, 3.688343891703444*^9}, {
   3.689532397013096*^9, 3.689532407013072*^9}}],

Cell[TextData[{
 "The third model  (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"pdf", "(", "x", ")"}], "\[Proportional]", 
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{"x", "+", "b"}], ")"}], 
      SuperscriptBox["e", 
       RowBox[{
        RowBox[{"-", "a"}], " ", "x"}]]}]}], ",", 
    RowBox[{"x", "\[GreaterEqual]", "0"}]}], TraditionalForm]], 
  "ItemNumbered"],
 "), fit the data the best."
}], "Text",
 CellChangeTimes->{{3.6895540813323402`*^9, 3.6895540980049973`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 "  Summary sub-assignment 2"
}], "Subsection",
 CellChangeTimes->{{3.688336983363152*^9, 3.688336984178742*^9}}],

Cell[CellGroupData[{

Cell["Description", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, 
   3.688339206676055*^9, {3.688343885127437*^9, 3.6883438872876377`*^9}}],

Cell["\<\
For this sub-assignment we are going to generate data from all the different \
distributions and determine which distribution model fits the data the best \
for each data set (using the  straight line approach). Then we are going to \
determine the point estimates of the parameters, and compute 95% confidence \
intervals for those parameters.  \
\>", "Text",
 CellChangeTimes->{{3.6895322166794577`*^9, 3.6895323604933043`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Result", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, 
   3.688339206676055*^9, {3.688343891055583*^9, 3.688343891703444*^9}}],

Cell["\<\
These are the resulting distribution models for the data (by index in the \
module):\
\>", "Text",
 CellChangeTimes->{{3.6895324097190104`*^9, 3.689532451885068*^9}}],

Cell[CellGroupData[{

Cell["Exponential distribution", "ItemNumbered",
 CellChangeTimes->{{3.689532679630562*^9, 3.689532686651342*^9}},
 FontSize->14],

Cell["Geometric distribution", "ItemNumbered",
 CellChangeTimes->{{3.689532499542975*^9, 3.689532550468093*^9}, {
  3.689532584156396*^9, 3.689532591276959*^9}},
 FontSize->14],

Cell["Gamma distribution", "ItemNumbered",
 CellChangeTimes->{{3.689532499542975*^9, 3.689532550468093*^9}, {
  3.689532584156396*^9, 3.689532602709022*^9}},
 FontSize->14],

Cell["Normal distribution", "ItemNumbered",
 CellChangeTimes->{{3.689532499542975*^9, 3.689532550468093*^9}, {
  3.689532584156396*^9, 3.689532607652714*^9}},
 FontSize->14],

Cell["Binomial distribution", "ItemNumbered",
 CellChangeTimes->{{3.689532499542975*^9, 3.689532550468093*^9}, {
  3.689532584156396*^9, 3.6895326193637*^9}},
 FontSize->14]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.689530670149267*^9, 3.689530673455567*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ". Distribution parameters"
}], "Section",
 CellChangeTimes->{
  3.688336997194717*^9, {3.68833706627428*^9, 3.6883370739781713`*^9}, {
   3.689530611978314*^9, 3.68953062821533*^9}, {3.689530669046975*^9, 
   3.689530682839226*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Expected value, and standard deviation"
}], "Subsection",
 CellChangeTimes->{{3.688337833284293*^9, 3.6883378387402563`*^9}, {
  3.689530732142811*^9, 3.689530736910651*^9}, {3.689541151753598*^9, 
  3.68954115280941*^9}, {3.689542033756502*^9, 3.6895420645175047`*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, 
   3.688339206676055*^9, {3.68954276326412*^9, 3.689542766039865*^9}}],

Cell["\<\
First we will create a list of many random values.Then calculate the expected \
value, and standard deviation. You can use the following formula to calculate \
expected value:\
\>", "Text",
 CellChangeTimes->{{3.689542142648445*^9, 3.689542172803487*^9}, {
  3.689542224971344*^9, 3.689542225235321*^9}, {3.689542768263983*^9, 
  3.689542811711804*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{
   OverscriptBox["x", "_"], "=", 
   RowBox[{
    FractionBox["1", "n"], 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"i", "=", "1"}], "n"], 
     SubscriptBox["x", "i"]}]}]}],
  FontWeight->"Bold"]], "DisplayFormula",
 CellChangeTimes->{{3.6895422331312237`*^9, 3.689542235331114*^9}, {
   3.689542504746323*^9, 3.6895425115539494`*^9}, 3.6895426290253897`*^9, 
   3.689542678097007*^9}],

Cell["To calculate the standard deviation", "Text",
 CellChangeTimes->{{3.68954223925626*^9, 3.689542269674811*^9}}],

Cell[BoxData[
 StyleBox[
  RowBox[{"s", "=", 
   SqrtBox[
    RowBox[{
     FractionBox["1", 
      RowBox[{"n", "-", "1"}]], 
     RowBox[{
      UnderoverscriptBox["\[Sum]", 
       RowBox[{"i", "=", "1"}], "n"], 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["x", "i"], "-", 
         OverscriptBox["x", "_"]}], ")"}], "2"]}]}]]}],
  FontWeight->"Bold"]], "DisplayFormula",
 CellChangeTimes->{
  3.689542292631858*^9, {3.6895423463579493`*^9, 3.6895423746905403`*^9}, {
   3.689542473474345*^9, 3.689542516073859*^9}}],

Cell["\<\
Mathematica has built-in function to do that for us, so we used those instead.\
\>", "Text",
 CellChangeTimes->{{3.689542307922647*^9, 3.68954233123452*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, 
   3.688339206676055*^9, {3.689542712089015*^9, 3.6895427125123367`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{"Once", "[", 
  RowBox[{"Get", "[", 
   RowBox[{"\"\<Project2.m\>\"", ",", "\"\<IX1501\>\""}], "]"}], 
  "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", "=", "1000"}], ";"}]], "Input",
 CellChangeTimes->{{3.689542838507416*^9, 3.689542841351758*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"rand", " ", "=", " ", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"0", ",", " ", "n"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.689542826857292*^9, 3.689542855415639*^9}, {
  3.689543612220111*^9, 3.689543613980782*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Mu]", "=", 
  RowBox[{"Mean", "[", "rand", "]"}]}]], "Input",
 CellChangeTimes->{{3.689542725456745*^9, 3.689542731920597*^9}, 
   3.689542858655929*^9}],

Cell[BoxData["5.057587413276662`"], "Output",
 CellChangeTimes->{
  3.689542863249511*^9, 3.689542912739605*^9, 3.689543025747182*^9, 
   3.6895435825872383`*^9, {3.6895436308758507`*^9, 3.689543642521742*^9}, 
   3.689543848334518*^9, 3.689544106353016*^9, {3.689544144412428*^9, 
   3.689544169561483*^9}, {3.689544234166641*^9, 3.689544288866078*^9}, {
   3.6895443202578382`*^9, 3.689544353683655*^9}, {3.6895443942720823`*^9, 
   3.689544407491365*^9}, 3.689544591954623*^9, {3.689544725700815*^9, 
   3.689544760686508*^9}, 3.6895451663735027`*^9, 3.689546426390933*^9, {
   3.68954647905198*^9, 3.689546555181979*^9}, 3.689546598872224*^9, {
   3.689546903303974*^9, 3.689546954104438*^9}, {3.6895470169883413`*^9, 
   3.6895471106442204`*^9}, 3.689547186044783*^9, {3.6895473260686493`*^9, 
   3.689547335748032*^9}, {3.6895473898466187`*^9, 3.6895474037746487`*^9}, 
   3.689547487639367*^9, 3.689547719837453*^9, 3.689547900784041*^9, 
   3.689548062307022*^9, 3.68954822570462*^9, {3.689548282409718*^9, 
   3.689548299760364*^9}, {3.6895484590551558`*^9, 3.689548483570013*^9}, 
   3.689549870516218*^9, {3.689549904377899*^9, 3.689549927511986*^9}, 
   3.689549961605392*^9, 3.689550043230514*^9, {3.689550137920607*^9, 
   3.689550160487719*^9}, 3.689550194668445*^9, {3.689550430036314*^9, 
   3.6895504462392*^9}, 3.689551664895536*^9, 3.68955182413163*^9, 
   3.689551914406763*^9, 3.689552009354616*^9, 3.6895532710427523`*^9, 
   3.68955339515897*^9, 3.689553532435968*^9, 3.689553765191229*^9, 
   3.6895538443164167`*^9, 3.6895540159242277`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[Sigma]", " ", "=", " ", 
  RowBox[{"StandardDeviation", "[", "rand", "]"}]}]], "Input",
 CellChangeTimes->{{3.689542736924251*^9, 3.6895427494804153`*^9}}],

Cell[BoxData["3.263542165830197`"], "Output",
 CellChangeTimes->{
  3.6895428632816753`*^9, 3.6895429128313513`*^9, 3.689543025778246*^9, 
   3.689543582617787*^9, {3.689543630960196*^9, 3.6895436426122513`*^9}, 
   3.689543848419615*^9, 3.689544106400235*^9, {3.6895441444507103`*^9, 
   3.6895441696000977`*^9}, {3.689544234197071*^9, 3.6895442888956423`*^9}, {
   3.689544320289385*^9, 3.6895443537151203`*^9}, {3.6895443943068237`*^9, 
   3.689544407530759*^9}, 3.68954459198834*^9, {3.689544725737005*^9, 
   3.689544760722148*^9}, 3.6895451664224863`*^9, 3.689546426438218*^9, {
   3.6895464791455097`*^9, 3.6895465552821007`*^9}, 3.6895465989723988`*^9, {
   3.689546903392358*^9, 3.6895469541896477`*^9}, {3.689547017027128*^9, 
   3.6895471106756153`*^9}, 3.689547186084037*^9, {3.689547326100968*^9, 
   3.689547335785157*^9}, {3.689547389888287*^9, 3.689547403806077*^9}, 
   3.689547487728425*^9, 3.6895477198810377`*^9, 3.689547900815884*^9, 
   3.689548062347662*^9, 3.6895482257446938`*^9, {3.6895482824506693`*^9, 
   3.689548299806511*^9}, {3.68954845910291*^9, 3.6895484836044807`*^9}, 
   3.689549870560741*^9, {3.6895499044548893`*^9, 3.689549927552878*^9}, 
   3.689549961647279*^9, 3.689550043274578*^9, {3.6895501379635468`*^9, 
   3.689550160529656*^9}, 3.68955019471658*^9, {3.689550430103548*^9, 
   3.689550446302227*^9}, 3.689551664948806*^9, 3.689551824169839*^9, 
   3.689551914453891*^9, 3.689552009409564*^9, 3.68955327108716*^9, 
   3.68955339528905*^9, 3.689553532726157*^9, 3.689553765345015*^9, 
   3.68955384489222*^9, 3.689554016015071*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Trying models"
}], "Subsection",
 CellChangeTimes->{{3.688337833284293*^9, 3.6883378387402563`*^9}, {
  3.689530732142811*^9, 3.689530736910651*^9}, {3.689541403408222*^9, 
  3.689541403816*^9}, {3.689542929727227*^9, 3.68954293079245*^9}, {
  3.689542962742992*^9, 3.689542965262998*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, 
   3.688339206676055*^9}],

Cell[TextData[Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"P", 
    RowBox[{"(", "\[CapitalOmega]", ")"}]}], " ", "=", " ", "1"}], 
  TraditionalForm]]]], "Text",
 CellChangeTimes->{3.689541846172804*^9}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{"C", "*", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{
      RowBox[{"pd", "(", "x", ")"}], 
      RowBox[{"\[DifferentialD]", "x"}]}]}]}], TraditionalForm]]],
 "= 1, x > 0"
}], "Text",
 CellChangeTimes->{{3.6882217670043726`*^9, 3.6882218004647083`*^9}, {
   3.68822183080496*^9, 3.6882218356972265`*^9}, 3.6882947303798904`*^9, {
   3.6882951383775945`*^9, 3.688295175004483*^9}, {3.68830624783696*^9, 
   3.688306399881089*^9}, {3.6883064708229246`*^9, 3.688306556048299*^9}, {
   3.6883066513402257`*^9, 3.6883066882442403`*^9}, 3.689169394345349*^9, 
   3.6891694647933187`*^9, {3.6891695145565915`*^9, 3.689169514981202*^9}, {
   3.689323007498064*^9, 3.6893230106501584`*^9}, {3.689415786495446*^9, 
   3.6894158615147285`*^9}, {3.689415920319048*^9, 3.689416001347562*^9}, {
   3.6894160381462326`*^9, 3.6894161615465307`*^9}, {3.689416193876233*^9, 
   3.6894162617389393`*^9}, {3.689416388201764*^9, 3.689416388201764*^9}, {
   3.689416422094041*^9, 3.6894165521199036`*^9}, {3.6894167442888823`*^9, 
   3.6894168522941303`*^9}, {3.689416948871025*^9, 3.6894169676844654`*^9}, {
   3.68941702171835*^9, 3.689417087381785*^9}, {3.689417122602254*^9, 
   3.68941720085609*^9}, {3.6894173661803017`*^9, 3.6894173944629297`*^9}, {
   3.6894175912924285`*^9, 3.6894176388103714`*^9}, {3.6894176748746033`*^9, 
   3.6894177035322742`*^9}, {3.6894177502220507`*^9, 
   3.6894177672737403`*^9}, {3.6895254409378815`*^9, 3.689525524968902*^9}, {
   3.689525566967901*^9, 3.6895256356426845`*^9}, {3.689541887285232*^9, 
   3.689541912637052*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, {
  3.688339162508295*^9, 3.688339166187951*^9}, {3.688342470353647*^9, 
  3.6883424708497562`*^9}}],

Cell[CellGroupData[{

Cell["Code used by all models", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533896803755*^9, 3.6895338968119373`*^9}, {3.6895448426920424`*^9, 
  3.689544844851783*^9}, {3.689547256365437*^9, 3.6895472682453413`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sort", "=", 
   RowBox[{"Sort", "[", "rand", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[CapitalDelta]", "=", 
   RowBox[{"1", "/", "n"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"data", "=", 
   RowBox[{
    RowBox[{
     FractionBox["\[CapitalDelta]", "2"], "+", 
     RowBox[{"Range", "[", 
      RowBox[{"0", ",", 
       RowBox[{"1", "-", "\[CapitalDelta]"}], ",", "\[CapitalDelta]"}], 
      "]"}]}], "//", "N"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.6895021356594806`*^9, 3.6895022124449425`*^9}, {
   3.689502260720151*^9, 3.6895022996199045`*^9}, {3.6895023508288116`*^9, 
   3.689502389690081*^9}, {3.6895028158879547`*^9, 3.68950281977877*^9}, 
   3.689503221949534*^9, {3.6895033164541397`*^9, 3.6895033443617506`*^9}, {
   3.689503390242427*^9, 3.6895034789498906`*^9}, 3.68950351476412*^9, {
   3.6895035980112934`*^9, 3.689503600214526*^9}, 3.6895043778827095`*^9, 
   3.689504472462247*^9, 3.689504603619569*^9, {3.6895046601992064`*^9, 
   3.6895046630274696`*^9}, {3.6895050792343597`*^9, 3.689505079406242*^9}, {
   3.689505240886032*^9, 3.6895052436830425`*^9}, {3.689505672198988*^9, 
   3.689505674199063*^9}, {3.689505710575859*^9, 3.689505712310317*^9}, {
   3.6895058632925463`*^9, 3.6895058661520386`*^9}, {3.6895059041382885`*^9, 
   3.689505935155425*^9}, {3.689506422002355*^9, 3.6895064744267817`*^9}, {
   3.6895065269449854`*^9, 3.6895065479928646`*^9}, {3.6895065812165613`*^9, 
   3.689506592935882*^9}, {3.6895068447224407`*^9, 3.6895068472850876`*^9}, {
   3.6895071213173513`*^9, 3.6895071641944184`*^9}, {3.6895450387072897`*^9, 
   3.689545045971064*^9}, {3.68954653634658*^9, 3.689546550905695*^9}, 
   3.689546991147743*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"lineplot", " ", "=", 
   RowBox[{"Plot", "[", 
    RowBox[{"x", ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", "0", ",", " ", "1"}], "}"}]}], "]"}]}], 
  ";"}]], "Input"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model 1", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533896803755*^9, 3.6895338968119373`*^9}, {3.6895448426920424`*^9, 
  3.689544844851783*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", " ", 
  RowBox[{"c", "/.", 
   RowBox[{
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"c", "*", 
          RowBox[{"E", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "a"}], "*", "x"}], ")"}]}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "0", ",", " ", "\[Infinity]"}], "}"}]}], 
        "]"}], " ", "\[Equal]", " ", "1"}], ",", " ", "c"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.689543798906279*^9, 3.689543889035437*^9}, {
   3.689544024177054*^9, 3.689544164872308*^9}, {3.6895442216723948`*^9, 
   3.689544285759673*^9}, 3.689544339671418*^9, 3.689544387304167*^9, {
   3.6895504186837177`*^9, 3.689550422427335*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{"a", ",", 
   RowBox[{
    RowBox[{"Re", "[", "a", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.6895443426690063`*^9, 3.6895443539313*^9}, {
   3.689544394554863*^9, 3.689544407805244*^9}, 3.6895445922102413`*^9, {
   3.6895447258107347`*^9, 3.689544761032374*^9}, 3.689545166810231*^9, 
   3.6895464268405247`*^9, {3.689546479556724*^9, 3.689546555699821*^9}, 
   3.689546599393282*^9, {3.689546903802494*^9, 3.689546954603397*^9}, {
   3.6895470173545218`*^9, 3.689547111003703*^9}, 3.689547186418198*^9, {
   3.689547326422887*^9, 3.689547336119972*^9}, {3.689547390264138*^9, 
   3.6895474041482887`*^9}, 3.689547488159108*^9, 3.689547720378695*^9, 
   3.6895479011673117`*^9, 3.6895480629091797`*^9, 3.689548226106571*^9, {
   3.689548282782243*^9, 3.689548300202447*^9}, {3.689548459516461*^9, 
   3.689548484002405*^9}, 3.689549870952668*^9, {3.6895499049165983`*^9, 
   3.689549927997404*^9}, 3.689549962007381*^9, 3.689550043670045*^9, {
   3.6895501383342037`*^9, 3.6895501609012337`*^9}, 3.689550195079846*^9, {
   3.689550430515377*^9, 3.6895504468522663`*^9}, 3.689551665374874*^9, 
   3.6895518245409307`*^9, 3.689551914828957*^9, 3.689552009816373*^9, 
   3.689553271479817*^9, 3.689553395860034*^9, 3.6895535339758167`*^9, 
   3.689553766206854*^9, 3.6895538455241327`*^9, 3.6895540166036053`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"^", "We"}], " ", "can", " ", "see", " ", "that", " ", "we", " ", 
   "can", " ", 
   RowBox[{"replace", " ", "'"}], 
   RowBox[{"c", "'"}], " ", 
   RowBox[{"with", " ", "'"}], 
   RowBox[{"a", "'"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.689547192975294*^9, 3.6895472151592484`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"a", " ", "/.", " ", 
    RowBox[{
     RowBox[{"NSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Integrate", "[", 
           RowBox[{
            RowBox[{"x", "*", "a", "*", 
             RowBox[{"E", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "a"}], "*", "x"}], ")"}]}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "0", " ", ",", " ", "\[Infinity]"}], 
             "}"}]}], "]"}], " ", "\[Equal]", " ", "\[Mu]"}], " ", "&&", " ", 
         
         RowBox[{"a", " ", "\[GreaterEqual]", " ", "0"}]}], "}"}], ",", " ", 
       "a"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6895444940898943`*^9, 3.6895445818219852`*^9}, {
   3.689544631862047*^9, 3.6895447479970837`*^9}, 3.689547180039057*^9, {
   3.689550410779364*^9, 3.689550414363288*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdf", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{"a", " ", "*", " ", 
   RowBox[{"E", "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "a"}], "*", "x"}], ")"}], "  ", 
    RowBox[{"(*", 
     RowBox[{"The", " ", "model"}], "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.689544782304646*^9, 3.6895447960364532`*^9}, {
  3.689544861924007*^9, 3.689544865052135*^9}, {3.689544904499917*^9, 
  3.689544937883894*^9}, {3.689550407602914*^9, 3.689550408139325*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distribution", "=", 
  RowBox[{"ProbabilityDistribution", "[", 
   RowBox[{
    RowBox[{"pdf", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.689506505568923*^9, {3.689507139302579*^9, 3.6895071483811483`*^9}, {
   3.6895071804139814`*^9, 3.6895071907147093`*^9}, {3.689507267843452*^9, 
   3.689507269796689*^9}, {3.6895073409095106`*^9, 3.6895073466285596`*^9}, 
   3.6895078930717382`*^9, {3.689508067943055*^9, 3.689508093041513*^9}, 
   3.689508248299082*^9, {3.6895105329935346`*^9, 3.6895105353567033`*^9}, {
   3.68954688925823*^9, 3.689546898984172*^9}}],

Cell[BoxData[
 RowBox[{"ProbabilityDistribution", "[", 
  RowBox[{
   RowBox[{"0.1977227318651779`", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "0.1977227318651779`"}], " ", "\[FormalX]"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"\[FormalX]", ",", "0", ",", "\[Infinity]"}], "}"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.689546927148818*^9, 3.689546955714987*^9}, {
   3.689547018331625*^9, 3.689547111886224*^9}, 3.689547187360375*^9, {
   3.6895473273112793`*^9, 3.689547337056299*^9}, {3.6895473911829987`*^9, 
   3.689547405040764*^9}, 3.689547489160904*^9, 3.689547721083935*^9, 
   3.689547902128811*^9, 3.689548064150709*^9, 3.689548227077016*^9, {
   3.689548283490898*^9, 3.6895483012053747`*^9}, {3.689548460505237*^9, 
   3.689548484975729*^9}, 3.689549871965357*^9, {3.689549906029483*^9, 
   3.689549928968128*^9}, 3.6895499629349337`*^9, 3.6895500447465153`*^9, {
   3.689550139255683*^9, 3.689550161849286*^9}, 3.689550196010507*^9, {
   3.689550431511415*^9, 3.689550447884871*^9}, 3.6895516662574453`*^9, 
   3.6895518255029182`*^9, 3.689551915803337*^9, 3.689552010743129*^9, 
   3.689553272460429*^9, 3.689553396968388*^9, 3.689553535200617*^9, 
   3.689553767677945*^9, 3.689553847752597*^9, 3.689554017876338*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"model", "=", 
   RowBox[{"CDF", "[", 
    RowBox[{"distribution", ",", "sort"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.689506505568923*^9, {3.689507139302579*^9, 3.6895071483811483`*^9}, {
   3.6895071804139814`*^9, 3.6895071907147093`*^9}, {3.689507267843452*^9, 
   3.689507269796689*^9}, {3.6895073409095106`*^9, 3.6895073466285596`*^9}, 
   3.6895078930717382`*^9, {3.689508067943055*^9, 3.689508093041513*^9}, 
   3.689508248299082*^9, {3.6895105329935346`*^9, 3.6895105353567033`*^9}, {
   3.689546917792138*^9, 3.689546948096325*^9}, 3.689546989415676*^9, 
   3.6895470304473763`*^9, {3.689547079223199*^9, 3.689547079590987*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"compare", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"model", ",", " ", "data"}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6895469657385397`*^9, 3.689546995663527*^9}, {
  3.689547028071478*^9, 3.689547051815598*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataplot", "=", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"compare", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<model\>\"", ",", "\"\<data\>\""}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.689506505568923*^9, {3.689507139302579*^9, 3.6895071483811483`*^9}, {
   3.6895071804139814`*^9, 3.6895071907147093`*^9}, {3.689507267843452*^9, 
   3.689507269796689*^9}, {3.6895073409095106`*^9, 3.6895073466285596`*^9}, 
   3.6895078930717382`*^9, {3.689508067943055*^9, 3.689508093041513*^9}, 
   3.689508248299082*^9, {3.6895105329935346`*^9, 3.6895105353567033`*^9}, 
   3.689547011233674*^9, {3.6895470953276997`*^9, 3.6895471080156403`*^9}, {
   3.689553760287326*^9, 3.689553760758816*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"dataplot", ",", " ", "lineplot"}], "]"}]], "Input",
 CellChangeTimes->{{3.6895464078968077`*^9, 3.689546423379075*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1: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
gHpNR0OBupLyRwGyRj4xbvlZSfm/ADElbeaO+1NJeaQQuruSlmcbV1HeLUTe
ml+cnRZVlE8Ksd1/V2ifTlU0zxRCuYZ34nKPKsorhSh0K7XL61VF+bgQl+wn
XfnTu4rySyG4ln/bC/tU0bxRiJz7KTua2ldRnnmHn3W6APXgKsrT7yCKOuvw
kV2b8s07zEgu1KWMqKL57R3GNrERXXGvorzzDsFBHtsjVlZR/n6H3hWOaQO8
qij/vMMWnqeTYG0VzTfv0NbvqHfb9VWUh4rgNFz+/sSWKsrrRcgcNNvz3fEq
ykdFuNXUybPLqSqa34pgt21QTIeYKspLRXB9MtQ5XFNF+b4IF6+/spjyqYry
UxFWpT+IHNFKQPNUMVJWmm2y7iigPFWMjXzrHU2tBDQPFMPt0LwMsbWA8lUx
ftSukPp3F9A8WowX6mlNj/cRUN4qRtSIkA2hQwQ0PxRjcN8Sl+nDBJS/itFn
h3LesjECmt9KUHYs98iW6QLKYyXw/JbIGTRDQPNGCbbN+nRllouA8lkJGhUb
zabNE9C8WgLDI/XVxm4Cymsl2GAWMPDgMgHNJyWY3nLsj8y1AspvJZBnnVgj
3yig852DiPcfgo5sFdD35+Clpdva+9sFdN5zMHLf0c62TwRUDxxId5zyl2QL
6Pzn4NHy/kenCwRUHxzsb/Skc4FSQB5wYHenicMjo4DqhYOWsl1PLn0UkA8c
XC077OfSvprqhwOzgJEr31hWkxdsrny15P4P62qqJw66Bpx/1mJYNfnBwQDx
4GrnUdVUXxyMb39q5TPHavKEg+Ozfl96tqia6o2DVisX989eXE2+lCJOkf9+
/pJqqr9S3LI4ED7Qp5q8KQVnNHfyl8vVVI+laDZtQrDNjWrypxTLJwdHnb9T
TfVZik/+aZetYqvJo1Jclmb8uBNXTfVaihbbe/7I4lSTT+z19A9GhHOrqX5L
cc8p8NhOXjV5VYrcnmK3ospqqudS8O82b/lCUE1+sdc7Zzbttria6rsU3JVM
D768mjwrxZRbvQKjmwqp3tlc2ndpwvhmQvKNi9y6DRHnLYRU/1z0G/XG/01n
IXnHxWnB5Est7ITUD1xoBn8zpAwUkn9cTLN/Ut55vJD6g4sn45SCTROF5CEX
J98+ilBMF1K/cBHhs3nDAy8h+cjF1iE7d/3yEVL/cPErPNjqw2YhecnmYodz
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
M8XRWkGes89rYfvIqruCPGev7z435Ux/BXkuhyTA9iEGKchzOa51duvaabCC
PJfjge3C/JXjFOS5HFK3Xf3mOivIczkqhqlfTpyqIM/leKi4EOU4S0Gey9Hy
4Y207NkK8lyOyR3uSLr/pyDP5bD5R5P20kNBnsvhUFD4U+6jIM/lWFRx4th5
PwV5LseZ6AuOmQEK8lyO45f67w/bqSDP5WgfxH3nu0tBnrPfKTq7XXWggjxX
YJ8+blLyPgV5rkB4i97cFQcU5LkCezs2Ng88qCDP2d91uwvun1CQ5+x7MbZ7
zpxWkOcKdIkYNVZyXkGeK9DHKadd14sK8lyB2OUoHxOvIM8VOHdwyN9hiQry
XAHJzsGxQUkK8py939LdzWJTFOS5AnfeS5W8VwryXIHjE4Z+epmjIM8VENt2
+abiKshzBfxbhE5ZK1GQ5wocvBLTN+a9gjxX4Pu+tRmjPyvIcwUWiPzkyV8U
5Dn7/83mV4Z9U5DnCrToWrV2WWslea5A1g2b7ap2SvJcwebvoZf5XZTkuQLG
Kc0+iLopyXMFBkxMqZo/SkmeK5BQy3O/O05JnivAeTDmy7nxSvJcgXfjld0u
T1KS5wpYxYXtWeCkJM8VOB09yrLPdCV5rkBpyu0z7i5K8pz9e89P/NdzlOS5
EskjrBpXz1WS50qM5RgsHdyU5Dn7f+te3shwV5Ln7HOViUNmeSjJcyUqr48e
lrxUSZ4rkb9s/yfnZUryXIn7EYww2lNJniuxdH//NnPWK8lzJTa89d1r76Mk
z5UQCn5yp/kryXMlbiYsmWYXoCTPlfg2c+f01zuV5Dn7vBtetroZpCTPlSjs
4p/c9rCSPFdCJz/fJjNESZ4r8WTkr8UDjyvJcyUmSpK/5YUpyXP2/xJ8GecL
SvJciVFtXR6siVCS50p0XaExZEcryXMlvtj+48SLVZLnSqz5OePaTPa3yXMl
+t60mDQnTkmeK1Hjqlll8VhJnivZPuW1tGTXJs+VKBb6LW6UoCTPlUgfpl88
mF2bPFei9dP8v6efKclzJWZfKcpMYe9j8pzdzxWWYYJkJXmuRPM/zybr2LXJ
c/b9Wog2m6cqyXMVzg73+tiafS6T5yp8Nf8xxKNQSZ6r8NFs9Yjf7HOZPFfB
uWTqofvFSvJchdrU1w8acZXkuQo/fZuebMk+t8lzFRxjpZ5uFUryXIXkv4P/
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
bY2WPNejwwr75TYSLXmuxwU/74KlbJ+bPNfD8fSM18FKLXmux51H61zXqLTk
uR6YU2Aj02vJcwNUoaGvGKOWPDfgp2NL75IPWvLcgG+cj/fzf2jJcwMqEwyH
bRrryHMDej/t/t7XQkeeG2Dl075NQkcdeW7ATMeD9wqtdeS5AaMOfavwGaQj
zw0I6fvqmYeDjjw34EZJWkefsTry3IDTI9wGt5yiI88NyPB90tppuY48N6C1
3bz7Ht468tyAw+uXLmf8dOS5AQ87ZU8v2qQjzw3w9v/naOttOvLcgBEZHlsG
7NKR5wbM2Xboy+UDOvLcgDT3IefmHNaR5wacrNias+yYjjw3oOmXR0NehOrI
cwNsRuW4zkrSkecGbN+79djVbB15bkCe4XnR4TwdeW5AUqdT83aV6shzA1qO
OWLuxfa1yXMDFgfOq4lk+9jkuQGTrS06zfihI88NaNvydpGUXZs8N2DCVRe3
3k305LkB4cpLoV9b68lzIzb/bH5/sq2ePDeiMOLBfbtJevLcyE5UX9czbB+a
PDcC4e3t/N305LkRxsvOb/Yv1ZPnRjy+P2r2qLV68tyILp39FE0C9OS5ETEv
7+zpx/aZyXMjdnsfPuB7R0+eG3HjnUuYLkpPnrP/H9HE81ymnjw3InB66VCL
XD15bkR/dX/X6zw9eW5ESOxWV2exnjxn//5veXphrZ48N0L21bLjhM968tyI
Ze9u+Oexa5PnRrgPPvjC19ZAnhsxsu8Dpc1AA3luxIxTc74nsHVt8tyIjm3V
Azc6GshzI1ZxvL0lkwzkuRFLxm9doFtlIM+NuNW5SeplHwN5bsRp3oayRLZO
TZ4b8fN0mmGEv4E8N+KEYfQ4L3Zt8tyI+Apk2uw2kOdGXC5dkXhjj4E8N6Lf
8+BzDgcM5LkRUqXHg86nDeS5EQt8e79fHW4gz2uxt8NM7zaXDOR5LTwXNgvp
c9tAnteiyxu9OT/GQJ7Xolz/Osg23kCe12JMppPzoxcG8rwWOz1nZjsnG8jz
WnBWW8k2phvI81r8/NJ10M5MA3lei/QNzc0SuQbyvBYeHSaOsRMbyPNaWA39
FDdaZyDPa/FP12Xt2v4ykOe1MFvvaHHZwkies88/7kjGeEsjeV4La2N74R92
bfK8Fu6d4sx53YzkeS2+OM3dPKufkTyvxXBRseqWk5E8r0XY5yWKEg8jeV6L
NYUpy5buMpLntZCvSP8jOWokz9nrdTv8mHPSSJ7XYjlT+OYgW0cmz2vxX12H
grpII3lei6Qpf7bGPjOS57UIj/KN3yAwkue1mOVweAN/Ti15Xouo6X97zlhR
S57Xwmv0rsvrt9WS57Xwuzm3dl1sLXlei/8BTAzPRw==
       
       "]]}, {}}, {}, {}, {{}, {}}}, {{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJxFxW0w03EcAPCNdZRrjMr9adxE5SlOUlKpuMhDneHk8nRCWk/InXR1WrdJ
nua6nZTnh5R2jGyuMnHsdDnPo1GzMUtj83RndnRZ9cL39+JzH0r8XWqiHg6H
C/7n/wGJypGu+fAz2xN8LFJkmLv39kcrS8paMV84cED8vhwLgyMStB3PsQR4
yuWpTwGWDlftvZydizFgumHroWcYG74SWc1dWa2DjXT0KD8rLmwXsqTsyePB
GYOe3iVrH2FzHkmKx3fCbXKf/qFT3XA3rdwyUi2ENQdPGzfe/gLrbXBMLO36
YA9dXFtoUz/cz3Af7HUYgq2LVBsNS8OwSiuTjruOwnUL7X3EQhFMJL9ZVijG
4Pwb/KQq22/w+lmOIjlLDKe7CXn7eiZgWZMwb4TyHf5NGyu1f/ADdjxnsJXU
LoH9aijXW8ylcAY51mYmSgY7qcONxMHTsJnxiqFwE03oLOUeKJuBb7q3T+4M
lMOci/FVn9fRGpWFyVzxLMwP9dNn+yrgLH9mJW8OTZkKmKhl/oRPHmewMbc5
OMpqaAMvQmv6CuQp9F9wCSEmnWqrhM2k/Bo9IXrHI3qYZ+o8jGuI4cpNF+C0
V9wC0250h2OOIemOCiYFpDk9IaphifOwKFOAbq7wtlXELMLRXA8SeQv9mFlN
l7xbghuV5FJi0DKcU86Mk15CJ1AX7ZpC0PsFgubgCHQu62pvfjw62ePl6q5M
tA1jj79BPXrrxMPd4rfoycXZ0XoOuiiiNfpCC1rnQL3HFKAlI6wKfRH6Q7b2
mmgczfaKta+dQAe+PsI7L0V/uj/wlT6PLnY+xgpRo1PlZWGUZfThoFuyrjU0
AT9WV6RFT/O9aHGbaAGt1sX1D/qFtZFGp0P/BaO4ekM=
        "]]},
      Annotation[#, "Charting`Private`Tag$251497#1"]& ]}, {}, {}}},
  Axes->{True, True},
  AxesLabel->{
    FormBox["\"model\"", TraditionalForm], 
    FormBox["\"data\"", TraditionalForm]},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 0.989551036252107}, {0, 0.9995}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.689546428883671*^9, {3.689546481600938*^9, 3.689546557645986*^9}, 
   3.6895466009162703`*^9, {3.689546905125093*^9, 3.68954695611379*^9}, {
   3.689547018969294*^9, 3.689547112255991*^9}, 3.689547187605555*^9, {
   3.689547327553433*^9, 3.689547337301271*^9}, {3.689547391402254*^9, 
   3.689547405269219*^9}, 3.689547489516706*^9, 3.689547721309462*^9, 
   3.6895479023770638`*^9, 3.68954806457699*^9, 3.689548227277648*^9, {
   3.689548283688613*^9, 3.689548301410131*^9}, {3.689548460792651*^9, 
   3.689548485185128*^9}, 3.689549872173826*^9, {3.689549906237363*^9, 
   3.689549929150103*^9}, 3.6895499631383533`*^9, 3.689550044959077*^9, {
   3.6895501394530993`*^9, 3.689550162066825*^9}, 3.689550196224106*^9, {
   3.689550431793632*^9, 3.6895504490243683`*^9}, 3.689551666468425*^9, 
   3.6895518257868137`*^9, 3.689551916019587*^9, 3.6895520110063553`*^9, 
   3.68955327266471*^9, 3.6895533972963457`*^9, 3.689553535537765*^9, 
   3.689553768109497*^9, 3.689553848050589*^9, 3.689554018293974*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model 2", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533896803755*^9, 3.6895338968119373`*^9}, {3.6895448426920424`*^9, 
  3.689544844851783*^9}, {3.6895452784812393`*^9, 3.6895452785292397`*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "c", ",", " ", "a", ",", " ", "pdf", ",", " ", "distribution", ",", " ", 
   "model", ",", " ", "compare", ",", " ", "dataplot"}], "]"}]], "Input",
 CellChangeTimes->{{3.6895451932824802`*^9, 3.6895452034983597`*^9}, {
  3.68954730658185*^9, 3.6895473183014727`*^9}, {3.689547351877369*^9, 
  3.689547400842082*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", " ", 
  RowBox[{"c", "/.", 
   RowBox[{
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"c", "*", "x", " ", "*", 
          RowBox[{"E", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "a"}], "*", "x"}], ")"}]}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "0", ",", " ", "\[Infinity]"}], "}"}]}], 
        "]"}], " ", "\[Equal]", " ", "1"}], ",", " ", "c"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6895474669900293`*^9, 3.689547474220845*^9}, {
  3.689550372379788*^9, 3.689550401659358*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   SuperscriptBox["a", "2"], ",", 
   RowBox[{
    RowBox[{"Re", "[", "a", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.689547490568247*^9, 3.689547722217751*^9, 3.689547903356495*^9, 
   3.689548065556266*^9, 3.689548228263775*^9, {3.6895482845888968`*^9, 
   3.689548302431408*^9}, {3.689548461805236*^9, 3.689548486207183*^9}, 
   3.689549873125441*^9, {3.6895499072759037`*^9, 3.6895499301035233`*^9}, 
   3.689549964146885*^9, 3.689550045953291*^9, {3.689550140428295*^9, 
   3.6895501629770193`*^9}, 3.6895501972169724`*^9, {3.689550432690044*^9, 
   3.6895504500099792`*^9}, 3.689551667356689*^9, 3.689551826974978*^9, 
   3.68955191691509*^9, 3.689552011924409*^9, 3.689553273736865*^9, 
   3.6895533984140377`*^9, 3.689553536612711*^9, 3.689553769168722*^9, 
   3.689553849486521*^9, 3.689554019391691*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"^", " ", "'"}], 
   RowBox[{"c", "'"}], " ", "kan", " ", "ers\[ADoubleDot]ttas", " ", "med", 
   " ", 
   RowBox[{"a", "^", "2"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.689547911540415*^9, 3.68954792748195*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"a", " ", "=", " ", 
   RowBox[{"a", " ", "/.", " ", 
    RowBox[{
     RowBox[{"NSolve", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"Integrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"x", "^", "2"}], " ", "*", 
             RowBox[{"a", "^", "2"}], " ", "*", 
             RowBox[{"E", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "a"}], "*", "x"}], ")"}]}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "0", " ", ",", " ", "\[Infinity]"}], 
             "}"}]}], "]"}], " ", "\[Equal]", " ", "\[Mu]"}], " ", "&&", " ", 
         
         RowBox[{"a", " ", "\[GreaterEqual]", " ", "0"}]}], "}"}], ",", " ", 
       "a", ",", " ", "Reals"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.689547611669496*^9, 3.6895476559716682`*^9}, {
  3.689548177024436*^9, 3.6895481811949863`*^9}, {3.689550364163561*^9, 
  3.689550369387246*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdf", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"a", "^", "2"}], "*", "x", " ", "*", 
   RowBox[{"E", "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "a"}], "*", "x"}], ")"}], " "}]}]}]], "Input",
 CellChangeTimes->{{3.689547821767735*^9, 3.689547884874092*^9}, {
   3.689550385115686*^9, 3.689550398787199*^9}, 3.689550438187746*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"distribution", " ", "=", " ", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     RowBox[{"pdf", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6895071104886975`*^9, 3.6895071157233076`*^9}, {
  3.6895072409359074`*^9, 3.6895072607806244`*^9}, {3.6895072979230623`*^9, 
  3.6895073333779135`*^9}, {3.689510520914795*^9, 3.689510523368045*^9}, {
  3.689547956201785*^9, 3.689547962345546*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"model", " ", "=", " ", 
   RowBox[{"CDF", "[", 
    RowBox[{"distribution", ",", " ", "sort"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.689547968979562*^9, 3.6895480087374153`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"compare", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"model", ",", " ", "data"}], "}"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataplot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"compare", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<model\>\"", ",", "\"\<data\>\""}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.689548021846052*^9, 3.689548058617103*^9}, {
  3.689553737239481*^9, 3.689553745167036*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"lineplot", ",", " ", "dataplot"}], "]"}]], "Input",
 CellChangeTimes->{{3.6895480467858887`*^9, 3.6895480536379013`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJxFxW0w03EcAPCNdZRrjMr9adxE5SlOUlKpuMhDneHk8nRCWk/InXR1WrdJ
nua6nZTnh5R2jGyuMnHsdDnPo1GzMUtj83RndnRZ9cL39+JzH0r8XWqiHg6H
C/7n/wGJypGu+fAz2xN8LFJkmLv39kcrS8paMV84cED8vhwLgyMStB3PsQR4
yuWpTwGWDlftvZydizFgumHroWcYG74SWc1dWa2DjXT0KD8rLmwXsqTsyePB
GYOe3iVrH2FzHkmKx3fCbXKf/qFT3XA3rdwyUi2ENQdPGzfe/gLrbXBMLO36
YA9dXFtoUz/cz3Af7HUYgq2LVBsNS8OwSiuTjruOwnUL7X3EQhFMJL9ZVijG
4Pwb/KQq22/w+lmOIjlLDKe7CXn7eiZgWZMwb4TyHf5NGyu1f/ADdjxnsJXU
LoH9aijXW8ylcAY51mYmSgY7qcONxMHTsJnxiqFwE03oLOUeKJuBb7q3T+4M
lMOci/FVn9fRGpWFyVzxLMwP9dNn+yrgLH9mJW8OTZkKmKhl/oRPHmewMbc5
OMpqaAMvQmv6CuQp9F9wCSEmnWqrhM2k/Bo9IXrHI3qYZ+o8jGuI4cpNF+C0
V9wC0250h2OOIemOCiYFpDk9IaphifOwKFOAbq7wtlXELMLRXA8SeQv9mFlN
l7xbghuV5FJi0DKcU86Mk15CJ1AX7ZpC0PsFgubgCHQu62pvfjw62ePl6q5M
tA1jj79BPXrrxMPd4rfoycXZ0XoOuiiiNfpCC1rnQL3HFKAlI6wKfRH6Q7b2
mmgczfaKta+dQAe+PsI7L0V/uj/wlT6PLnY+xgpRo1PlZWGUZfThoFuyrjU0
AT9WV6RFT/O9aHGbaAGt1sX1D/qFtZFGp0P/BaO4ekM=
        "]]},
      Annotation[#, "Charting`Private`Tag$251497#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1: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
LCfPFTgbPbwdv1xOnisw7vyJF2Mq5OQ5s+b26v5ZISfPFQjrN9OCr5ST5wqs
uez4SqmXk+cK7Joz5mbXBjl5roDlrIxO/sy+jJ4rwLFeNP/jXzl5rsD2kviW
PUwV5LkCLr82LH3UW0GeK/AuOGb1S2YfRs8V6Pdh+pcf/ynIcwXmjKtVs8Yp
yHPm79oXb5s+SUGeK3Cy56c9Y+coyHMFVuyXLXnD7MPouQIxZ9eaRS1WkOcK
TKtd178lsy+j5wpwXyxaPHS9gjxX4PyNQfb7mH0aPVcgbdmmyI3MPo2eM+c1
rNfjUHcFea6AkBdvctxTQZ4rMPbTiFUmlxTkOXP/iuk1VgEK8lyJj6qZo3eG
KMhzJdYIA/dJwxTkuRKXtj261+mxgjxXoqP7x+E2bxXkuRL3JZG+/6QoyHMl
TpqdmXKgREGeK6Hsd22AV7WCPFdiU5S50yy1gjxXIqHDxHtRWgV5rkR40Nj7
9l8V5LkSK4bHTSj/rSDPlZh7pV/EJVMlea7EdY/pbcMnKslzJbJ1lst7zFaS
50qoJK72x9YqyXMlaieHn9+6XUmeK/FhvWHf8J1K8lyJljuGxt47qCTPlRgx
snRFDvN3Rs+VKPUO4oVdUJLnSlRa7zmTx3zO6LkSRz4kfA19qCTPlShZ4XKs
ZYiSPFei0767EXuYtdFz5jzNnvV+Hqokz5XYcT5Z6x2mJM+VsMy+fvl8uJI8
Z77nYr+dds+U5LkSZ3zmmFx8riTPlfj2LTblTKqSPFdiipf8PitdSZ6rYNdj
DUJylOS5CpIOF/oGMN9r9FwFC+uynwvKleS5CledJkqiZEryXIW4ecsv/GXW
Rs9V8AzJ66kwKMlzFUyfbR+795OSPGeufyfxhKKZijxXofc6gTqzhYo8V+Fo
nTnX30xFnqtQr11dGcmsjZ6rcKR5x/Mr2qvIcxVmhF59kmihIs9VGBh04ZLQ
UkWeq3BwzkRz9QgVea5Cx7vDph1xVJHnKoS+SjhuvlJFnqtQmsca+JxZGz1n
9tv+csO5dSrynPn+ru9tnzNro+cq3N4Z5ZW3SUWeq+DR2XxU+jYVea5C2pvE
RDfme42eq2Cfe8B77SkVea7CIPMrPvfPqshzFT6O0IumBKjIcxVa7V+sCLqr
Is9V6NG+9TKvRyrynLnezP0T/eJU5LkKRanhW34ya6PnzH4mr3yY9EZFnqsR
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
       
       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.9999999795918367}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.6895480670882263`*^9, 3.689548229394643*^9, {3.689548285673195*^9, 
   3.689548303499229*^9}, {3.689548462921455*^9, 3.689548487276791*^9}, 
   3.68954987439985*^9, {3.6895499084897337`*^9, 3.6895499312924023`*^9}, 
   3.689549965217741*^9, 3.689550047035203*^9, {3.6895501417978697`*^9, 
   3.68955016426945*^9}, 3.689550198405943*^9, 3.689550451135227*^9, 
   3.689551668345417*^9, 3.689551828268515*^9, 3.689551917982983*^9, 
   3.689552013085791*^9, 3.689553274858363*^9, 3.68955339999058*^9, 
   3.6895535379433804`*^9, 3.689553770637877*^9, 3.6895538508977823`*^9, 
   3.6895540216504717`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Model 3", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533896803755*^9, 3.6895338968119373`*^9}, {3.6895448426920424`*^9, 
  3.689544844851783*^9}, {3.689545280609522*^9, 3.689545280665216*^9}}],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{
  "c", ",", " ", "a", ",", " ", "pdf", ",", " ", "distribution", ",", " ", 
   "model", ",", " ", "compare", ",", " ", "dataplot"}], "]"}]], "Input",
 CellChangeTimes->{3.68954740933072*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"c", "=", " ", 
  RowBox[{"c", "/.", 
   RowBox[{
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{"c", " ", "*", " ", "x", " ", 
          RowBox[{"(", 
           RowBox[{"x", "  ", "+", " ", "b"}], ")"}], " ", 
          RowBox[{"E", "^", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "a"}], " ", "*", "x"}], ")"}]}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"x", ",", " ", "0", ",", " ", "\[Infinity]"}], "}"}]}], 
        "]"}], " ", "\[Equal]", " ", "1"}], ",", " ", "c", ",", " ", 
      "Reals"}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6895474669900293`*^9, 3.689547474220845*^9}, {
  3.689548241888596*^9, 3.689548245536222*^9}, {3.689548292289433*^9, 
  3.689548293416737*^9}, {3.689550348820191*^9, 3.6895503550674953`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox["a", "3"], 
    RowBox[{"2.`", "\[VeryThinSpace]", "+", 
     RowBox[{"a", " ", "b"}]}]], ",", 
   RowBox[{"a", ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.689548230324603*^9, {3.6895482900251303`*^9, 3.689548307645513*^9}, {
   3.689548467069335*^9, 3.68954849143859*^9}, 3.689549878618362*^9, {
   3.689549912744803*^9, 3.6895499355358067`*^9}, 3.689549969513845*^9, 
   3.689550051315497*^9, {3.689550146661088*^9, 3.689550168703067*^9}, 
   3.689550203095401*^9, 3.6895504555137463`*^9, 3.6895516728412657`*^9, 
   3.689551832605268*^9, 3.689551922383501*^9, 3.689552017641336*^9, 
   3.689553279739626*^9, 3.689553404727652*^9, 3.689553542464402*^9, 
   3.6895537756377687`*^9, 3.689553855766553*^9, 3.689554026667713*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
   RowBox[{"^", "we"}], " ", "can", " ", 
   RowBox[{"replace", " ", "'"}], 
   RowBox[{"c", "'"}], " ", "with", " ", "that", " ", "monstrosity"}], "  ", 
  "*)"}]], "Input",
 CellChangeTimes->{{3.689554123865303*^9, 3.6895541558512287`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"expression", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a", "^", "3"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", "+", " ", 
       RowBox[{"a", " ", "*", " ", "b"}]}], ")"}]}], ")"}], " ", "*", " ", 
   "x", " ", "*", " ", 
   RowBox[{"(", 
    RowBox[{"x", " ", "+", " ", "b"}], ")"}], " ", "*", " ", 
   RowBox[{"E", "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "a"}], "*", "x"}], ")"}]}]}]}]], "Input",
 CellChangeTimes->{{3.689548359970731*^9, 3.689548435287003*^9}, {
   3.6895484761988087`*^9, 3.6895484798385563`*^9}, 3.689548541974638*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"a", ",", " ", "b"}], "}"}], " ", "=", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", " ", "b"}], "}"}], " ", "/.", " ", 
   RowBox[{
    RowBox[{"NSolve", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Integrate", "[", 
           RowBox[{
            RowBox[{"x", " ", "*", " ", 
             RowBox[{"expression", "[", "x", "]"}]}], ",", " ", 
            RowBox[{"{", 
             RowBox[{"x", ",", " ", "0", " ", ",", " ", "\[Infinity]"}], 
             "}"}]}], "]"}], " ", "\[Equal]", " ", "\[Mu]"}], " ", "&&", " ", 
         
         RowBox[{"a", " ", "\[GreaterEqual]", " ", "0"}]}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Integrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"x", "^", "2"}], " ", "*", " ", 
              RowBox[{"expression", "[", "x", "]"}]}], ",", " ", 
             RowBox[{"{", 
              RowBox[{"x", ",", " ", "0", " ", ",", " ", "\[Infinity]"}], 
              "}"}]}], "]"}], " ", "-", " ", 
           RowBox[{"\[Mu]", "^", "2"}]}], " ", "\[Equal]", " ", 
          RowBox[{"\[Sigma]", "^", "2"}]}], " ", "&&", " ", 
         RowBox[{"b", "\[GreaterEqual]", " ", "0"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", " ", "b"}], "}"}]}], " ", "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.689549591653146*^9, 3.6895496955993547`*^9}, {
  3.689549726887698*^9, 3.689549803407023*^9}, {3.689549833833197*^9, 
  3.689549899806155*^9}, {3.689549954646521*^9, 3.689549956894025*^9}, {
  3.689550017925508*^9, 3.6895500375977182`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.5176698412157348`", ",", "2.386474416032624`"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.689549883893858*^9, {3.689549918042502*^9, 3.689549940359746*^9}, 
   3.689549974676097*^9, 3.689550056547756*^9, {3.6895501522000713`*^9, 
   3.689550174114306*^9}, 3.6895502082302933`*^9, 3.689550461014402*^9, 
   3.6895516779685183`*^9, 3.689551837717297*^9, 3.689551927613654*^9, 
   3.6895520227723722`*^9, 3.689553285144705*^9, 3.6895534102691383`*^9, 
   3.689553547875812*^9, 3.689553783812598*^9, 3.689553861177352*^9, 
   3.689554032127576*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pdf", "[", "x_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a", "^", "3"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", " ", "+", " ", 
       RowBox[{"a", " ", "*", " ", "b"}]}], ")"}]}], ")"}], "*", "x", "*", 
   RowBox[{"(", 
    RowBox[{"x", "+", "b"}], ")"}], "*", 
   RowBox[{"E", "^", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "a"}], "*", "x"}], ")"}], " ", 
    RowBox[{"(*", " ", 
     RowBox[{"Model", " ", "function"}], " ", "*)"}]}]}]}]], "Input",
 CellChangeTimes->{{3.689550083825623*^9, 3.689550157719977*^9}, 
   3.689550188188702*^9, {3.689550223404434*^9, 3.689550229828396*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"distribution", " ", "=", " ", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     RowBox[{"pdf", "[", "x", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6895071104886975`*^9, 3.6895071157233076`*^9}, {
  3.6895072409359074`*^9, 3.6895072607806244`*^9}, {3.6895072979230623`*^9, 
  3.6895073333779135`*^9}, {3.689510520914795*^9, 3.689510523368045*^9}, {
  3.689547956201785*^9, 3.689547962345546*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"model", " ", "=", " ", 
   RowBox[{"CDF", "[", 
    RowBox[{"distribution", ",", " ", "sort"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.689547968979562*^9, 3.6895480087374153`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"compare", " ", "=", " ", 
   RowBox[{"Transpose", "[", 
    RowBox[{"{", 
     RowBox[{"model", ",", " ", "data"}], "}"}], "]"}]}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"dataplot", " ", "=", " ", 
   RowBox[{"ListPlot", "[", 
    RowBox[{"compare", ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<model\>\"", ",", "\"\<data\>\""}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "Automatic"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.689548021846052*^9, 3.689548058617103*^9}, {
  3.68955382428686*^9, 3.689553836382381*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", 
  RowBox[{"lineplot", ",", " ", "dataplot"}], "]"}]], "Input",
 CellChangeTimes->{{3.6895480467858887`*^9, 3.6895480536379013`*^9}}],

Cell[BoxData[
 GraphicsBox[{{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1:eJxFxW0w03EcAPCNdZRrjMr9adxE5SlOUlKpuMhDneHk8nRCWk/InXR1WrdJ
nua6nZTnh5R2jGyuMnHsdDnPo1GzMUtj83RndnRZ9cL39+JzH0r8XWqiHg6H
C/7n/wGJypGu+fAz2xN8LFJkmLv39kcrS8paMV84cED8vhwLgyMStB3PsQR4
yuWpTwGWDlftvZydizFgumHroWcYG74SWc1dWa2DjXT0KD8rLmwXsqTsyePB
GYOe3iVrH2FzHkmKx3fCbXKf/qFT3XA3rdwyUi2ENQdPGzfe/gLrbXBMLO36
YA9dXFtoUz/cz3Af7HUYgq2LVBsNS8OwSiuTjruOwnUL7X3EQhFMJL9ZVijG
4Pwb/KQq22/w+lmOIjlLDKe7CXn7eiZgWZMwb4TyHf5NGyu1f/ADdjxnsJXU
LoH9aijXW8ylcAY51mYmSgY7qcONxMHTsJnxiqFwE03oLOUeKJuBb7q3T+4M
lMOci/FVn9fRGpWFyVzxLMwP9dNn+yrgLH9mJW8OTZkKmKhl/oRPHmewMbc5
OMpqaAMvQmv6CuQp9F9wCSEmnWqrhM2k/Bo9IXrHI3qYZ+o8jGuI4cpNF+C0
V9wC0250h2OOIemOCiYFpDk9IaphifOwKFOAbq7wtlXELMLRXA8SeQv9mFlN
l7xbghuV5FJi0DKcU86Mk15CJ1AX7ZpC0PsFgubgCHQu62pvfjw62ePl6q5M
tA1jj79BPXrrxMPd4rfoycXZ0XoOuiiiNfpCC1rnQL3HFKAlI6wKfRH6Q7b2
mmgczfaKta+dQAe+PsI7L0V/uj/wlT6PLnY+xgpRo1PlZWGUZfThoFuyrjU0
AT9WV6RFT/O9aHGbaAGt1sX1D/qFtZFGp0P/BaO4ekM=
        "]]},
      Annotation[#, "Charting`Private`Tag$251497#1"]& ]}, {}, {}}, {{}, {{}, 
     {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], AbsoluteThickness[
      1.6], PointBox[CompressedData["
1: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
Kxa7mxdT/ihAkptdj7pdxZT/mc87FKXxOFBMeaQQ5pJT/5yciinvFmLq3K8W
J64WUz4pxLCK/Be3HxXTPFOIrptdvI7FFVNeYc7JZdmmE6nFlI8LwZseaGGf
UUz5pRBRl3cYOGcV07xRCCPZzcYDJcWUZ4qwPtvSfnhtMeXpIqyya1U6l1nr
8k0RlgZMsjOVFdP8VoQ6vaQTZ+eVUN4pQplwzeQpa0sofxfBs+GPZ5sNJZR/
inDYdX7O5l0lNN8UQW/r6sWWe0soDxXj24ErFbNOl1BeL8aW5LdFxvEllI+K
0fZ+72PRySU0vxXjuOOxx9WtSikvFYNt/vPLx8ellO+L4db9V1JJUinlp2J4
OQQMa/WplOapEgz9e6f32TYsylMl+Ppw0SxxOxbNAyXgtk5lTzRgUb4qgeTw
Z+813Vg0j5bgw2vznmbGLMpbJfCLCpYEDmfR/FCCV+oLbb6NYlH+KkF3Z4t9
OZNZNL+Vwn+8XaGfJYvyWCkuWBy2d1/MonmjFB9HGeqF2LAon5XCde2WsnW2
LJpXSxF4TVjpuZ5Fea0Ub3aeq2vYzqL5pBQnpl/6HHuIRfmtFFWR81iPjrPo
+c5CxI6dR2M8WPT9szBueus8e08WPe9Z8Bh4YnjrfBbVAwuPx2dNuCpi0fOf
halFcqO3/1hUHyyYtVp6MLRrGXnAwlD3p+2j+pVRvbCwXNhu/HPTMvKBhQ7b
axcGW5RR/bBwsqn3mXbWZeQFC2r3D7ZCmzKqJxbaO7sOW3G4jPxg/n/PYPdU
pzKqLxZzHnz9O6fLyBMWfuW768+9V0b1xoLRsY5TpCFl5EsZdjeum3cqrIzq
rwyVUfc3vYwrI2/KsHndrbd/PpdRPZZh8QhhdNyvMvKnDP3NrTO8W5VTfZbB
3X3fV5uO5eRRGQT5JXu1XcupXsvQ87GJVf3ccvKpDHnnNnrNmV9O9VuGlxnP
++xZUE5eMfvpZlqx26qc6rkMDdFjO0qXlpNfZZhs6iUwWFlO9V2GifPiFWM3
lJNnZbhwecwuQ+9yqvdy/H1gkFnMrHW+lWPpx1XFHlfLqf7LceT+rglz7pWT
d+WYe6HnxaKocuqHclSO3XJzfWw5+VeO2Oupc97klVN/lGNt1vgeg4rLycNy
bHV0dIupKad+KYdV3udsmz/l5GM5qq7+Lu7SvoL6pxyjXGwF64wqyMty3Ok1
JjmGWev6qRzPF5ou/7iygvwsh62y9NqxvRXUX+Xoe13+6Cez1nlajnNL56tO
eFZQv1WAa+Mj+RBWQb5W4E9DvyJxRAX1XwW6db9YPyKmgrytgMHIccNVcRXU
jxWIWJXIGpBcQf5W4H1Rx1xWagX1ZwUeGx6tXFtQQR5XYPH6XUaeggrq1wp8
3O413U+vknyuQM7P90WLDSqpfytwtMuR2W97VJLXFXCpDK2fNbqS+rkCE1wr
p7ltrCS/mfVd4y1nt1dSf1dgX7cUjl9AJXleiSnzfhwuD6qk/F6JW06eA9SZ
leR7JQq2cQN3f6ukPF+JxOpXY7QGbPK+Embyf70TDNmU7yvRZa0mvW46m/yv
ROnnOYVaKzbl/UpINV3Zs1ayKQ9UInnJNNPhq9iU/ysR8e6061JvNuWDStha
O3XN9GHTPFCJFT8frAwJYFNeqER/6auFTmlsmg8qcXNJye9KFpvyQyUU4mVr
rleyaV6oROyxIzaqKjblCTasndrWDuhYRfMDG7vez7vmwax1+YKNqiMn3R16
VNE8wUY/w7zcdJMqyhts9Ozb6qOjdRXNF2xYTfD/U7+iivIHGyUrRu3N21RF
8wYbso/BZZxDVZRH2Ih+WLN/n08VzR9shNf2Hn+WWevyCXOfIzuLmpi1bh5h
A8pXNpF+VZRX2HDXWssj71TRfMKG2UTJqPGvqii/sLHljsWV1bFVNK+wITm/
98uNd1WUZ6oQ1ZQscs6tovmlCtwx0qWnflZRvqnCd9aHLo/acGieqcLYpMDd
xn04lHeqUHJybd2QBRyab6qQ1XEbZ6IXh/JPFfL95gdv8OXQvFOFs4rrEWeu
cSgPMfv+YNzJKYJD808VLhwb0vbBSw7loyq0H3vVLCuFQ/NQFU5Me9sUlcqh
vMTcV6/IGRtyOTQfVWHXjFlxMg6H8lMVHJ3rpq1t5NC8xMHdndfSBVoO5SkO
xi53/rroB4fmJw4Ciu7m3//DoXzFgb9xh7XfJ1TTPMXBsxsDFS/mVFPe4kBb
1b8nG9U0X3Ewx8mrcd7iaspfHHzpXmh0bG01zVscFKwyn5awsZryGAemI2cb
WdpX0/zFQbJVaUaQSzXlMw6+F9c26p2ppnmMOTfHS9fsmLUur3Hg0MlDNPVc
Nc1nHER3WGzwOaya8hsHMeKbnbo8qybPq6HqfmWkN7PWeV6NmNDUVyNjq8nz
ahzwtTdUxVWT59WQ/hccdLSmmjyvRnGbxxsbedXkOXOf51RphzTV5Hk1HJt6
b/37vZo8Z/blOqbw8L9q8rwaA5yfzS9vU0OeV+NDpcbMv0cNeV6N0udzJvbt
W0OeV2PZhnLDrJk15Hk1JHpd0vbY1pDn1QgyHXSl9aYa8rwarPUh7GvMWud5
NfZNLmxtcqyGPK+B39rs4yHeNeR5Dba5zJeaXq0hz2vQ5szwre6BNeR5DbJa
O707fbeGPK9Bn2sjahPDasjzGqhivePNXteQ5zVwrQyZ7/q2hjyvwWjuPeG4
ihryvAad5nm/S6urIc9r8Fs7bK+TuoY8r0H/TZ2P3/hQQ57XoOhn0LVuHWrJ
8xoovN9fON6tljyvgciq6wR271rynFkb9Xoe16eWPK+FWM/5sZVJLXlei3Kp
yvPqkFryvBaLzFLnrhteS57XYvxRVucns2rJ81oMGnWwdsPGWvK8Foo7Icjd
WUue12J9n0U7nW/Vkue1EJz2sP7zrJY8r8WurW+HfZPWkue1iPibnCWS1ZLn
tYiqet4291steV6LHgFdN85qVUee1+L99nZWe3rWkee16F11+WSmcR15XovQ
QmszK7M68rwWA1z6WN6ZWEee16HnnDMNY6bVked14DhLIpUudeR5HX67fR/4
zbeOPK/DPmn1ifU368jzOsg8/MdtC6gjz+vg/FmW2DGojjyvg3BzYfKikDry
vA7i5LA+Zx/Xked1mK6XcSk0oY48r0PMvXV7plfXked1+OXM6bhEVkeeM/up
9TL+9KeOPK/D0rmpy4/r1ZPndbi/Pb395y715HkdItwicj8srCfP67FiyRWp
ZEU9eV6PXsHK/NUr68nzergEWnZ33lJPntcj1Nw2e/zWevK8HueFbdyO2deT
5/WYPNStVZeD9eR5PeZUbPCKd64nz+ux285b77d3PXleD82aR2XTLteT5/UI
MJmz3FdRT54z9xF82LqxTwN5Xo+uFaqdM+wayPN6XNEflsLZ3kCe12PMaZMF
83wbyPN6NH41nL71egN5Xg/56b4+g/wbyPMGqPy/jPcKbSDPG7Dr644hk540
kOcNsH2o71if3ECeN+D0ki+exkUN5HkDxkTxelXWN5DnDdjphImu/RrJ8wb0
22ykHWrWSJ43gNtu/8R9oxrJ8wbM+9euRxoayfMGTM9xFP5l1jrPG8BxN/px
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
Nk9CnksRrblvpyyUkOdSDFjxymhQmYQ8l0L+4LJBcLmEPJeiw/p3k0/KJeS5
FN3nbu5zSiEhz6Vo3ydDPbRJQp5LkRHg1NaNuQ+d51L4RUdE2baSkudSvP27
8J6itZQ8l+LMhP0dpZ2k5LkUyevy9MKGSslzKWqqVufcGi8lz6UIiDr87uJ8
KXkuRc9XJ2/7L5SS51Ks+tC3y5bFUvJcir23lst91kjJcymOzDNbkLNZSp5L
oR37uZS9RUqeS1HcyYAv2y0lz6UI+lc2/8VBKXkuReCl9I1jjkjJcymuBE3+
IneVkudSdLLf6GZzTkqeS9E2XHD4ELNvnedSuCz3uXbvtpQ8l+JfzfyBKyKl
5LkM13qUf7gYKyXPZfDv13HEondS8lwGh+nrtvrFS8lzGSb12nnkdomUPJeh
q5vramO2lDyXYclw9zQTqZQ8l2FX1bwLPZqk5LkMl+8/Vz5rKyPPZTh4d++K
FR1k5LkM4lDr4WHdZOS5DCOjHp43MZGR5zLs83nwpm64jDyXYYe+p7eAeV3n
uQwDEt50P3JQRp7LEHHgkmelt4w8l2FRVsK5vGsy8lyGC9NvrX/vJyPPZWAK
erLhPRl5LgNP+tpv01MZeS5DxV0308yXMvJchqmxW2ZHZ8rIcxl6fTSY07NA
Rp7LYHa+7/BXRTLyXIboJPOvg4pl5LkMPdvMfuBeIiPPZcgoih3rWCojz2Xg
vvTXjy6XkecytKrrcy+ILSPPZTjhoW7djSMjz2XQu31xYxetjDyXwe5inHsQ
87rOczm6jxw9nP1VRp7L8eVd96w3reTkuRxlOdJJp5j36TyXQ7h4lsGbvnLy
XI6E9wVyw35y8lwOy1znT+whcvJcjooRxxoCh8vJc+b13DcXNk2Xk+dyTOxt
qX9ippw8l+Pti0HqIsjJcznkqQuaxMxa57kcmUsarwuY/9N5Lsfa6xM/nVks
J8/luDno4aJKKzl5LodJrwlbPffLyXM5lhflz59xQk6ey3G6LnWG2l9Onsvh
tyund+BNOXkuB3tN22Vt7snJczlc/CckjGPWOs/lELcOiYt4ICfP5diYbju5
I/O6znM57Hw4r/5LkpPncow/dHXKf8ly8lyO66I23GEZcvJcjt6bBhwMqpGT
58znT/JE9zo5eS6Hd9nMsw0SOXnOnLd/YtzM73LyXI6n3ypsIpm1znM5/B3U
0xJ+y8lzBUpSzqwt6qAgzxU4e35q1eROCvJcgcCwa8MMeyjIcwXq+73Ou9NH
QZ4rUPDZZWQfYwV5rsCUftuC5g5QkOcK9C/pcvaDmYI8Z653ZmCuyxAFea6A
U1GXDzajFeS5AkM6jmBFMv+n81yBNpc9/SeYK8hzBVKKf20utlCQ5wqcsVt/
d+92BXmuwNgPy75E7lGQ5wr4+yXxZjgqyHMFFjkUq0UnFeS5AjmZj8d6eirI
c2b/iw7/unZWQZ4rMHvayTSBr4I8Z+5j0cHYuMsK8lyBF+ePq9sFKshzBVhO
20rZdxTkuQJVrwrv591VkOfMPrQLrOwfKshzZv+3z30dF6YgzxVojSfczBcK
8lyB8b2tJp5mrqPzXIFza1vx/6UoyHPm9SGPFa0yFeS5An1ef7vhplWQ58z3
GvF0XKa+kjxnzrtYVOTdQ0meKyH1q9hs10dJnivRP7jrFtVAJXmuxOnV3Nnz
RirJcyVGTH/70mmUkjxXIvzpr+KSCUryXAnro4NHfJqpJM+VePDt4UzzWUry
XAmjclbTvIVK8lyJPfqO/cutlOS5EqGPrr+0XaEkz5U4KFqJGXZK8lyJjQ4v
toQxr+s8V4ITun+s6z4lea7EFg+Lef8OKslzJfyLO9RscFeS50oYDuPFPLms
JM+Zz/soWuZ4W0meKzH65uyA0y+V5LkSYzK1bn9eKclzZv9Vw7ySopXkuRK3
xmcd2RCjJM+VcPpe7+rMrHWeM3/flPoz7Z2SPFdiQfTY9U+Y3zrPlej63749
nqVK8lyJLwLuqyCekjxnzrd0x1ZRk5I8V+LFjT3pUZ+U5Dnze9HgXXpflOQ5
c3+R5R16/FSS58x5DEraNLynijxXIfz3o6Oj+6jIcxUGTH7tE95XRZ6rsHBe
xizj/iryXAX1FeWj04NV5LkKS7YVde5spiLPVRiTP+jfXOa3znMV9nyr8Ok0
XkWeq7Ds1WdNyCQVea7CeY/KtaIpKvJchW43/CPnTFWR5yp8jfxjNYu5js5z
FXz2DxgXOl1FnqvQ/3l+n/NzVOS5Ct8c280OhYo8V2Hq1Lt6hvNV5LkKPzPc
PN2Ytc5zFY73n1Vku0BFnqtwePSE1euYfek8V6FhSemCJWtU5LkKo9qOHbWS
Wes8V4HDPrPNmVnrPFch+UTy56jTKvJcBeUmR6fdzOfoPGfut3+vL1+uqshz
5nrtvSJe+avIc+b13CWBRoEq8lyFsO9hnxbeUpHnKmTPaDMsIFhFnqsQW9rP
8VuIijxXwfhp1twOzD51nqvgd3P8yLBwFXmuhpH/tKOGT1XkuRobqoMPX36u
Is/V8EfxJYu3KvJcjQllC3KLk1XkuRrsK4W9JhWqyHM1bHf+CA4qV5Hnanh4
mobMq1KR52r0P8lbeE6rIs/VGLp07rAOv1TkuRoDrvcxuPFXRZ6r0ei6xy3c
QE2eq/FH9VLzZKSaPFfj69fXPS9NUJPnahydmrHYbKaaPFfj/o8OxkuYz9V5
ztxP+Gw3swVq8lyNmRnX3RIt1eQ5s59jRyr62qrJczUmb5m/axKzD53navA6
5t2OslOT52pcfbDcPWu7mjxX43jPVs+CLqnJczX+qddCcUdNnjPvN8h17nJf
TZ6rYfD9v41nnqjJczUSk+Ym82LU5LkaVgfzviRmqMlzNYqb5H/yy9TkuRqL
R+v/21euJs/V6Go15ExJrZo8V2P0oIX5iQI1ea7BleAiQcfvavJcg3/tnrnu
6qUhzzU4fGtob15/DXmuwcTIQ31YozXkuQZRLvtu3pyoIc81OC8yTXo5S0Oe
a2Dkt14ab6khzzU4+XvS6MZVGvJcg6C6EM/nThryXIPv/Zu6il005LkGHy63
EbCvachzDZZbRSdH+2vIcw2U/9k+3h+iIc81eLzt8+zdERryXIMC91zFl1gN
ea7Bw42Ldt2N15DnGth2vjK+S4KGPNfggcO9Qx/qNOS5BpbfH6W4CjXkuQb1
jrdmvhBpyHMNbj76VXywSUOea5C4ea/Q4pOGPNfAPfDKvjWdtOQ5c91O849U
dNOS5xrUOtZapPbUkucazKwL4hT30pLnGsh7+tzSMGud5xrcyyzbNMZUS55r
sMTywPLpA7XkObNPk0T568Fa8lyDxlrfiPOjteQ58328vfV5wEQtea7FUMvj
kZJJWvJci/613S7fmqElz5l9tQ9L/TZHS54z+xpuzF+/UEueayHbFtJv9BIt
ea7F9fO9tlxm1jrPtXgSfPO/6GVa8lyLGZKBpV+Xa8lzLX5nyTJ/2mnJcy20
C62/cbdpyXMtbvx0Nrm1V0ueayHPflSyyFFLnmvR+WFp4KmTWvJcC2GEWVK/
01ryXIsCA3/hOWat81wLZV3pm3fMb53nWkzd9fr0bF8tea5FhzF2d+8EaMlz
LSzeLIie/lBLnmthk1Nz7NsLLXmuBedFa0O/WC15roV+wjfzSW+15LkWTZcs
FyUmaMlzLa4dy9vqkawlz5nPT3LY1iNHS55rsV1V3WdXhZY81yIrkf3c54OW
PGf+3yFkffAnLXnOnMvTtQ94X7XkuRab9/ge//JbS55r8T87gMQf
       
       "]]}, {}}, {}, {}, {{}, {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0., 0.9999999795918367}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.6895502087461777`*^9, 3.6895504616570168`*^9, 
  3.6895516784789953`*^9, 3.689551838204595*^9, 3.689551928117989*^9, 
  3.689552023299384*^9, 3.689553285764433*^9, 3.689553411471754*^9, 
  3.6895535484935703`*^9, 3.689553784838739*^9, 3.689553861862627*^9, 
  3.689554032976088*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Discussion", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, {
  3.688339162508295*^9, 3.688339166187951*^9}}],

Cell["Below are diagrams for one of our outcomes with the models.", "Text",
 CellChangeTimes->{{3.6895538718809547`*^9, 3.689553902334889*^9}, {
  3.689553972189693*^9, 3.6895539728771544`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"pdf", "(", "x", ")"}], "\[Proportional]", 
     SuperscriptBox["e", 
      RowBox[{
       RowBox[{"-", "a"}], " ", "x"}]]}], ",", 
    RowBox[{"x", "\[GreaterEqual]", "0"}]}], TraditionalForm]], 
  "ItemNumbered"],
 "\n",
 Cell[BoxData[
  GraphicsBox[{{{}, {{}, 
      {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], 
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
zLbN3V4XWkq+pOBJp+JWd8NK6f2n4O2d60fWZpbS/ZeC0WV/hK8KSqkfUhCy
/czdhaxS8j8FBwY+Xre4Txn1RwrWHouTvOxbRvdlCti7cpwzbMqoX1LQf5Pl
5ilDysizVEwcELQ8yrmM+icVoy+vNTWfUUb3ayoGvDp53n1VGfVTKkb4txR8
31VGnqfi3ZAT1m6+ZdRfqfi37F4o52YZ3cep+PWzTt8zuoz6LRVveo5jbTGU
kZ9pUHbwkPWpLaP+S8MB73N1wT/L6P5Ow6/4EwfO2JZTP6Zh3nXvcYULyimv
pCFb3GuRz8py6s80FI5tP2Ojeznd92lokZIeqtlSTv2ajuaJnJ73zpeT1+k4
M9h9dcjdcurfdNzLjdrbrbCcfEgHe+ecG/try6mfmd9/+Hs7vxmL8ks6HuwS
eG1pxaL+Tke85yVHvjmLPEmHwic2t7I3i/o9Axbrpm9aacOifJCBZdO2bioc
yqL+z0DqyY3379qzyJ8MpA8KbfFmLovmIQNupdP7tJ3PonyXgTar56z6sYFF
85GBemXzilvbWeRVBkSy3jP7nGLRvGTiRedZxx8EsSiPZCKS/fBm2gMWzU8m
TKcPrEx4xSLfMiGKCPx98hOL5ikT+jcLk6YUsiivZcLW/7rZmlIWzVcmPM14
LdryWeRhJt55NvH5LWbRvGWhT5fuwf5t2ZR/svC9/fqPv9uxaf6y0HXqbofL
PdjkZxYW+q7uxLZl0zxmId9M3frxUDbl0yzUx5llW0xl03xmYQFncfMB89jk
bRY2XY7/7ejOpnnNxqC7fyotzrIpb2Vjw2bPjCOhbJrfbHi0+hFgV8Ymn7Mx
bfUq53Aem+aZyS175dkPhWzKp9kwuX5yzXgxm+Y7G9qmiYvEBjZ5noOj8ybY
/P7CpjyXg4Bl1jFHmnHI9xxcyi6YfqsLh/J9DmKv/zLEDOSQ9zkYe3dufMA4
DuW/HOjNPCMGTOSQ/znI/LmmoH4yh/JxDpZ+EXlcdeZQHshFht8ZV6cZHMqL
ufBtdqu73ywO5YNc1CVafiuaw6F8n4sjoqx93RZxKC/kojS3onQJUxvzZS6W
DC2ue36QQ/khF+5vsw9aX+BQHs9FiwP/pSbf5VCeyMPTdmmhLvc4lEfzIMML
x79RHMoXeZjTfVY43nNoP8lDxjv7n/HpHMobeTglDbaW5HIov+bh8sBL9uvz
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
c+Y9bjOYvpsqI8+lcLScXZXG1EbPpSifNSO91RwZeS5F/841NQ210XMpEt/v
KpIvkJHnUlguP64NXCwjz6WItfRPYC2TkedSJPQsmPVnjYw8l6JdjGDBurUy
8lyKU/4da6PXychzKezyWoXP3CQjz6UYVrLNpcdWGXkuRdem7XWWO2XkOfP3
Ppj3OeQtI8+lcBsd25yzT0aeS/HFyvZCiI+MPJdiwh3X3cMOyshzKRRrsj23
MLXRcxlqPZrnzjkmI89leBKh8/VlaqPnMryISvMUnpCR58w5zjd9EHVGRp7L
sHzBtxfsCzLynDmHAcMWfLwkI89luPP9le3FABl5LkOluv2n7ldk5LkMgw/v
zfl6S0aeyzB+dZFVQoiMPJehw9l8x6RnMvKceU9P3wdLI2TkOXOuY6uOuryW
kecyjOxRPNCbqY2ey7DM37zdimgZeS5DW8mJX0nxMvJcBldb7uBCpjZ6zjxH
973T+iTKyHMZkq8EhpUny8hz5nnSk0tuZcnIcxnk1a835mbLyHMZTlwu3jlG
LSPPZcjzTdXH6WTkuQylF8MflOhl5Dnz99rb3G3yQ0aey2D4vi+loJ2cPGf+
/ixRkKSjnDyXIfSM+cmyrnLynDmHcwr+F6Y2ei7DTz9NfJqFnDyXQTndNd6m
j5w8lyM59OHbLpZy8lyOv7fuv7QbIifP5bjb5+24hUxt9FyOU7Pad3k2XE6e
y3Hg1F5211Fy8lwO7ZGnddsnyslzOax6mvx1my4nz+XwezFg3MVVcvJcDnu/
IwXZm+TkuRy833vmHt8iJ8/lmHsucEPQVjl5LkcV91pB911y8lyO2ybzTjTd
KyfP5cw+vqv/Em85eS7HlKkTnT8elJPncow8OKpp/0Ny8pz5O8ftHL2Z2ui5
HLUfpR//Oyknz+UQXnRpt/+0nDyXo5fN8P5/r8jJcznWVUx9PzZQTp4z5/kx
fE7f23LyXA7dquTeI5nfM3rOnOe99vKjTG30nHmOrv1HmYfLyXM5lm1LLayI
kJPnctxvVhu897WcPJfj3tzJfpeY2ui5HO8WBk7nMX/H6LkcPY58656WICfP
5ehfXWy2KU1OnssR3OxI8zlZcvJcgR1PLgx6VSwnzxW4vMjLxZEtJ88VOLe5
V126SE6eKzDFJ7TdYrWcPFdg/rUhyw5p5OS5Ai7ZqyUa5nsYPVfgW8WrXRN/
yslzBeZ97J568I+cPFdgkkuv0a3aK8hzBbr0GLX+L1MbPVfgvcMU51rmexk9
V6Bd2dYbEhsFea6Ae69wVmp/BXmuQMb42Ic1dgrynPnc5ZcMNuMU5LkCw5Ne
2EdNVJDnzL/rTHZ0Yr6X0XMFVnu/33JkqoI8V2DPg7wLgc4K8lwBzbvUncVL
FOS5AoW3e25gM9/T6LkCfk76G6w1CvJcgRWSkbGX1yvIc+Y51p8bMtJDQZ4r
cKy0Lt56i4I8V+DD9/rfu5jnMnquQOR8aUvBDgV5rkBAzbkwd28Fea7A21m2
0rHHFeS5ApvNN38f5qsgzxXYFNf2zaPTCvJcicWen8c9PqMgz5WYfMV1ztxz
CvJciXZb1hR3vKMgz5U4NzzKWczURs+VKG9r46m6qyDPlTiT9vJofKiCPFei
cNDcw5lMbfRcCZPAoo6TwhTkuRLT7Hq5NolXkOdK8O51rYlJUpDnSrB9s9pp
shXkuRLjVzjenM+ck9FzJZpvzXrbskBBnivR2m2m72SmNnquRLjDKcXKMgV5
roTbcsWV1mIFea7Ei4X9VibKFOS5Em0Onu2SolSQ50r4flr9x4Q5V6PnSrzB
4dN8nYI8V2LUjBGbzxsU5LkSm09MOPznl4I8V+KXyMFnF3PORs+VqFj++fvB
tkryXAm0fVwxykRJnivRpab1CNMOSvJcia6Hclvv7qgkz5U49c5RrOqqJM+V
KP475bqmu5I8VyKyicfeWOa9GD1nfv+muaT/YCV5roIwX1/mwNRGz1XYnbi1
ZoWjkjxXYdkfm4eTRivJcxWK5Hf2ODPvzei5CpOnmjo/nawkz1WI+WxxacwU
JXmuwom2X/qdmaokz1U469EtrJSpjZ6r0DfmWvyoOUryXIU5F0e0jJmrJM9V
eOE+aI+3q5I8V8Hs6vPKVvOV5LkK7e00prZblOS5CnnzXj+5x7xno+cqXDOT
uEcfVZLnKvjvST8/9YKSPFfh52unGwuZ2ui5Cp7PowaHBSjJcxXTby7tIm4q
yXMVrC/YXBU8VpLnKqRO/k+6OUxJnquwIk2nsmH6wOi5CtvvZTl3f6Ykz1U4
lOP1D8+V5LkKrQ9I3O5GKclzFUaVmrrXxCrJcxVuTcgLcI5XkucqWDp1mjyM
6Ruj5yrY9Vv4a3m+kjxX4c+Q1PKBJUryXAWX27P/dKtQkudq7A3st+czV0me
q1F0oO5+hkBJnqsxOPKwM1+uJM/VqO3ia7bgs5I8V2PugK//2X5XkudqVP80
37mZ6Ruj52oM6ZmWqDFTkedqPPlwQLST6ROj52rM8Ai5e2GwijxXI3+U80nW
aBV5rgbLxeaDHiryXI1W1maDPk1RkedqhHnfXvVytoo8V2Nsi4Ty6IUq8lyN
6bbnRr1fpCLP1djTp6S1bpmKPFfjd33xqwVrVeS5Gn2i2naz2Koiz9U4aB80
19ZTRZ6rERQTtpvH1EbP1bh8/VvknZ0q8lyNE+09O9z3UpHnamQ7vzN94qci
z9V4nPj1z66rKvJcje2jajtlXFOR52o8OzcpsOi6ijxXw7nvoJxeTJ8ZPVfj
ZW6r3sXhKvJcDZ7yak39CxV5rsbO3MlRs2NU5Lkav47f3qXOVZHnavR3mDxw
SJ6KPNdg/QyTZu4FKvJcA9XJFec/MLXRcw0CZ0gO1zB9aPRcg7MRE13vMH1n
9FwDb7Pxlqc1KvJcgzbJZ69CpyLPNYhnTfLK/KwizzWw/Rl10fBNRZ5rsHr+
fBPZTxV5rsHyyuEXD9apyHMNRJzqf1ZN1eS5BhWnb+9cxdRGzzVw0rWy/tBK
TZ5rYBH0rVLG9LHRcw1CrwYUH2qnJs816PBp/ITszmryXAODLtZ5exc1ea6B
yfuMrbu7q8lzDS6febX0r62aPNegWJTOm8/0tdFzDRbvn3G/i6OaPNfg6txn
e8MnqslzDVqOqw8unKYmzzWoDVk4/9NcNXmugfY/+3fD56vJcw3WStW5M5na
6LkGh562Pdd9lZo812DHrZqPb5na6LkGyniLUfar1eS5BlLD/MxIdzV5rkFi
70fCWGZOjJ5rYbvicR6LqY0XvhaHTPb37LtZTZ5rwXGOkSp3qMlzLW6efPe8
/Uk1ea7F56dF/YafUZPnWpizT7fee1tNnmuxeHsvWy1TGz3XYv4bryDPu2ry
XItL2WUmgntq8lyLhQujW5uGqslzLfomG85MeKQmz7W4mMj9/DdGTZ5rofz9
eKlFvpo81yKlbMTBU0Vq8lyLZVql4VSpmjzXApZ9brlw1eS5Fl4JrAOzq9Tk
uRbux5rslwrU5LkWIVqtW+0XNXmuRTjbP+vWDzV5rsUSl25s7j81ea7FzM7T
Ozm10JDnWoy1ufugYa6Mnmuxb0tT9TkTDXmuxdBnLVusZObK6LkWCZPuzSo3
15DnWkzeYmjR20JDnmthKh3ebE8/DXmuhd6xn+MuSw15rsX13IB2a5m5M3qu
hcHfO/25o4Y816G5/fkM/mgNea5Dk8uCmcenaMhzHWYHbxr0iplDo+c6dK1z
2jmMmUOj5zoc2jRwzfWFGvJch8DtYv+8JRryXMf0w0UHbNSQ5zp0f8t9vHuL
hjzXwWvu25+KUxryXAer0GEx0Tc05LkOGXPOuDnf1pDnOhy+EFS3/pGGPNdh
kP38h5ueashzHQSuR9kD32nIcx3uXsvaERGrIc91WDbok7mYmTuj5zqs3NOy
vs0HDXmuw80D2m0WHzXkuQ61ioEntUka8lyHNh4Bwb3LNOS5Dgv32TFrlIY8
1+Hv2MmSLWoNea6D5+cxw1rXashzHQ6E1cwLYObM6LkOX7fKgi631JLnOsyU
7Jl7lamNnuvg8zvAdHQ7LXmuQxR3Su9MUy15rsODnXX9NvbSkuc6JHqaPzWx
1JLnOhTam7unWGnJcz0uNR0UZ8HMqdFzPc7JbCIXOGrJcz3MZm3rtmW0ljzX
Q/acf2rFFC15rof1vpEu4XO05Lke0WPOir4wc2n0XI9jTe2bpy7Xkud6LIu0
ePhptZY818PiUVqHOHctea6H+u+/nyd2aMlzPXrfGWo/b7eWPNdj7/nsIPM9
WvJcj8i1n48UXNWS53o8qbv36kGgljzX40z+1JjyMC15rsfOmT2tZqZryXPm
+Q5VW9zL15LneuSNuW4eWKElz/XQOK0/ME+tJc/1aBZU5zVYpyXP9Sj+c/OW
iqmNnuvx11u6s5aZK6PnemzN6lbJ+6clz/WYf/tAepvmOvJcj21+X/f4tdeR
53pkXq+JSGDmzOi5Hu983HQ/mDkzeq7H54jnTXr31pHneqxZJb2zYYCOPNfD
d2czzn/DdOS5Hlnd/51OYubI6Lke8dGhao2bjjw3YN9S++8rV+rIcwOexI70
/LFNR54boG669nzYER15bsCobmvC4/115LkBfZufcNnFzIXRcwMMhq5WJg90
5LkBTV+Vt/Iv0pHnBkQd/17UnK0jzw2oDqnZ0ZanI88NiOmebiNjaqPnBjwd
5pAzQ6wjzw0wcdd0CWL62Oi5AdvPPuq2pL+ePDegf+fw1EUz9eS5ATYC5Y3e
rnry3AAHq6hTMdv05LkBperQ1od26MlzA1iBBTd5h/TkuQGzk89VmzGJ0ui5
AQGlO/vMy9WT5wZ8WG11I6ZET54b4BS0eU9rqZ48N2C41w+V0NVAnhuQvKDd
HdliA3luwNbB70IclxjIcwMiwo4GuzC10XMDDkjvDd640kCeG8D1btZCutdA
nhuQHXNzOPeQgTw3YIRLO0XyYwN5bsD/AMIp1WM=
        
        "]]}, {}}, {}, {}, {{}, {}}}, {{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJxFxW0w03EcAPCNdZRrjMr9adxE5SlOUlKpuMhDneHk8nRCWk/InXR1WrdJ
nua6nZTnh5R2jGyuMnHsdDnPo1GzMUtj83RndnRZ9cL39+JzH0r8XWqiHg6H
C/7n/wGJypGu+fAz2xN8LFJkmLv39kcrS8paMV84cED8vhwLgyMStB3PsQR4
yuWpTwGWDlftvZydizFgumHroWcYG74SWc1dWa2DjXT0KD8rLmwXsqTsyePB
GYOe3iVrH2FzHkmKx3fCbXKf/qFT3XA3rdwyUi2ENQdPGzfe/gLrbXBMLO36
YA9dXFtoUz/cz3Af7HUYgq2LVBsNS8OwSiuTjruOwnUL7X3EQhFMJL9ZVijG
4Pwb/KQq22/w+lmOIjlLDKe7CXn7eiZgWZMwb4TyHf5NGyu1f/ADdjxnsJXU
LoH9aijXW8ylcAY51mYmSgY7qcONxMHTsJnxiqFwE03oLOUeKJuBb7q3T+4M
lMOci/FVn9fRGpWFyVzxLMwP9dNn+yrgLH9mJW8OTZkKmKhl/oRPHmewMbc5
OMpqaAMvQmv6CuQp9F9wCSEmnWqrhM2k/Bo9IXrHI3qYZ+o8jGuI4cpNF+C0
V9wC0250h2OOIemOCiYFpDk9IaphifOwKFOAbq7wtlXELMLRXA8SeQv9mFlN
l7xbghuV5FJi0DKcU86Mk15CJ1AX7ZpC0PsFgubgCHQu62pvfjw62ePl6q5M
tA1jj79BPXrrxMPd4rfoycXZ0XoOuiiiNfpCC1rnQL3HFKAlI6wKfRH6Q7b2
mmgczfaKta+dQAe+PsI7L0V/uj/wlT6PLnY+xgpRo1PlZWGUZfThoFuyrjU0
AT9WV6RFT/O9aHGbaAGt1sX1D/qFtZFGp0P/BaO4ekM=
         "]]},
       Annotation[#, "Charting`Private`Tag$198575#1"]& ]}, {}, {}}},
   Axes->{True, True},
   AxesLabel->{
     FormBox["\"model\"", TraditionalForm], 
     FormBox["\"data\"", TraditionalForm]},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{259., Automatic},
   Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 0.9887389671878619}, {0, 0.9995}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.02], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]], "Output",
  CellChangeTimes->{
   3.689546428883671*^9, {3.689546481600938*^9, 3.689546557645986*^9}, 
    3.6895466009162703`*^9, {3.689546905125093*^9, 3.68954695611379*^9}, {
    3.689547018969294*^9, 3.689547112255991*^9}, 3.689547187605555*^9, {
    3.689547327553433*^9, 3.689547337301271*^9}, {3.689547391402254*^9, 
    3.689547405269219*^9}, 3.689547489516706*^9, 3.689547721309462*^9, 
    3.6895479023770638`*^9, 3.68954806457699*^9, 3.689548227277648*^9, {
    3.689548283688613*^9, 3.689548301410131*^9}, {3.689548460792651*^9, 
    3.689548485185128*^9}, 3.689549872173826*^9, {3.689549906237363*^9, 
    3.689549929150103*^9}, 3.6895499631383533`*^9, 3.689550044959077*^9, {
    3.6895501394530993`*^9, 3.689550162066825*^9}, 3.689550196224106*^9, {
    3.689550431793632*^9, 3.6895504490243683`*^9}, 3.689551666468425*^9, 
    3.6895518257868137`*^9, 3.689551916019587*^9, 3.6895520110063553`*^9, 
    3.68955327266471*^9, 3.6895533972963457`*^9, 3.689553535537765*^9, 
    3.689553768109497*^9}]
}], "Text",
 CellChangeTimes->{
  3.6895537199421787`*^9, {3.6895538049287567`*^9, 3.689553812852441*^9}, {
   3.6895539049662323`*^9, 3.6895539058870773`*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"pdf", "(", "x", ")"}], "\[Proportional]", 
     RowBox[{"x", " ", 
      SuperscriptBox["e", 
       RowBox[{
        RowBox[{"-", "a"}], " ", "x"}]]}]}], ",", 
    RowBox[{"x", "\[GreaterEqual]", "0"}]}], TraditionalForm]], 
  "ItemNumbered"],
 "\n",
 Cell[BoxData[
  GraphicsBox[{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJxFxW0w03EcAPCNdZRrjMr9adxE5SlOUlKpuMhDneHk8nRCWk/InXR1WrdJ
nua6nZTnh5R2jGyuMnHsdDnPo1GzMUtj83RndnRZ9cL39+JzH0r8XWqiHg6H
C/7n/wGJypGu+fAz2xN8LFJkmLv39kcrS8paMV84cED8vhwLgyMStB3PsQR4
yuWpTwGWDlftvZydizFgumHroWcYG74SWc1dWa2DjXT0KD8rLmwXsqTsyePB
GYOe3iVrH2FzHkmKx3fCbXKf/qFT3XA3rdwyUi2ENQdPGzfe/gLrbXBMLO36
YA9dXFtoUz/cz3Af7HUYgq2LVBsNS8OwSiuTjruOwnUL7X3EQhFMJL9ZVijG
4Pwb/KQq22/w+lmOIjlLDKe7CXn7eiZgWZMwb4TyHf5NGyu1f/ADdjxnsJXU
LoH9aijXW8ylcAY51mYmSgY7qcONxMHTsJnxiqFwE03oLOUeKJuBb7q3T+4M
lMOci/FVn9fRGpWFyVzxLMwP9dNn+yrgLH9mJW8OTZkKmKhl/oRPHmewMbc5
OMpqaAMvQmv6CuQp9F9wCSEmnWqrhM2k/Bo9IXrHI3qYZ+o8jGuI4cpNF+C0
V9wC0250h2OOIemOCiYFpDk9IaphifOwKFOAbq7wtlXELMLRXA8SeQv9mFlN
l7xbghuV5FJi0DKcU86Mk15CJ1AX7ZpC0PsFgubgCHQu62pvfjw62ePl6q5M
tA1jj79BPXrrxMPd4rfoycXZ0XoOuiiiNfpCC1rnQL3HFKAlI6wKfRH6Q7b2
mmgczfaKta+dQAe+PsI7L0V/uj/wlT6PLnY+xgpRo1PlZWGUZfThoFuyrjU0
AT9WV6RFT/O9aHGbaAGt1sX1D/qFtZFGp0P/BaO4ekM=
         "]]},
       Annotation[#, 
        "Charting`Private`Tag$198575#1"]& ]}, {}, {}}, {{}, {{}, 
      {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], 
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
JqUn5p8ppvzB9NEn0frwK8WU/wsQcH5ux50PiymPfMCIxUuabNjFlHc/gFPl
bdOmTQnlkw+w/3KE1c+khOaZD/hz0mL742UllFc+oF+udE35kRLKxx9QfMLQ
+OXREsovH2D7JEM26lIJzRvM9bLksjkFJZRnCtEme+Gau4allKcLcbfM76+6
aynlG+b/D56cd3tIKc1vhcj/9sMuY3Qp5Z1C+M+p4m4cX0r5uxA7bBtF+6aU
Uv4phHPg1ceHppXSfFMIWdc7F0VOpZSHimBhfJX/+HIp5fUiZv9Zr/13tZTy
URG+d648t+VOKc1vRVjgM6lwUUYp5aUiuJiGt65pLKV8X4RwFxP/C61ZlJ+K
sOrTutQgfRbNU8U4tunKva8zWJSnijFrTEAbX1sWzQPFqF/cY9fkPSzKV8X4
62M2UePOonm0mMl37Y7P9WRR3ipG11uPTBMOsWh+KMb7AU0Gvw6zKH8V48PI
wsjlR1k0v5VAvxv/t9kpFuWxElh+bvBZfJ5F80YJ1linW/SLZFE+K0FXnNvQ
I5dF82oJuhdVrSr+x6K8VoLGk4KUhPZsmk9KsKloelhdFzbltxJ4jvRUL+vG
pvO9FGbSY3Z7jNn0/Uvxt8+axnxTNp33pVgTvaD0iQWb+qEUL8wE5rbT2HT+
l2KR1eNR/dexqT9KsaHnb3bDNjZ5UIqk8JdHmlzY1C+lKNiTVz1mN5t8KIWX
wzAr231s6h+mz+YETn1ziE1elCLvVtGJuT5s6qdSXLEc5cO9wiY/SrFRNKrx
6VU29Rdzf+53TV4GmzwpRfahXmfHZLKp30rRbZzqlFUOm3xhwcbr0UR5AZv6
jwXnHSmBx4rY5A0L9k9/T/nMYlM/shAysqPPi0o2+cPCkVlZD+9Us6k/Wbi4
Oyb4jYJNHrEw/Erliyt6ZdSvLOR7P/g3un0Z+cTCYiNrzfjhZdS/LDiadStt
nFhGXrEQrZfBr1lQRv3MgtELZfHhpWXkFwvj98zsMHJXGfU3CyOmP3qkdi0j
z1joYW1x5e/NMup3NrryVji2f15GvrExrr1pea/XZdT/bMjm3gh1iykj79ho
u/trdGl1Ge0HNhKSq01C+GXkHxt9n3S/t7FjOe0PNp4afpnIG1pOHrKxxPfJ
ypix5bRf2NBMzp6pZ1NOPrJhVXN1X7J9Oe0fNsKu2k0u9SgnL9nwUbIevvEs
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
703unc+JyHPm34d4fznvIyLPRViwrGLkPabWeS5Cp3Wmeu8CROS5CL9H71rU
XOs8F2F5jkHEyvsi8lyEWyHJwumPReS5CAO710UdeS4iz0VoOi2ccTRcRJ6L
MNGv1KrrWxF5LoJZUu0n7ygReS5CeOpn1agEEXnOrGtGv58LkkXkuQgWF2qG
vsoSkefMdSdEG30qEpHnzPM+PNr1U4mIPBehZnmm2SW2iDwXYUWl8ZiychF5
LoJmukB/RIWIPBejAB9N7OpE5LkYiUqjhPtMrfNcDN8Qpw9+zH10nouxubjf
644KEXkuxrvtWz6ZfxSR58z1zB87iz+LyHMxvm2/usD4q4g8F2PvsGkWq76J
yHMx9m37NIzVWkyeM9e/8P5+fEcxeS7GkvWjN5b0EZPnYqQnHTX40k9MnovR
z22LnD1MTJ6L0Wp+VlLX4WLyXIz2Fpc/lY8Uk+diLA0akBc0QUyei9F12+fP
cUyt81yMsuu163rYiMlzMSKNZ00+PUNMnovxVT/2yoaFYvJcjOGHl97us0hM
novRVvEsfN5RMXkuRkJM5t+Np8TkuRgLtxif/H5aTJ6LMUCVNdHNT0yeM8/f
6fzvPqFi8lyM1e+O/LwTISbPxVBAXJb1TkyeM/e3UKs/MrXOczFyetvUbEkT
k+fM9SbN9FucLSbPJQgzr/b1yxeT5xIsHSquf1IjJs8lWHYoMbyOqXWeS+D0
6/DF4TwxeS6Btf2mxf4SMXkuwbb6Wq8Xn8XkuQQR2k5B1/6JyXMJ3Cb6d4ru
LyHPJei2wuXViTES8lyClw7HLX9YSchzCe7PMRpwfbyEPJfA0njt0eNTJeS5
hJn3SzrFzpSQ5xIs2tpN1m2OhDyXYJOb4/565ro6zyUYfC800muxhDyXYG3v
z40iptZ5LkFwlmqnqb2EPJfARP6ix6QNEvKceb9Jkc+3uUnIc+Z6x+IP3HOX
kOcSlJ557PfSW0KeS9D60rK4dr4S8lwCZfnRhfuZWue5BAv15/V85ichzyXg
F2uGtA+QkOcS7H/3z7b7PQl5LsGfUNH3qUyt81yChNOcju5BEvJcglNtV0WK
XknIcwk65O304URLyHMJ1izw7+aVICHPpegkDv2xOk9CnksRtpL/b2aphDyX
oqf4a2wRT0KeS9E5fAurI3MfnedSDPx1+G6ERkKeS+HBObXY6rOEPJdi9ad9
P1StpOS5FIdvOMRdbiMlz6U49jEwb4S5lDyXYrH0n88l5j46z5n799xqtn6g
lDyX4npqx/jBzHV0nkvRxuZ90aZZUvJcimsGOX72C6TkuRRWCQe6rnGSkudS
TO8n3r1hi5Q8l8LoSxskuUjJcykMLPTO3HKVkudSdLO8auW3R0qeS7HyUXjw
9/NS8lyK8MslT2ZekpLnUqwJNg63Za6j81yKcw+jfwTclpLnUvgWT0gQ3pGS
51L4ie6d3/9ISp5LsavQJWtRkJQ8Z/6u59HYKy+k5DnzPsZsn8S3UvJcit/2
7U63SZWS51JMFcrfb0yTkudSBHa+YHAgX0qey/CuTzuzBua+ugNfBi8HPbuJ
RVLyXAbJidY+Tsx9dJ7LwHqwxcdHJCXPZWiTsvLWJqmUPJehU+vEigSVlDyX
YZlF25ACptZ5LkP6Kk83bqOUPJchZcWmJX5GMvJchsPCf2nne8vIcxluvBs/
aPswGXkug2Fy1q7kkTLyXIYxOSGtBlrIyHMZdrGV8zyYWue5DPnXF350nCQj
z2VYJfa9WbRYRp7LmP1qU9ZoKyPPZQj5OXPC8NUy8lyG8X07wMFBRp7L8JO1
TjnPUUaey1BuPM3ktpOMPGeu87khw3S3jDyXYc/eZYdvHJGR5zJkf+2Yf/W0
jDyXoWKWpSTgjIw8lyFJ/98gXx8ZeS6DnD0gcPcFGXkuw2rticxW/jLyXIYl
1ccrcwJk5LkMRauOTbJmnkvnuQzfPDZbRoTLyHM5DBuEehlMrfNcjvMPtztu
TJKR53L87ZI9fG2qjDyX407JiXOt82XkuRwhlzkJ0gIZeS6H0fANr92LZeS5
HMtbdRk+lXkPnedy5Naem/qUqXWey/Gv0mLBkDoZeS5HSt3C01b1MvJcjl77
c2cH8mTkuRxjRzrYbWbeW+e5HP33fFvo3PweLcDJIW+8F3Gop5w8l2Njpe3D
9P5y8lyOUcdvBo0bLyfP5Zjgbdx5AVPrPJfDsTije8EkOXkux/7C97NCZsvJ
c6a+9MxVslpOnssRw//u/d1eTp7LIau+pLZbJyfP5fgZ36tL4Ho5ec78HTsz
eBTzHjrP5cx5WrwlhXkPnedyrDu53vClu5w8l8PcdOfCHE85eS7Ht2c7j5sc
lZPnciBitnfPS3LyXI6ndjvaCq/LyXOmztHrb3FfTp4r0L7qYvW/R3LyXIHf
N6L2H2DeQ+e5AnU7eoR+Zd5D57kCoipHF/8kOXmuQMws77jWGXLyXIHzy+ya
5tfLyXMFhrM35I77KCfPFTC4vK1Nz79y8lwB86KV7QuZ++o8VyBPHKn/h7mP
znMF/owtXvR5iII8V+CJu+Wm7cMV5LkCrQ6+D2tnrSDPFZhX7DBy2nQFea6A
y5bpKddmKMhzBdae7LB00zwFea7AUP1ZqXFLFeS5AuOnPE08sE5Bniug12uF
pbuTgjxXYMbKNklOGxXkuQKcSZttHjkryHMFlvpP7zBsh4I8Z97X9VnRpOMK
8lyBp2ulB1OuKMhzBSLP3jl64JqCPFdg7ubAW70DFOS5Ar2vhbU1eaQgzxV4
+PavSfkbBXmuQP/XpiutIhXkuQKrSh7pX0pUkOfM/c6OtnStUpDnCjgovK68
Z2qd50qsM+zW6hJHQZ4rEfp8dtQ/ptZ5roTrhUghi7mvznMlTJNWzNF+VpDn
SrgNt5+pp6ckz5XoUaa+bGWgJM+VyDC0rH7STkmeK/H98T4xr7OSPFdi7LOt
9nXGSvJciVthW9c49lSS50oYfvEdNclcSZ4r0U0wd+YJptZ5roSeN/vmtCFK
8py57tPw25+Z59J5rgT/3k+txSglec68z6hJSV3GK8lzJRrzB3tymFrnOfP3
qZKmx5OU5LkS9Udi2ViiJM+VSBrXzWzJOiV5zqzf96Kthx2V5LkSX99svLhy
h5I8V+L9yOX3hzLPpfNcidN/etdPPqokz5m//x34aegJJXmuRPit5T5zmVrn
uRLHKka0TvZTkufMc88UC05eUZLnSrjsvHGx+1Ulea7E7a8ZI50ClOS5Es4Z
vy8Y3VaS5ypk5HVfMpmpdQe+CmNSzAZMuackz1WYJDV/dCpYSZ6rcCRuae4X
5j10nquwPw7bR6YryXMVlm89dq2xQkmeq/AnKPncxUolea7C5f3mzy7WKMlz
FXY98Ug5Uqckz1V45ZV+V8ZVkucqTIvc1VkmUJLnKgzXuzGi/w8lea7CJ/6U
CF8TFXmugnFfmUlyLxV5roL7UKXbQua5dZ6rcC69j9J9qIo8VyFhnpj3YJiK
PFfB7881JsOpyHMVIgza7RkxW0Weq1DuXDjx8gIVea7C3rC077YrVOS5CkYZ
kw7tZJ5b57kKp6M23Lu7VkWeq2DWkNAp3ElFnqswKPRv1nI3FXmuQizrnN0I
5j10nqvgOSo47whT6zxXYdxu24YUbxV5roJmzS57AfOeOs9VuFR5IamReS+d
5yq0fuq8kuOnIs/VTF67aXbKX0Weq7FhzgOJ3wMVea5Gr2U5Jy89VZHnavBH
LA3790ZFnquxY3rglahwFXmuxpWtKxz2RqvIczX2jer74FGmijxXo0uYuatl
roo8V2P4rgsPgsQq8lyNCP+vHUcyz6nzXI1uCV5V33+ryHM12h3tXdy9nZo8
V8P8zQuhRyc1ea5G65s/G7f3VZPnajhkeZxu209NnqthYbh1xXXmuXWeq3G7
aPmAJKbWea6Gt/MJ0echavJcjcHCsOWyYWryXA3ZytKMg9PV5Lka8aK0Vk4r
1OS5GneKh2WbrlGT52r42/vAbouaPFfjjVNf+VYPNXmuxvUfJ5PdPdXkuRpb
/mt7yoOpdZ6rMfRO7oJFB9XkuRod5D0WGR5Xk+dqnKu3WfPJV02eqxGYGTUz
xk9NnqtxsdP5F/uuqslzDcraTnha468mzzUYV2SUaRukJs81aL/m9z/3p2ry
XAPlVF+ON/NeOs81CBj93jI3Xk2ea8DqXdPeIEtNnmtw5IT7zJJsNXmuwfCT
y+1Z+WryXAPfA48iowrV5LkGEy1L2s2vUZPnGpza/qOrXp2aPNegVdPqxjym
1nmuwaeg9X/2NqnJcw3u3eGvtvqrJs81mNG3V+B+5j10nmtgdK6Pj6GFhjzX
YJeybHmitYY81yCj/xPTx9CQ5xoItnKL3tlqyHMN1tTw5y9dqSHPNdBjFy34
wdQ6zzXIWqOyzHLSkOcaWKSGtjfYqiHPNRjlaNK9zEVDnmvQ29zTx8pdQ55r
8DeqZvGzfRryXAN9mE4pY55b57kG085OV7KOashzDRKKLkfGntOQ5xqoRGXq
gEsa8lyDx9w2B3Y+05DnGrzp8LqxA/OcOs+1eLTDseJChIY812L8uqA6u2QN
ea6Fxk12+OYHDXmuRYmnS3YJW0OeM7XlTvuvDRryXIv+uxWOVjINea6Fg8vs
t587aslz5rfFoBPR3bTkuRbqZbv6F/bQkudaHJj5ss6Vua/Ocy1qHkuzA3pr
yXMt4pqOWkeP0JLnWpz3jIgcwVxH57kWjjOz2iY5aclzLZ5+3efwa7OWPNei
yfRXQL6XljzX4m1eB/e9+7XkuRZn+5vfX3xMS55r0Tn84wPtYy15zvz2dw7u
/VJLnmsR8XGG8bQ3WvJciwG8Svfv0VryXIu7veVfi+q15LkWvov+HNzH05Ln
WnTPWxHYwNQ6z7VYqRgbIWFqnedatD7+5YavQEuea3Htfutbl+Va8lyLmIuj
C98zv3WeazHBZUbp00Ytea7F/6t30hA=
        "]]}, {}}, {}, {}, {{}, {}}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{282., Automatic},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 1}, {0., 0.9999999795918367}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]], "Output",
  CellChangeTimes->{
   3.6895480670882263`*^9, 3.689548229394643*^9, {3.689548285673195*^9, 
    3.689548303499229*^9}, {3.689548462921455*^9, 3.689548487276791*^9}, 
    3.68954987439985*^9, {3.6895499084897337`*^9, 3.6895499312924023`*^9}, 
    3.689549965217741*^9, 3.689550047035203*^9, {3.6895501417978697`*^9, 
    3.68955016426945*^9}, 3.689550198405943*^9, 3.689550451135227*^9, 
    3.689551668345417*^9, 3.689551828268515*^9, 3.689551917982983*^9, 
    3.689552013085791*^9, 3.689553274858363*^9, 3.68955339999058*^9, 
    3.6895535379433804`*^9, 3.689553770637877*^9}]
}], "Text",
 CellChangeTimes->{
  3.689553791732874*^9, {3.689553912846352*^9, 3.689553913537463*^9}}],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"pdf", "(", "x", ")"}], "\[Proportional]", 
     RowBox[{"x", " ", 
      RowBox[{"(", 
       RowBox[{"x", "+", "b"}], ")"}], 
      SuperscriptBox["e", 
       RowBox[{
        RowBox[{"-", "a"}], " ", "x"}]]}]}], ",", 
    RowBox[{"x", "\[GreaterEqual]", "0"}]}], TraditionalForm]], 
  "ItemNumbered"],
 "\n",
 Cell[BoxData[
  GraphicsBox[{{{{}, {}, 
      TagBox[
       {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
        Opacity[1.], LineBox[CompressedData["
1:eJxFxW0w03EcAPCNdZRrjMr9adxE5SlOUlKpuMhDneHk8nRCWk/InXR1WrdJ
nua6nZTnh5R2jGyuMnHsdDnPo1GzMUtj83RndnRZ9cL39+JzH0r8XWqiHg6H
C/7n/wGJypGu+fAz2xN8LFJkmLv39kcrS8paMV84cED8vhwLgyMStB3PsQR4
yuWpTwGWDlftvZydizFgumHroWcYG74SWc1dWa2DjXT0KD8rLmwXsqTsyePB
GYOe3iVrH2FzHkmKx3fCbXKf/qFT3XA3rdwyUi2ENQdPGzfe/gLrbXBMLO36
YA9dXFtoUz/cz3Af7HUYgq2LVBsNS8OwSiuTjruOwnUL7X3EQhFMJL9ZVijG
4Pwb/KQq22/w+lmOIjlLDKe7CXn7eiZgWZMwb4TyHf5NGyu1f/ADdjxnsJXU
LoH9aijXW8ylcAY51mYmSgY7qcONxMHTsJnxiqFwE03oLOUeKJuBb7q3T+4M
lMOci/FVn9fRGpWFyVzxLMwP9dNn+yrgLH9mJW8OTZkKmKhl/oRPHmewMbc5
OMpqaAMvQmv6CuQp9F9wCSEmnWqrhM2k/Bo9IXrHI3qYZ+o8jGuI4cpNF+C0
V9wC0250h2OOIemOCiYFpDk9IaphifOwKFOAbq7wtlXELMLRXA8SeQv9mFlN
l7xbghuV5FJi0DKcU86Mk15CJ1AX7ZpC0PsFgubgCHQu62pvfjw62ePl6q5M
tA1jj79BPXrrxMPd4rfoycXZ0XoOuiiiNfpCC1rnQL3HFKAlI6wKfRH6Q7b2
mmgczfaKta+dQAe+PsI7L0V/uj/wlT6PLnY+xgpRo1PlZWGUZfThoFuyrjU0
AT9WV6RFT/O9aHGbaAGt1sX1D/qFtZFGp0P/BaO4ekM=
         "]]},
       Annotation[#, 
        "Charting`Private`Tag$198575#1"]& ]}, {}, {}}, {{}, {{}, 
      {RGBColor[1, 0, 0], PointSize[0.0055000000000000005`], 
       AbsoluteThickness[1.6], PointBox[CompressedData["
1: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
NfLvDbFsn1hNnlfDZ2/563hhNXlejTF72xY5iarJ82rEfN3zRPWlmjyvhlm7
7sfj/1ST59VoHWw6/lkLDnlejWtrXaNUrTjkeTVOzxMGx7TnkOfV2PSmvuaB
OYc8Z66je9+986w45DlzXI//vt0ZzyHPqxF2VOi8/j8OeV6N794lrz0mcsjz
asAs0XXdEg55Xo17s8/di1jBIc85iFF3z9iygUOec3CtalQPuwMc8pyD+Pt1
uxcf45DnHGwf3CfM7xyHPOfAZRRP/ekihzznwGNLojjzKoc852Bmyy/Lx73g
kOccdLp18c6kdxzynAOd7ePlijgOec7Bp8d7M0ySOOQ5B8Ezbu2KSuOQ5xy0
Pss73FjMIc858PcaV8qv45DnHKw367T2FfNq8JwD7qc20y/84JDnNfjyvral
mnk1eF6Dqyqb76/61JDnNdA9dIr+wqwNnjOvoukBFstryPMaDOys3DnocA15
XoNoX9N/8tM15HkN/J3H9np1toY8r4Fs/rTNHc/VkOc1WDx9nvEAZm3wvAZb
Ugr2BF2qIc9r0PnGhPhg5n2D5zX4uJ67C8E15HkNwh12Wv8XW0OeM/tVXDWZ
z6wNntegIrVt4ILMGvK8BtpC04b/vtWQ51y4mvY+XfWrhjznIsX30A5Vdy55
zoU4yXP24V5c8pwLdt+aKcqBXPKci2Xjh0aHDeGS51zkPzf5sMqOS55zsTva
bWbRQi55zkVvP67+JvN/Bs+Z83yOGD12H5c85+LbyT2LLx/hkudc/E9+I/p5
KJc852LY1X4OEZFc8pyLx/Kz72+Vc8lzLvbuKYrtVcElz7konG0bXS3ikue1
OL8/zLOfikue1yKVF9F17mcueV6L6S1nex1vU0ue16J98Xg3tVkteV6Lx/Me
TRs2sJY8r8XtK2sCLgyrJc9rcXP7hNm7ZtWS57W44fblcOfVteR5LdaksLbp
nGrJ81oMym21LcS1ljyvhcKuXemLM7XkOfN+wEbj7T615Dmz38O2sc6vaslz
5jyNXZa2D68lz2sRXhP21JtZGzyvxXWdpaX+Yy15Xoet0Vc2rSqvJc/rkGeS
X32ZW0ue12H/pJpJzqpa8rwODaqIzdt1teR5HS5MrvcN1teS53Vw2DrSt/Ov
WvK8Dn/tuUXererI8zrMQsGMQyZ15HkdFDECoYtNHXlehzuemxrnM+cxeF6H
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
6rCTr86lK8lzFWoGDCu7x5zX4LkKM56527sVKclzFa5xt7mdY85r8FyFFtFV
P0QSJXmuwp7zM7bEq5XkuQrbZEc/v+2gIs9V6Lh20/pwSxV5rkJwfqylywgV
ea7C88F/D8RPUJHnKoQvmKPnzFeR5yr0Xf5p1ZlVKvJchdjL71x6rVWR5yrU
u/zvkouLijxXwXO/qbPFPhV5rkKA1RHb8/tV5LkKMfk2wpgjKvJchbuilvrz
p1XkuQoPalbuamBeDZ6rkGyc/XfYHRV5roLyR0Hm4Lsq8py5f1jX4RLzfwbP
mX2tNv+wy1dFnquQ5M0JeROlIs9VsOAs6GaeoSLPVfA2K/SUM68Gz1XIUx48
GJGjIs9VaMVukbSQeTV4rsLmvxvj0kUq8lyFqOcbu7kqVOS5Cp+7+raY+kVF
nquQcerNorvd1OQ58/+xolw5szZ4rkb/B7NbcEzU5Lka903m3lrVU02eqzEx
YWzw/3qpyXM1vNZ5Xzo4Uk2eq1HX8cpT++lq8lyNLeWNvpehJs/V8N/Upvuo
OWryXI3MLwtS3ixUk+dqrFjQcr50qZo8V8OyBhN9HdTkuRpWUYmihPVq8lwN
Ua+py9puUJPnani/sTtgskVNnqvhWbprl8pFTZ6r8ftg8fP/7VCT52qs3vVz
6RU3NXmuRtjL0XBivmfwXA3ZrKKdS93V5LkajhybkRzm/wyeq7Hhv7bys4/U
5LkaqviOk3N81eS5GoqzTyIHhKnJczX+1rtFOUSqyXM1jk7r6chNVJPnzLpH
5ihFspo8V2Pl/im/2qaoyXM1Tp/rsd6sWE2eq/Fq9pA2QmZt8FyNO+/dn5ws
UZPnzD5fduTqy9XkuRr8IufYvCo1ea6BZM+ab5+YteGBr0Hrvz1MLGrV5LkG
Xvne32IkavJcg8CdHd/3/KsmzzW4cNgt5wJzHIPnGixJfpnWtY+GPNfA6Gpf
xQtmbfBcA1uZiTijr4Y81+Dc1rLhJVYa8lyDZeKHbxZaa8hzDczPdehzZKiG
PNegcmnviC3McQyeM/u5eYUftl5DnmsQfefY+zabNOS5Bu32JUx9vVVDnmuY
eb1HRa+9GvJcgz1XB91duk9DnmuwsbttXt0hDXmuwQnFsF8+VzTkuQbdU0WH
+9/SkOcavDleGD7isYY81+Byr/F9tj/VkOcanDS6MCk4UEOeazBt49eX1SEa
8lyDSSfiHQqjNeS5Bhe3bX8TG6shz5nr/1PYvlOchjzXIGLPzq7HkzXkuQbv
uhr/fp6iIc81uLPl700TloY816C8ssuN7mwNea7FvBNZojzmuAbPtXDNHxXS
XaYhz7X4nvk1Z5RWQ55rsfH8iJf53zTkuRZ9tn4fefWnhjzX4nrfx1/W/9GQ
51pcm/iqVZ6xljzXwmHlS/m27lryXIsPs09WTR6tJc+12CnrZF7PvG/wXAuP
9nN/58zTkufM8VKvX/u9UkueM/sZ8avt5rVa8lyL/e0vjty7Q0uea7F36rRL
XXZpyXMtXr7+oPLbpyXPtbjiES3IZtYGz7XoaX3vWYsDWvJcC8sxS1//OKgl
z5l9Hpe/u3NZS55rce/ogEUH/LTkuRZHvwR6DA3UkudaDK/+keTwRkueaxEV
dn3TykQtea7FpINpGzYmaclz5ny/rfo4MWuD51pEW5am2qRryXNmH0WfH3Jz
tOQ58/s8/fjzdZmWPGeu75B50RbmewbPtei1Z7CdJUdLnuswv/XuHie5WvJc
h60nL0g/qrTkuQ6D3G18WFotea7DLeXN3eE/teS5Dj9ODuGVGOnIc+bz9G+n
K4115LkOU67B2aerjjzXoZ9IZHrBREee6yCoWPR8tZmOPNdhVbepV55a68hz
HcIS+/j8b7COPNfh6yPPJ52H6MhzHYao7lpUzNGR5zrctk99dmmejjzXodv6
0avGrNOR58w+H+++/YF53+C5DnHRGZ4WzPsGz3UQRxcbn7yoI891uJ6xTMJ6
oCPPdYh9VpY/10dHnuvQol2BvZJZGzzXISPHuGDocx15rkP38gWjrcJ05Dlz
Hnakfe5LHXmug+4V/3BElI481+Fe6DcdK1ZHnutgdSpNe/+jjjzXwYj9D+eT
deS5DjbXHM/UZOvIcx16+fsK1zLHMXiuQ+SG1512SnTkOXNdy3IPnlDryHM9
6tv6LXqm15Hneiy/0LB6Z6OOPNdj672sMZ7t9eS5Hrt0+7eYddWT53pMO/Vz
UwcLPXmuh9/ENPtT1nryXI/yi9MeXpqlJ8/1cPd9k/pxnp481+PdW046FunJ
cz2SNx//WsCsDZ7r4dQtIfHBUj15rsco4+3O3I168lwPu96LGv/z0JPnegzs
lr5701U9ea7HjPL5pz/d0JPnerzVXB2p8dWT53qMjWG1W+CnJ8/16NI7ekvC
cz15rkeDxf019il68py5rs3TPYsz9eQ5c95xY/415ujJcz06e338GFisJ8+Z
/T3y6zZJqyfP9XCxmGCxVKcnz/WQBq0yfsisDZ7rseVSr5jHzNrguR7Lvj36
8FKvJ8+Z7/kmcPt/1ZPneth2fnr6+Dc9ea5H0dPSPZMb9eS5Hv8H/PbF+Q==

        "]]}, {}}, {}, {}, {{}, {}}}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{False, False}, {False, False}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->{270., Automatic},
   Method->{
    "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
     AbsolutePointSize[6], "ScalingFunctions" -> None, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
          Part[#, 1]], 
         (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
          Part[#, 2]]}& )}},
   PlotRange->{{0, 1}, {0., 0.9999999795918367}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}]], "Output",
  CellChangeTimes->{3.6895502087461777`*^9, 3.6895504616570168`*^9, 
   3.6895516784789953`*^9, 3.689551838204595*^9, 3.689551928117989*^9, 
   3.689552023299384*^9, 3.689553285764433*^9, 3.689553411471754*^9, 
   3.6895535484935703`*^9, 3.689553784838739*^9}]
}], "Text",
 CellChangeTimes->{
  3.689553799763805*^9, {3.689553917773748*^9, 3.689553918513299*^9}}],

Cell["\<\
As we can see, the data fit the third model the best so we chose that one.\
\>", "Text",
 CellChangeTimes->{{3.689553937781145*^9, 3.689553956405203*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " 95% confidence intervals for the constants"
}], "Subsection",
 CellChangeTimes->{{3.6883380857471867`*^9, 3.688338093298911*^9}, {
   3.6895307460631933`*^9, 3.6895307489345703`*^9}, {3.689545346401348*^9, 
   3.689545356841613*^9}, 3.689554215476375*^9}],

Cell[CellGroupData[{

Cell["Solution", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, 
   3.688339206676055*^9}],

Cell["", "Text",
 CellChangeTimes->{{3.689553681030551*^9, 3.689553711252194*^9}, 
   3.689554186252429*^9}]
}, Open  ]],

Cell["Code", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, {
  3.688339162508295*^9, 3.688339166187951*^9}, {3.6883424648359222`*^9, 
  3.6883424653138523`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ". Which distribution?"
}], "Section",
 CellChangeTimes->{{3.6883370780341473`*^9, 3.6883370831860743`*^9}, {
  3.689530696414987*^9, 3.6895306977155533`*^9}, {3.689530815894239*^9, 
  3.6895308198461847`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Determine a distribution model and point estimates for parameters"
}], "Subsection",
 CellChangeTimes->{{3.68833807029881*^9, 3.688338079218799*^9}, {
  3.688344869609865*^9, 3.688344869825639*^9}, {3.689530801942465*^9, 
  3.689530810446213*^9}, {3.6895513244780703`*^9, 3.689551341293346*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, 
   3.688339206676055*^9}],

Cell[TextData[{
 "To determine the distribution model of the random data we can use the \
built-in function ",
 StyleBox["FindDistribution", "DisplayFormula",
  FontWeight->"Bold"],
 StyleBox[", ", "InlineFormula"],
 "which takes a list of values and returns a distribution The function ",
 StyleBox["EstimatedDistribution", "DisplayFormula",
  FontWeight->"Bold"],
 " estimates the parameters, and returns a distribution. This only works \
reliably when we use a large enough sample size (so we used 1000 random \
numbers).  Then we plotted the distribution with probability plot to verify \
it. "
}], "Text",
 CellChangeTimes->{{3.689534173274135*^9, 3.689534303690764*^9}, {
  3.689551263757574*^9, 3.6895512959017353`*^9}, {3.6895513513571672`*^9, 
  3.689551387797103*^9}, {3.689553640287561*^9, 3.689553647575441*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, {
  3.688339162508295*^9, 3.688339166187951*^9}, {3.6883424648359222`*^9, 
  3.6883424653138523`*^9}, {3.688345011432764*^9, 3.6883450125764303`*^9}, {
  3.688347507361436*^9, 3.688347507537098*^9}}],

Cell[CellGroupData[{

Cell["Distribution 1", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", "=", " ", "1000"}], ";"}]], "Input",
 CellChangeTimes->{{3.6895336048108873`*^9, 3.689533607701769*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"rand", " ", "=", " ", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"1", ",", " ", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Mu]", "=", " ", 
   RowBox[{"Mean", "[", "rand", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindDistribution", "[", "rand", "]"}]}], "Input",
 CellChangeTimes->{{3.689533336912553*^9, 3.689533359151455*^9}, {
  3.689533458102881*^9, 3.6895334696474733`*^9}, {3.6895335606622953`*^9, 
  3.689533560886615*^9}}],

Cell[BoxData[
 RowBox[{"ExponentialDistribution", "[", "4.549053439870875`", 
  "]"}]], "Output",
 CellChangeTimes->{{3.689533589145258*^9, 3.6895336114604797`*^9}, 
   3.68953396899825*^9, {3.68953413973204*^9, 3.6895341475488453`*^9}, 
   3.689534352859037*^9, {3.689534442751623*^9, 3.68953446351777*^9}, 
   3.6895345947185707`*^9, {3.68953465431334*^9, 3.689534709620193*^9}, {
   3.689534743086966*^9, 3.689534756729333*^9}, {3.689534813229504*^9, 
   3.6895348439663887`*^9}, 3.6895356679375887`*^9, 3.689537682120987*^9, {
   3.689537762796*^9, 3.68953778321637*^9}, 3.689537822627449*^9, 
   3.689538227139634*^9, 3.689538301635296*^9, 3.6895384032744207`*^9, {
   3.6895384781949873`*^9, 3.689538506441395*^9}, 3.68953873649714*^9, 
   3.6895388423508463`*^9, 3.6895393585633097`*^9, 3.6895393911812563`*^9, 
   3.6895394397961073`*^9, 3.689542863796534*^9, 3.689542913785795*^9, 
   3.689543027355006*^9, 3.689543583139615*^9, {3.689543631642535*^9, 
   3.68954364408838*^9}, 3.689543849584641*^9, 3.689544107222102*^9, {
   3.689544146187706*^9, 3.689544170207307*^9}, {3.68954423477036*^9, 
   3.689544289613655*^9}, {3.689544328160262*^9, 3.689544354489758*^9}, {
   3.689544395138595*^9, 3.689544408409953*^9}, 3.689544593358378*^9, {
   3.6895447263834953`*^9, 3.68954476230765*^9}, 3.689545168213032*^9, 
   3.689546429705323*^9, {3.689546482454855*^9, 3.6895465584438133`*^9}, 
   3.689546601600276*^9, {3.689546905878368*^9, 3.68954695683459*^9}, {
   3.689547019501678*^9, 3.689547112784297*^9}, 3.689547188111589*^9, {
   3.689547328139909*^9, 3.689547337961381*^9}, {3.689547392001549*^9, 
   3.689547405832075*^9}, 3.689547491195188*^9, 3.689547723525927*^9, 
   3.689547904659436*^9, 3.689548067795979*^9, 3.689548230857149*^9, {
   3.68954829060436*^9, 3.68954830815442*^9}, {3.689548467647175*^9, 
   3.6895484920540648`*^9}, 3.689549884433457*^9, {3.68954991849999*^9, 
   3.689549940882893*^9}, 3.689549975192648*^9, 3.689550057047502*^9, {
   3.689550152715611*^9, 3.689550174934835*^9}, 3.6895502091821136`*^9, 
   3.6895504624428387`*^9, 3.689551678967863*^9, 3.68955183867103*^9, 
   3.6895519285897303`*^9, 3.689552023788957*^9, 3.689553286633782*^9, 
   3.68955341217435*^9, 3.689553549165876*^9, 3.689553786131856*^9, 
   3.689553862432572*^9, 3.68955403364974*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distribution", " ", "=", " ", 
  RowBox[{"EstimatedDistribution", "[", 
   RowBox[{"rand", ",", " ", 
    RowBox[{"ExponentialDistribution", "[", "\[Lambda]", "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.689533379794179*^9, 3.689533414342951*^9}, {
   3.689533538878354*^9, 3.689533547415498*^9}, 3.689534349729774*^9, 
   3.689534706331526*^9}],

Cell[BoxData[
 RowBox[{"ExponentialDistribution", "[", "4.5490534398708755`", 
  "]"}]], "Output",
 CellChangeTimes->{
  3.689534709735973*^9, {3.689534743167547*^9, 3.6895347567794523`*^9}, {
   3.689534813320621*^9, 3.68953484403725*^9}, 3.689535667978613*^9, 
   3.689537682180717*^9, {3.6895377628391457`*^9, 3.689537783251019*^9}, 
   3.689537822667183*^9, 3.689538227182398*^9, 3.68953830167929*^9, 
   3.689538403320284*^9, {3.689538478234755*^9, 3.689538506480606*^9}, 
   3.68953873654795*^9, 3.6895388424018583`*^9, 3.689539358601345*^9, 
   3.689539391219241*^9, 3.689539439824915*^9, 3.689542863823389*^9, 
   3.689542913958976*^9, 3.6895430276191053`*^9, 3.689543583171228*^9, {
   3.689543631807252*^9, 3.689543644442699*^9}, 3.6895438496658382`*^9, 
   3.68954410731563*^9, {3.689544146224905*^9, 3.6895441702371197`*^9}, {
   3.689544234802166*^9, 3.689544289645084*^9}, {3.689544328194907*^9, 
   3.6895443545457163`*^9}, {3.6895443952091913`*^9, 3.689544408481147*^9}, 
   3.689544593391609*^9, {3.689544726423318*^9, 3.6895447623437347`*^9}, 
   3.6895451682499647`*^9, 3.6895464297951593`*^9, {3.68954648254078*^9, 
   3.689546558537128*^9}, 3.689546601816182*^9, {3.689546906067281*^9, 
   3.689546957004876*^9}, {3.68954701957183*^9, 3.689547112819861*^9}, 
   3.689547188147059*^9, {3.6895473281748943`*^9, 3.68954733800744*^9}, {
   3.689547392026311*^9, 3.689547405867125*^9}, 3.689547491243353*^9, 
   3.689547723612935*^9, 3.689547904734455*^9, 3.689548067977401*^9, 
   3.6895482308948383`*^9, {3.6895482906422873`*^9, 3.689548308189352*^9}, {
   3.689548467678581*^9, 3.6895484920876217`*^9}, 3.6895498844816027`*^9, {
   3.6895499185384197`*^9, 3.689549940919262*^9}, 3.689549975237121*^9, 
   3.689550057084468*^9, {3.689550152757269*^9, 3.689550174999723*^9}, 
   3.689550209215979*^9, 3.689550462701212*^9, 3.689551679012244*^9, 
   3.6895518387174253`*^9, 3.689551928636298*^9, 3.689552023862211*^9, 
   3.689553286802071*^9, 3.6895534124588223`*^9, 3.6895535493371*^9, 
   3.689553786395878*^9, 3.6895538625924807`*^9, 3.689554033828076*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProbabilityPlot", "[", 
  RowBox[{"rand", ",", " ", "distribution"}], "]"}]], "Input",
 CellChangeTimes->{{3.689533572968631*^9, 3.689533582949996*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0], 
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      PointBox[CompressedData["
1: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
Ih15P3zPfluagrVczQ1OR5nbQvY9ZQrVj3TYq0t3PDyYipYQzQmmY0m/tLU7
/5dK9SQdnlXH5kUlp+Kp5uwK0uF9szL/MSeV6ks6HGenS8Z+ScUyZnGt6ZWB
vJU3+5T8TKV6k4GyVTH7enROg/yP5oIz0Na6o/Vi3zSqPxkYHGqevHd2Gh5k
kA0MjkXjVMO5aVSPMuDT6fTc3M1pWKi53LIMCDa7x+84lUb1KQOOKz73+nQ7
DXzN4fplYvisRYdme6VRvcrEPFnAh7fcNNzWyNHmTHj203d8rUij+pWJPH0P
awP9dMwi5UMmfIZsmt1vfDrVs0wYFh5zsd6RjnqNHNRmos06J/j40XSqb5kM
r70fKy+m46pmOw/OQvRv3TBzv3Sqd1m4OCvQvTU0HZM029E2CwYpvwZslKRT
/cuCYcDMsZMNMlBJyosspE3Z6/xuTgbVQ+Z4rl2W3XDOwAXNdmjMgjNnwpmh
iRlUH7NgVjmvi2deBsZqlvPIbNidaWybzs2gepmNXn/9/DK/ZqBQs/zss+Ec
dtzLxjST6mc2ivBS9vtYJk5rbm9ANp45LGnne2VSPc3GZ3734O3vMjFMM338
bAx+Yrb2WmIm1dcchGmnrFpelIlMzekZ5WDjloOLPbpkUb3NgdGBr8JtPbNw
5KDmLwc/j4fsXr80i+pvDla3lNi/Y+alP1M8MQoLnQdJDj3tsqgeM69HV+mP
d81CYotmQedAcvnUPoF7FtXnXDj1Hb3riX8W9iVoDpiL/f3TbPVLs6he52Ld
6QjHxy1Z6HlFI1C5mC6vG/CjLYvqdy507MtVNd2z8XGVZoPkoir4SLWDfjbV
81w8WzUiP3dDNnZoqjt1Lop2tow2ts2m+p4HvSD0jbiYjc7VzHabkYdep7Xy
vV2zqd7nwXDOEHav4Gy80yznU3kINdfps6c+m+o/836riD4N+jnYTPCYh+UJ
CywvDsihPMjDN0f3sGqrHPzR3I7WPGTJbA/FOOZQPuTDUND/SuaRHARqLndu
Po5m2GgPuZdDeZGPrJQh2SsTc7BWczjnfHjOml1ays+h/MiHwZHWniVfctBC
8JCPXhnh6zy751Ke5KPq8791vcfk4qlG3v8w4//u3v+6JJfypQDRwpQ1sXty
sUwjz4sK0Bak57/rRC7lTQGWjznz3Pl5LuQaeXUtAOtI1O2t7FzKnwLoDeh9
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
P6DHkAQpc92E5zLsy4wd0iST0fxIhldR3hU+KhmSyHKWIVw15F/YZxnNk2To
seFYK5jHg4TnMugEPNCNZh478iU5/H7mOdX3kUOP8FwOr7GfrBT95DRvkmNp
svl11/5yJBCeyzEj+Xz2DQM5zZ/keLG5PGf1BDn2E57L4TwnZPf/ZshpHiXH
7zePXhtAjj6E53L0qzlx/qq5nOZTcmYdTLFrWSNHHOG5HBNfD7I8v1dO8yo5
PEcW3R9yXI69hOdyvElbF1l3Qk7zKzmeTpE+P+wqRy/CczmOcmUJXW/JaZ7F
fM5/bZ3DXTliCM/lKJ+tfeKqt5zmW3IMmD/h7WgfOewJz+Xw1j4vUgfKad4l
x9oo7VtvI+ToQXgux4QtVUVX4+Q0/5Jj06x9l0uT5IgmPGfOw8X8srpITvMw
Odbzej5aVCqn/z8kh4fCvYjNktN8TA47o6e5M8VydCc8l+PlcsnOKd/kNC+T
w+3fgUbBHzk+EJ7LcTri3PlWZtyRnzGfq2tvn9tNATvCczl89feZFOgqaJ4m
h1aS9dAr+gp0JTxX4ETgYSfWIAXN1xRQT+oWmTNUgUjCcwXSRSaiGcMUNG9T
4MG7qMj6EQrYEp4rsFTUsBWjFDR/UyBUd9HyxVMU0CE8V2De3PPNq5jHjjxO
gYGyCTbbmXE44bkC336fGrV3loLmcwrMGiHz3bBcARvCcwWu7Die4LFSQfM6
Bbi+TWGLDymgTXiuwPmMYT7BxxU0v1NA9NtseoCTAmGE5wpEzeoWvul/Cprn
KVB9zDDlk7MCWwnPFeBsPb35ywUFzfcU6PI+zyX/sgJalzUXrEDcCKOJd64o
aN6nwNxR0+btZD73lvBcgdFLM1n/MY8d+Z8CLRssNthHKrCF8FyBTa+eO61n
HjvyQAUcpoQc7/JJgX+E5wp4jXruGsk835EPKuBWHvoqOJ2ZR8JzBVJ2rPvf
Yub5jrxQgYg9USGHS5njEp4rYOkxeqtNrYLmhwoo8j7U1/IUaCM8V4C1Zuvj
znwFzROZeeqd5OL7Q4FgwnMlFslrebv+KWi+qITkQnir1XAlNhKeK5F2ULRd
PElJ80YlXmWYHZMw49+E58zrD91GT12gpPmjEjrq8rbjS5UIIjxXovE/qztb
litpHqmEvzLJPnqVEpaE50roucsvxa9X0nxSiUs3Loikm5X4SXiuxI2Tm2Rv
jyppXqmE7svQVVmnmPMgPFfCwzh+d5GLkuaXzOvHTJd5XFFiHeG5Ej5PbMKv
3FHSPFOJhNCWrpEvlfhOeK5E9qdru/PfK2m+qcTnve1TZ0Yw50l4znz/y7ig
xBQlzTuVcIvIu6JIU8KC8FyJ9HxZoEeWkuafSkS3h9fvzVPiG+G5Ev3TV43t
WqikeagSdz65dTYvUuIF4bkSRXk+T0xLlDQfVSLy1+n4lXVKrCY8VyL5dczj
qGYlzUuVeDnSVD+Tq8RXIldKdHeqcE+UKWl+qsTBy+Jg/V9KPCM8V2Jz8zaz
cj0VzVNVjA607NAbosJKwnMVTIc3dn5voqL5qgpdPTuvODFDhc+E5yoMf2pV
2MiMO/JWFT6O7mm1YpYKTwjPVXDqwjLYMFdF81cVkhe+yAxYqMJywnMVBgX1
+NeyVkXzWBVeXP3QZZOlCirCcxXa4/MdttqoaD6rwulhS2IO26ngR3iuQvms
kam6R1U0r1Uh5vnJ3ReOqbCU8FyF3jnrThSdUNH8VoVu9lZLDU6poCA8VyFl
7C79PBcVzXOZ75fucT7orsJDwnMVDsW2F467rqL5rgoT/5YEt99UYQnhuQoL
VliP1n6gonmvCj9MB3WSM++TEZ6rkHH8THvhYxXNf1X4euPc/LRQFXwIz1XY
0z5fsipKRfNgFZoFPVwzY1VYTHjOzNPltQFNzPs68mHmuryvXT+qpYaE8Jw5
fqXV8+wuapoXq7DVWV5axYzvE56r8L7nm6gXvdU0P1Yhb2u4ye3+apgRnqtR
fztx4Mehaponq9G7avmHdePUEBGeq/Hw8P5w1SQ1zZfV6HvwadyS+Wp4E56r
MYAl4bosVdO8WQ2T+MSN/pZqLCA8V8PwVr9D2K6m+bMaO6cpLJ7sVkNAeK7G
lj+9l/44rKZ5tBpvou2u/WPGXoTnaqx8dfng9pNqmk+rce3Oc0/2aTXmEZ6r
MX3f7bCdZ9Q0r1Zjyr+XgZtc1OARnqth3KI+199dTfNrNboFv5x95KoadwjP
1ci0d+k91UdN82zme9y+KLWC1ZhDeK5Gf5vi3W/D1DTfVsPn0jXd0vdqcAjP
meMP2TyzMUpN8241ho1vcy+JU+MW4bkaZ8aXZu6NV9P8W40lJ3XT/DLVMCU8
V6N88PdN0XlqmoerMfLJ8FKLUjWaCM/VGLvbWfiiUk3zcTUuXNsWotOghifh
uRo3XqhzC5jnO/JyNboLLO0yFGrMJDxXw2r9mIMr/qppfv4Z/wdI6tUj
       
       "]]}, {}, {}}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{}, 
    StyleBox[
     LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
      0.9999999795918367, 0.9999999795918367}}], 
     Directive[
      RGBColor[0.368417, 0.506779, 0.709798], 
      AbsoluteThickness[1.6], 
      Dashing[{0, Small}]], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{456., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.689533590391657*^9, 3.6895336116567*^9}, 
   3.689533969298602*^9, {3.68953413988655*^9, 3.6895341477168827`*^9}, 
   3.689534353046999*^9, {3.6895344430028963`*^9, 3.689534463773303*^9}, 
   3.6895345949301157`*^9, {3.6895346545290737`*^9, 3.689534710021469*^9}, {
   3.689534743398395*^9, 3.68953475694456*^9}, {3.689534813482895*^9, 
   3.6895348444828663`*^9}, 3.689535668141953*^9, 3.689537682355427*^9, {
   3.6895377629654503`*^9, 3.689537783354022*^9}, 3.689537822789391*^9, 
   3.6895382272991867`*^9, 3.689538301787891*^9, 3.6895384034510107`*^9, {
   3.6895384783458157`*^9, 3.6895385065915737`*^9}, 3.6895387366672287`*^9, 
   3.689538842522604*^9, 3.689539358717422*^9, 3.689539391367038*^9, 
   3.6895394399209948`*^9, 3.689542863992929*^9, 3.689542914120322*^9, 
   3.689543027818576*^9, 3.689543583284548*^9, {3.689543631957163*^9, 
   3.6895436447228003`*^9}, 3.6895438498621483`*^9, 3.68954410744659*^9, {
   3.689544146334201*^9, 3.68954417034158*^9}, {3.689544234905164*^9, 
   3.689544289748973*^9}, {3.689544328303301*^9, 3.689544354647196*^9}, {
   3.6895443953418293`*^9, 3.68954440860089*^9}, 3.689544593493018*^9, {
   3.689544726533453*^9, 3.689544762447854*^9}, 3.6895451683582077`*^9, 
   3.6895464300115*^9, {3.689546482695443*^9, 3.689546558692358*^9}, 
   3.689546602024852*^9, {3.689546906268605*^9, 3.689546957163858*^9}, {
   3.689547019694915*^9, 3.689547112987039*^9}, 3.6895471883858633`*^9, {
   3.68954732828305*^9, 3.6895473381714993`*^9}, {3.6895473921275797`*^9, 
   3.68954740597293*^9}, 3.689547491366248*^9, 3.68954772371749*^9, 
   3.6895479048386927`*^9, 3.689548068142748*^9, 3.6895482310050373`*^9, {
   3.689548290755014*^9, 3.6895483083066807`*^9}, {3.689548467790887*^9, 
   3.6895484921962137`*^9}, 3.689549884611446*^9, {3.689549918650948*^9, 
   3.689549941035203*^9}, 3.68954997536731*^9, 3.689550057202229*^9, {
   3.689550152878338*^9, 3.689550175117899*^9}, 3.689550209336187*^9, 
   3.6895504628832903`*^9, 3.689551679346733*^9, 3.689551838839764*^9, 
   3.689551928873023*^9, 3.68955202399026*^9, 3.689553287233099*^9, 
   3.68955341280381*^9, 3.689553549550226*^9, 3.689553786643146*^9, 
   3.6895538627659407`*^9, 3.68955403396453*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution 2", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.6895338949799557`*^9, 3.689533895035796*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"n", " ", "=", " ", "1000"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rand", " ", "=", " ", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"2", ",", " ", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindDistribution", "[", "rand", "]"}]}], "Input",
 CellChangeTimes->{{3.6895336048108873`*^9, 3.689533607701769*^9}, {
  3.689534024547531*^9, 3.689534051003106*^9}, {3.689534109283185*^9, 
  3.689534109515553*^9}}],

Cell[BoxData[
 RowBox[{"GeometricDistribution", "[", "0.06610696106299993`", 
  "]"}]], "Output",
 CellChangeTimes->{{3.6895341400950193`*^9, 3.6895341479270372`*^9}, 
   3.6895343534344397`*^9, {3.689534443305385*^9, 3.689534464186577*^9}, 
   3.689534595272894*^9, {3.6895346548513727`*^9, 3.689534710305848*^9}, {
   3.6895347437092257`*^9, 3.689534757330789*^9}, {3.689534813820709*^9, 
   3.6895348449935837`*^9}, 3.6895356685487223`*^9, 3.6895376833711*^9, {
   3.68953776320158*^9, 3.689537783546863*^9}, 3.6895378229834023`*^9, 
   3.6895382274904613`*^9, 3.68953830198941*^9, 3.689538403641522*^9, {
   3.689538478574251*^9, 3.689538506783786*^9}, 3.689538736871461*^9, 
   3.689538842720182*^9, 3.6895393589286823`*^9, 3.689539391614729*^9, 
   3.68953944014534*^9, 3.689542864295827*^9, 3.689542914380354*^9, 
   3.689543028757347*^9, 3.689543583451846*^9, {3.689543632232503*^9, 
   3.689543644987267*^9}, 3.689543850227537*^9, 3.6895441076376534`*^9, {
   3.689544146509755*^9, 3.689544170534968*^9}, {3.689544235087489*^9, 
   3.68954428995084*^9}, {3.68954432851411*^9, 3.6895443548381968`*^9}, {
   3.689544395526805*^9, 3.68954440878899*^9}, 3.6895445936480923`*^9, {
   3.689544726732439*^9, 3.68954476260892*^9}, 3.689545168509758*^9, 
   3.689546430378443*^9, {3.689546483171784*^9, 3.689546559056982*^9}, 
   3.689546602277422*^9, {3.689546906524336*^9, 3.6895469574190607`*^9}, {
   3.6895470198483953`*^9, 3.6895471132439947`*^9}, 3.6895471886170063`*^9, {
   3.689547328495048*^9, 3.68954733835338*^9}, {3.6895473923575077`*^9, 
   3.689547406213299*^9}, 3.689547491524023*^9, 3.689547723877626*^9, 
   3.6895479050124702`*^9, 3.689548068399791*^9, 3.689548231186761*^9, {
   3.6895482909246073`*^9, 3.689548308468177*^9}, {3.689548467954561*^9, 
   3.689548492360215*^9}, 3.6895498847902813`*^9, {3.689549918818871*^9, 
   3.6895499411985197`*^9}, 3.68954997553283*^9, 3.689550057363467*^9, {
   3.689550153043045*^9, 3.6895501753083344`*^9}, 3.689550209561142*^9, 
   3.689550463147152*^9, 3.689551679552079*^9, 3.689551839099988*^9, 
   3.689551929097143*^9, 3.689552024216578*^9, 3.689553287492635*^9, 
   3.689553413182324*^9, 3.689553549932672*^9, 3.68955378696236*^9, 
   3.689553862980633*^9, 3.689554034222163*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"distribution", "=", 
  RowBox[{"EstimatedDistribution", "[", 
   RowBox[{"rand", ",", 
    RowBox[{"GeometricDistribution", "[", "p", "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"ProbabilityPlot", "[", 
  RowBox[{"rand", ",", "distribution"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6894462406355743`*^9, 3.6894462815669537`*^9}, {
   3.689534117291175*^9, 3.6895341433629007`*^9}, 3.689534704151188*^9}],

Cell[BoxData[
 RowBox[{"GeometricDistribution", "[", "0.06610696106299993`", 
  "]"}]], "Output",
 CellChangeTimes->{{3.689534135827198*^9, 3.689534148033876*^9}, 
   3.689534353587864*^9, {3.689534443427446*^9, 3.68953446433974*^9}, 
   3.6895345954553556`*^9, {3.6895346550101213`*^9, 3.6895347104077063`*^9}, {
   3.689534743800795*^9, 3.689534757426742*^9}, {3.689534813858143*^9, 
   3.6895348454055223`*^9}, 3.689535668586074*^9, 3.6895376834394617`*^9, {
   3.68953776324467*^9, 3.689537783589563*^9}, 3.689537823017864*^9, 
   3.689538227524414*^9, 3.689538302030568*^9, 3.689538403674904*^9, {
   3.689538478610649*^9, 3.689538506823472*^9}, 3.689538736919037*^9, 
   3.689538842768504*^9, 3.689539358967229*^9, 3.689539391658325*^9, 
   3.6895394401807013`*^9, 3.689542864324253*^9, 3.68954291446738*^9, 
   3.689543028862178*^9, 3.6895435835255527`*^9, {3.689543632313387*^9, 
   3.689543645073723*^9}, 3.689543850263041*^9, 3.6895441076705723`*^9, {
   3.689544146546877*^9, 3.689544170566634*^9}, {3.689544235164865*^9, 
   3.689544289984437*^9}, {3.6895443285505123`*^9, 3.689544354876341*^9}, {
   3.6895443955638943`*^9, 3.68954440882906*^9}, 3.689544593678657*^9, {
   3.689544726775305*^9, 3.689544762640101*^9}, 3.689545168542288*^9, 
   3.689546430424913*^9, {3.689546483262001*^9, 3.689546559150601*^9}, 
   3.689546602366572*^9, {3.689546906616816*^9, 3.689546957613304*^9}, {
   3.6895470198973637`*^9, 3.689547113286831*^9}, 3.689547188654814*^9, {
   3.689547328529756*^9, 3.689547338392747*^9}, {3.689547392394228*^9, 
   3.689547406244733*^9}, 3.689547491573174*^9, 3.689547723913155*^9, 
   3.689547905043936*^9, 3.689548068489943*^9, 3.6895482312315273`*^9, {
   3.689548290964349*^9, 3.689548308504673*^9}, {3.6895484679896927`*^9, 
   3.689548492402623*^9}, 3.689549884843664*^9, {3.689549918867106*^9, 
   3.6895499412419786`*^9}, 3.6895499755801077`*^9, 3.6895500574156237`*^9, {
   3.689550153079364*^9, 3.689550175353469*^9}, 3.689550209596445*^9, 
   3.689550463216827*^9, 3.6895516796198177`*^9, 3.689551839144834*^9, 
   3.689551929138583*^9, 3.689552024273037*^9, 3.6895532875837793`*^9, 
   3.6895534133803663`*^9, 3.689553550019884*^9, 3.6895537870067253`*^9, 
   3.689553863037733*^9, 3.689554034317008*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0], 
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.011000000000000001`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJwtlAtQFHUcx2+IgKwM8IbUYVDIGFKIt0RE30gQ4cYHUggMIhH4AAbFGEBi
Th0F4qliDD4SBelQSjwZIiExUkZIeQcKEnOcd8ext49/PHroELT/nX4zOzv7
3/29P991TDy4M9lMJpOFixe9uzT33k/k1Kg7FLjsyVU1zMMzMt13d2Dh+szQ
1sQOuKY61mfc7UJjqDZX3tiFhcyfffpr+6A+vP8Mn9cPlTZsIrhoCBPrLI5X
bvoNURqv8u+KRyCXHB7DJ7U0wTdm9P94o5i2z1uFf55Cs72sKt12HE7xL1Vx
KROQ0h+awOOWhQrXZg2aLpH6BwoNRizfWxHPTuKFMuVO5tlJ9NW0WlWatMiQ
vtei8/Q9Azf6DD+FvWa2ofAZlIGWHid+1OH359RBh9iEgLLEQj2WhnMYZ089
HEaOmp0MM6Bb4VcUlGCA/aUmh4FFA+ykeqcQnWZhs/baFDRSP0bUK91vfLjZ
CLdCu7G+v43o+2x3PDNmxI5E62j/5mnMP1i3bPDzaTjmsxG3HRjw7gf0F/TT
+OY8NQa5nwT7auMYcM6eVt/bm3A6ctTGp5dBxb0/XeJOmZC10mS1eqMJyTRc
twk1t207rc+ZUCoWN+DE4hX9luqyORN8RO/YJBZ17Vkei1tYFHQ8rAlpYWFe
0DncfY7FTfFtgIZFzx5fx606FjfouK05mFu/E6t34bAkzZ9Dw5RiQnuAg1Ja
EIePTJn5Z1Uc6qUFcIhiGMuPNRwGeqhx2Oh6ROEp58W5h7TM/cvBw2Gw9UoI
DyepXx5rErJLHn3BI4viAB5NwW3LmWoeCopLKI/ZphnGtYtHmOg9nMMDvfEx
XRyPw7YnxA54DH45v9/whoCL6fSAx74V29bf8hBAxOj5LI/YdrkxYrsAXpqf
AH+Z9Q4uVUDVSvOo5W4ClA9XXa8tEBBEcQgUoFKtn/36sgA7Gj5EjBN883Vt
i4CUvdQEPNn8qb62RwAz4DT+XCkg3D23YH5SgPHbi51r1WIdJ5MUwpyAAErH
gIDGkjRB9TJBGy2fEVBd7NfgbUeQZKABBKz2ct557W0CncQzQUmdPOVNH4Iy
aX8EteVffVARRODnTY0gVLePuGwj0Ep8ESS8GlFlihH9KF6RBNNsoZvzQfH8
FAWEoP3KnpLWHAJfaf8EpRd6xxuOE2gkvgkqdilGzIsJmiU9EtgnWRwZPENQ
RNeTT+D1ovSY8TKBtyRQMQ//lrbtFoGVOD1RY1DNLXnu7SYolHgiWHBQl7cM
EcSJNGbdJUiOnP2reYTAUxKk+Hxe9sOxUQKLDVQQBMX3j0YPawjGr1KACPp/
lfvP6AjUEo8EEdlj5TYcQX7lppI0I0HQo7xfVHMEsVJ6gl0B6Xey5wncJX0R
PH1/jf+7iwT03yST/YH/AM7/bU8=
       "]]}, {}, {}}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{}, 
    StyleBox[
     LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
      0.9999999795918367, 0.9999999795918367}}], 
     Directive[
      RGBColor[0.368417, 0.506779, 0.709798], 
      AbsoluteThickness[1.6], 
      Dashing[{0, Small}]], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.689534135827198*^9, 3.689534148033876*^9}, 
   3.689534353587864*^9, {3.689534443427446*^9, 3.68953446433974*^9}, 
   3.6895345954553556`*^9, {3.6895346550101213`*^9, 3.6895347104077063`*^9}, {
   3.689534743800795*^9, 3.689534757426742*^9}, {3.689534813858143*^9, 
   3.6895348454055223`*^9}, 3.689535668586074*^9, 3.6895376834394617`*^9, {
   3.68953776324467*^9, 3.689537783589563*^9}, 3.689537823017864*^9, 
   3.689538227524414*^9, 3.689538302030568*^9, 3.689538403674904*^9, {
   3.689538478610649*^9, 3.689538506823472*^9}, 3.689538736919037*^9, 
   3.689538842768504*^9, 3.689539358967229*^9, 3.689539391658325*^9, 
   3.6895394401807013`*^9, 3.689542864324253*^9, 3.68954291446738*^9, 
   3.689543028862178*^9, 3.6895435835255527`*^9, {3.689543632313387*^9, 
   3.689543645073723*^9}, 3.689543850263041*^9, 3.6895441076705723`*^9, {
   3.689544146546877*^9, 3.689544170566634*^9}, {3.689544235164865*^9, 
   3.689544289984437*^9}, {3.6895443285505123`*^9, 3.689544354876341*^9}, {
   3.6895443955638943`*^9, 3.68954440882906*^9}, 3.689544593678657*^9, {
   3.689544726775305*^9, 3.689544762640101*^9}, 3.689545168542288*^9, 
   3.689546430424913*^9, {3.689546483262001*^9, 3.689546559150601*^9}, 
   3.689546602366572*^9, {3.689546906616816*^9, 3.689546957613304*^9}, {
   3.6895470198973637`*^9, 3.689547113286831*^9}, 3.689547188654814*^9, {
   3.689547328529756*^9, 3.689547338392747*^9}, {3.689547392394228*^9, 
   3.689547406244733*^9}, 3.689547491573174*^9, 3.689547723913155*^9, 
   3.689547905043936*^9, 3.689548068489943*^9, 3.6895482312315273`*^9, {
   3.689548290964349*^9, 3.689548308504673*^9}, {3.6895484679896927`*^9, 
   3.689548492402623*^9}, 3.689549884843664*^9, {3.689549918867106*^9, 
   3.6895499412419786`*^9}, 3.6895499755801077`*^9, 3.6895500574156237`*^9, {
   3.689550153079364*^9, 3.689550175353469*^9}, 3.689550209596445*^9, 
   3.689550463216827*^9, 3.6895516796198177`*^9, 3.689551839144834*^9, 
   3.689551929138583*^9, 3.689552024273037*^9, 3.6895532875837793`*^9, 
   3.6895534133803663`*^9, 3.689553550019884*^9, 3.6895537870067253`*^9, 
   3.689553863037733*^9, 3.6895540344026747`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution 3", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533896803755*^9, 3.6895338968119373`*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6895193547359962`*^9, 3.689519384748164*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", "=", " ", "1000"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"numbers", " ", "=", " ", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"3", ",", " ", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindDistribution", "[", "numbers", "]"}]}], "Input",
 CellChangeTimes->{{3.689518850334487*^9, 3.6895188853998528`*^9}, {
  3.689518964750946*^9, 3.689518965039699*^9}, {3.689519431451927*^9, 
  3.689519431508032*^9}, {3.689520211943659*^9, 3.689520211999201*^9}}],

Cell[BoxData[
 RowBox[{"GammaDistribution", "[", 
  RowBox[{"8.41383751668837`", ",", "1.5496243462686847`"}], "]"}]], "Output",\

 CellChangeTimes->{{3.689534444139079*^9, 3.689534465007646*^9}, 
   3.6895345961679277`*^9, {3.689534655824251*^9, 3.689534711390106*^9}, {
   3.68953474456621*^9, 3.689534758407353*^9}, {3.689534814653019*^9, 
   3.689534846651812*^9}, 3.689535669761858*^9, 3.689537684214677*^9, {
   3.689537763969582*^9, 3.689537784250375*^9}, 3.6895378237335377`*^9, 
   3.6895382281828413`*^9, 3.689538303191383*^9, 3.6895384044349823`*^9, {
   3.6895384793462067`*^9, 3.6895385082246304`*^9}, 3.68953873766258*^9, 
   3.6895388438517*^9, 3.689539359712551*^9, 3.689539392392177*^9, 
   3.689539440993738*^9, 3.689542864937956*^9, 3.6895429153285*^9, 
   3.689543029799025*^9, 3.6895435842387333`*^9, {3.689543633053411*^9, 
   3.689543645988039*^9}, 3.6895438510147457`*^9, 3.689544108347809*^9, {
   3.689544147295177*^9, 3.6895441716832123`*^9}, {3.6895442358651533`*^9, 
   3.689544260869259*^9}, 3.689544290985159*^9, {3.689544329180629*^9, 
   3.689544355540021*^9}, {3.6895443963332987`*^9, 3.689544409686976*^9}, 
   3.6895445942929983`*^9, {3.6895447273307877`*^9, 3.6895447632560167`*^9}, 
   3.689545169194901*^9, 3.6895464312343607`*^9, {3.689546484023093*^9, 
   3.689546559910474*^9}, 3.6895466031435747`*^9, {3.6895469073920603`*^9, 
   3.6895469585513573`*^9}, {3.689547020550891*^9, 3.6895471138768663`*^9}, 
   3.689547189260393*^9, {3.689547329221434*^9, 3.689547339012793*^9}, {
   3.68954739304668*^9, 3.689547407100292*^9}, 3.689547492651648*^9, 
   3.6895477245888443`*^9, 3.6895479057184277`*^9, 3.689548069368793*^9, 
   3.689548231833757*^9, {3.689548291672206*^9, 3.68954830910649*^9}, {
   3.6895484686248627`*^9, 3.689548493051921*^9}, 3.6895498855589447`*^9, {
   3.68954991948007*^9, 3.6895499423122377`*^9}, 3.68954997626657*^9, 
   3.689550058107773*^9, {3.689550153674375*^9, 3.689550176018314*^9}, 
   3.689550210205366*^9, 3.689550463884282*^9, 3.689551680284225*^9, 
   3.689551839799141*^9, 3.689551929837099*^9, 3.6895520252282953`*^9, 
   3.6895532889245453`*^9, 3.68955341499032*^9, 3.689553550961874*^9, 
   3.689553787791506*^9, 3.689553863712837*^9, 3.6895540350122023`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distribution", "=", 
  RowBox[{"EstimatedDistribution", "[", 
   RowBox[{"numbers", ",", 
    RowBox[{"GammaDistribution", "[", 
     RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6894457827041025`*^9, 3.689445792818949*^9}, {
   3.689521165826191*^9, 3.689521191540586*^9}, 3.689534459872918*^9, 
   3.689534702127749*^9}],

Cell[BoxData[
 RowBox[{"GammaDistribution", "[", 
  RowBox[{"7.8836810882811035`", ",", "1.6038008593136392`"}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.689534711471011*^9, {3.689534744750445*^9, 3.68953475876896*^9}, {
   3.689534814840917*^9, 3.689534847059107*^9}, 3.689535669970004*^9, 
   3.689537684272418*^9, {3.689537764014455*^9, 3.6895377842885303`*^9}, 
   3.689537823767667*^9, 3.689538228222048*^9, 3.689538303267561*^9, 
   3.6895384044760103`*^9, {3.689538479385046*^9, 3.6895385082976093`*^9}, 
   3.6895387377080297`*^9, 3.689538843901309*^9, 3.689539359764022*^9, 
   3.689539392519229*^9, 3.689539441041898*^9, 3.6895428649770107`*^9, 
   3.689542915445382*^9, 3.6895430298864202`*^9, 3.689543584293867*^9, {
   3.68954363321978*^9, 3.689543646075549*^9}, 3.689543851184183*^9, 
   3.6895441084490433`*^9, {3.689544147332181*^9, 3.689544171744953*^9}, {
   3.689544235898046*^9, 3.689544260903083*^9}, 3.6895442910766077`*^9, {
   3.689544329218642*^9, 3.6895443556150017`*^9}, {3.689544396425849*^9, 
   3.6895444097646427`*^9}, 3.689544594375486*^9, {3.689544727371376*^9, 
   3.6895447633443613`*^9}, 3.689545169275008*^9, 3.68954643140543*^9, {
   3.68954648419212*^9, 3.689546560087743*^9}, 3.6895466033125763`*^9, {
   3.689546907571699*^9, 3.689546958641048*^9}, {3.689547020686946*^9, 
   3.689547113929317*^9}, 3.689547189301752*^9, {3.689547329256991*^9, 
   3.689547339050404*^9}, {3.689547393079137*^9, 3.689547407152203*^9}, 
   3.689547492759046*^9, 3.689547724656715*^9, 3.689547905779249*^9, 
   3.689548069542083*^9, 3.689548231897747*^9, {3.689548291713051*^9, 
   3.6895483091969643`*^9}, {3.689548468658536*^9, 3.689548493090706*^9}, 
   3.6895498856068153`*^9, {3.68954991957514*^9, 3.689549942361581*^9}, 
   3.6895499763143044`*^9, 3.689550058151836*^9, {3.689550153761744*^9, 
   3.6895501760614643`*^9}, 3.68955021024749*^9, 3.689550464047388*^9, 
   3.689551680400002*^9, 3.689551839849285*^9, 3.689551929927849*^9, 
   3.689552025309349*^9, 3.689553289227675*^9, 3.6895534152065363`*^9, 
   3.689553551066927*^9, 3.6895537878453503`*^9, 3.689553863829055*^9, 
   3.689554035142044*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProbabilityPlot", "[", 
  RowBox[{"numbers", ",", " ", "distribution"}], "]"}]], "Input",
 CellChangeTimes->{{3.689521201612604*^9, 3.689521210932946*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0], 
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      PointBox[CompressedData["
1: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
iDSUXrdt7fI3jcaLNGzXCfAL0UuHHVfzgNNQZBuddXRMOo0faRjsseBT4OF0
/HijGWAa7p0OMtS6k07jSRpO+q9sGx+Wjmea0eWnofgnf2HGh3QaX9Kw41Hd
EOPsdNgwm2tJ93R06Wa3VEuUTuNNOq6fnHkxXp4OeYtmwulwaum2Ymb/DBp/
mL8/XDdym1kGHqSTA4y2vEvXwldk0HiUjg0P4xx7783AHM10WekYfN1K2O16
Bo1P6RjWy+O576cM8DXdGWagJLLI6Ep6Bo1XGaicXnDB7W8G7mjC0ZoMmKv8
PP8tyKTxKwOlVTvLFM6ZMCPpQwbYfiaTrh/MpPGM+fvAr0n9b2eiRhMO2Bkw
VIiqjUdl0fiWAZHrjmiBaRauaI6zUSb+O9aqN29rFo13mch49q7vZfcsjNcc
R8dM9NJed6RXaBaNf5n48G/Uz/fJWSgl6UUmev4YGXFRmkXjYSastAvCdmhn
46zmONRlQrfSVzljXjaNj5mYJ/J8HHMoGyM023lIFmbFTjgxOTmbxsssqLNv
KJqY9mfN9nPKwqQK92PN/GwaP7MQvkd0a7ZhDo5qHq9fFpp1KydOmptD42kW
nkT+/eVkm4NBmuXjZ8HdzskyYWsOja/ZWMQ6OUnXIBcZmuGNzMa20Jplf41y
abzNRp/7M+bmbMzF/t2aVzYca6JcZjvm0vibjb0LWW+PH85FbyZ5YiIsGj6U
2EXczaXxmLk/sMfh0aG5SPih2dDZWGecMnhbWC6Nzzl4PMXvrXFRLnbGazrM
wdkenDQHTi6N1zm4Pj2z7qc4F90uaQJUDnbYTT4/rjGXxu8cfLjl9s5pXB6i
F2kOSA72Rxk3DxyfR+N5Ds7remqPuJSHTZrsTp0DJ+dX297z8mh8z0XqnsiM
Wb/yoFPOHLepuYiedmFn2L88Gu9z0Xq6+7GrXfMRotnObrkYM+FY/FiTfBr/
czE5cEKf+xvysYbgMRcW6qy5S4LzKQ9ycV5lMv5iQT5aNI/jVy5wdriPLiuf
8iEPS7s/qDlQm48AzXRn5kHdl/2Bzc2nvMgDe9GCtNbGfNhpujuVhy9ndxbb
DP1M+ZGH470vxFuM/owfBA95OD39p8vkpZ8pT/IQbnm5+t6+z3imCe8teZh5
1VW7yesz5Us+vnf6Wj12QAFsNOHZKh9NsXVf/zMpoLzJh8MQ9wMhowog14TX
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
       
       "]]}, {}, {}}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{}, 
    StyleBox[
     LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
      0.9999999795918367, 0.9999999795918367}}], 
     Directive[
      RGBColor[0.368417, 0.506779, 0.709798], 
      AbsoluteThickness[1.6], 
      Dashing[{0, Small}]], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.68953444450408*^9, 3.689534465322541*^9}, 
   3.689534596524308*^9, {3.6895346564240313`*^9, 3.689534711646373*^9}, {
   3.689534745194306*^9, 3.689534759204048*^9}, {3.689534815108943*^9, 
   3.689534847458797*^9}, 3.6895356701818037`*^9, 3.6895376844049263`*^9, {
   3.689537764144908*^9, 3.68953778441055*^9}, 3.6895378238901377`*^9, 
   3.689538228343923*^9, 3.68953830338907*^9, 3.689538404597847*^9, {
   3.6895384795007353`*^9, 3.689538508666958*^9}, 3.689538737836672*^9, 
   3.6895388440829773`*^9, 3.689539359907892*^9, 3.689539392766872*^9, 
   3.689539441177795*^9, 3.689542865104023*^9, 3.6895429156191874`*^9, 
   3.68954303000653*^9, 3.689543584416645*^9, {3.689543633387108*^9, 
   3.689543646252157*^9}, 3.689543851356389*^9, 3.6895441086338577`*^9, {
   3.689544147452384*^9, 3.689544171922757*^9}, {3.689544236023426*^9, 
   3.689544261017956*^9}, 3.689544291197506*^9, {3.6895443293855247`*^9, 
   3.6895443558150063`*^9}, {3.6895443965910378`*^9, 3.6895444099079027`*^9}, 
   3.689544594498097*^9, {3.6895447275123796`*^9, 3.689544763484271*^9}, 
   3.6895451693991737`*^9, 3.689546431581023*^9, {3.689546484372596*^9, 
   3.689546560261937*^9}, 3.6895466035491667`*^9, {3.6895469078289223`*^9, 
   3.689546958835753*^9}, {3.689547020881212*^9, 3.689547114083824*^9}, 
   3.68954718942733*^9, {3.689547329393697*^9, 3.6895473392130547`*^9}, {
   3.689547393184917*^9, 3.689547407290513*^9}, 3.6895474929184504`*^9, 
   3.689547724786868*^9, 3.6895479059133883`*^9, 3.689548069725429*^9, 
   3.689548232045833*^9, {3.6895482918412046`*^9, 3.689548309326187*^9}, {
   3.689548468789475*^9, 3.689548493220235*^9}, 3.689549885756509*^9, {
   3.689549919705326*^9, 3.689549942551358*^9}, 3.6895499764472427`*^9, 
   3.689550058289464*^9, {3.6895501539210873`*^9, 3.68955017620573*^9}, 
   3.689550210385879*^9, 3.6895504642190647`*^9, 3.689551680536237*^9, 
   3.6895518400229053`*^9, 3.689551930082288*^9, 3.689552025465707*^9, 
   3.689553289418169*^9, 3.689553415580494*^9, 3.689553551279628*^9, 
   3.6895537880093822`*^9, 3.689553864025196*^9, 3.689554035319633*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution 4", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533908027934*^9, 3.689533908067677*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6895193547359962`*^9, 3.689519384748164*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", "=", " ", "1000"}], ";"}]], "Input",
 CellChangeTimes->{{3.689534752791752*^9, 3.689534753015232*^9}, 
   3.689553614487878*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"numbers", " ", "=", " ", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"4", ",", " ", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindDistribution", "[", "numbers", "]"}]}], "Input",
 CellChangeTimes->{{3.689518850334487*^9, 3.6895188853998528`*^9}, {
  3.689518964750946*^9, 3.689518965039699*^9}, {3.689519431451927*^9, 
  3.689519431508032*^9}, {3.689520211943659*^9, 3.689520211999201*^9}, {
  3.689521260953339*^9, 3.689521261000741*^9}}],

Cell[BoxData[
 RowBox[{"NormalDistribution", "[", 
  RowBox[{"2.904544796747256`", ",", "5.085356366453393`"}], "]"}]], "Output",\

 CellChangeTimes->{
  3.689534597069957*^9, {3.6895346570080442`*^9, 3.689534712267983*^9}, {
   3.689534745845541*^9, 3.689534759949996*^9}, {3.689534815561721*^9, 
   3.6895348483369207`*^9}, 3.689535670690798*^9, 3.689537685168766*^9, {
   3.689537765274744*^9, 3.6895377856817408`*^9}, 3.689537824518965*^9, 
   3.6895382287079163`*^9, 3.689538303903864*^9, 3.689538405179137*^9, {
   3.6895384803971252`*^9, 3.689538509391769*^9}, 3.689538738185233*^9, 
   3.6895388446647463`*^9, 3.6895393603062677`*^9, 3.6895393937920437`*^9, 
   3.6895394416058273`*^9, 3.68954286564505*^9, 3.6895429167928963`*^9, 
   3.6895430307193737`*^9, 3.6895435849629087`*^9, {3.6895436339579973`*^9, 
   3.689543647012188*^9}, 3.6895438518482313`*^9, 3.6895441094687967`*^9, {
   3.6895441485640593`*^9, 3.689544172258814*^9}, {3.6895442364590673`*^9, 
   3.689544261475285*^9}, 3.689544291882872*^9, {3.689544329992324*^9, 
   3.689544356248098*^9}, {3.689544397665283*^9, 3.689544410304448*^9}, 
   3.689544595243319*^9, {3.68954472813696*^9, 3.68954476383187*^9}, 
   3.689545170098588*^9, 3.6895464323493013`*^9, {3.689546485199449*^9, 
   3.689546560721558*^9}, 3.689546603984144*^9, {3.689546908429324*^9, 
   3.689546959495688*^9}, {3.689547021661849*^9, 3.689547114477304*^9}, 
   3.689547190042831*^9, {3.689547329804161*^9, 3.689547339885006*^9}, {
   3.68954739368417*^9, 3.68954740800998*^9}, 3.68954749324718*^9, 
   3.6895477252734203`*^9, 3.689547906229653*^9, 3.689548070502413*^9, 
   3.6895482329107513`*^9, {3.689548292164907*^9, 3.6895483105049562`*^9}, {
   3.689548469175844*^9, 3.68954849383648*^9}, 3.689549886333091*^9, {
   3.689549920023944*^9, 3.6895499429502497`*^9}, 3.689549976783071*^9, 
   3.68955005877941*^9, {3.689550154315872*^9, 3.68955017702483*^9}, 
   3.689550210743924*^9, 3.689550464635682*^9, 3.689551681242832*^9, 
   3.689551840401185*^9, 3.689551930834219*^9, 3.689552025808943*^9, 
   3.689553289891301*^9, 3.689553416233512*^9, 3.689553552077457*^9, 
   3.689553788740999*^9, 3.689553864629365*^9, 3.689554035965775*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distribution", "=", 
  RowBox[{"EstimatedDistribution", "[", 
   RowBox[{"numbers", ",", " ", 
    RowBox[{"NormalDistribution", "[", 
     RowBox[{"\[Mu]", ",", "\[Sigma]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6895213330182333`*^9, 3.689521352880495*^9}}],

Cell[BoxData[
 RowBox[{"NormalDistribution", "[", 
  RowBox[{"2.904544796747256`", ",", "5.085356366453394`"}], "]"}]], "Output",\

 CellChangeTimes->{
  3.689534597160275*^9, {3.68953465711493*^9, 3.689534712425088*^9}, {
   3.689534746014035*^9, 3.689534760063904*^9}, {3.689534815653738*^9, 
   3.689534848460558*^9}, 3.6895356707813377`*^9, 3.689537685209765*^9, {
   3.689537765330635*^9, 3.689537785788186*^9}, 3.6895378245935698`*^9, 
   3.689538228796575*^9, 3.689538303956729*^9, 3.6895384052531137`*^9, {
   3.6895384805203648`*^9, 3.6895385094648438`*^9}, 3.689538738259465*^9, 
   3.689538844705562*^9, 3.6895393605876637`*^9, 3.689539393838455*^9, 
   3.689539441670475*^9, 3.689542865679397*^9, 3.689542916962096*^9, 
   3.68954303076322*^9, 3.689543584996457*^9, {3.689543634039853*^9, 
   3.689543647098214*^9}, 3.6895438519308434`*^9, 3.689544109601993*^9, {
   3.689544148655931*^9, 3.6895441722912893`*^9}, {3.689544236544367*^9, 
   3.6895442615098953`*^9}, 3.689544291910788*^9, {3.6895443300325623`*^9, 
   3.689544356282897*^9}, {3.689544397735579*^9, 3.68954441034056*^9}, 
   3.689544595277399*^9, {3.689544728175688*^9, 3.689544763868034*^9}, 
   3.689545170137452*^9, 3.689546432460744*^9, {3.689546485363359*^9, 
   3.689546560815658*^9}, 3.6895466040741167`*^9, {3.689546908586054*^9, 
   3.6895469595889893`*^9}, {3.689547021797414*^9, 3.68954711451438*^9}, 
   3.689547190083847*^9, {3.689547329843836*^9, 3.689547339922027*^9}, {
   3.68954739371548*^9, 3.689547408047276*^9}, 3.6895474932921133`*^9, 
   3.689547725306225*^9, 3.68954790626513*^9, 3.6895480706608477`*^9, 
   3.689548232972479*^9, {3.689548292249681*^9, 3.689548310564488*^9}, {
   3.689548469232225*^9, 3.6895484939217587`*^9}, 3.68954988639559*^9, {
   3.689549920074019*^9, 3.689549942986932*^9}, 3.689549976853138*^9, 
   3.689550058847535*^9, {3.689550154357353*^9, 3.6895501771059713`*^9}, 
   3.6895502107790747`*^9, 3.689550464696553*^9, 3.689551681290298*^9, 
   3.689551840447371*^9, 3.689551930872018*^9, 3.6895520258535833`*^9, 
   3.689553289994771*^9, 3.689553416446383*^9, 3.689553552170718*^9, 
   3.689553788833343*^9, 3.689553864789798*^9, 3.689554036148262*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProbabilityPlot", "[", 
  RowBox[{"numbers", ",", " ", "distribution"}], "]"}]], "Input",
 CellChangeTimes->{{3.689521357271723*^9, 3.6895213655975*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0], 
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.0055000000000000005`], AbsoluteThickness[1.6], 
      PointBox[CompressedData["
1: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
2waWjfKvFpMJz7WYdTxvpVuLlvrnn/E/EYnZVQ==
       
       "]]}, {}, {}}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{}, 
    StyleBox[
     LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
      0.9999999795918367, 0.9999999795918367}}], 
     Directive[
      RGBColor[0.368417, 0.506779, 0.709798], 
      AbsoluteThickness[1.6], 
      Dashing[{0, Small}]], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->{442., Automatic},
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.689534597325185*^9, {3.689534657286951*^9, 3.689534712578033*^9}, {
   3.689534746179221*^9, 3.6895347602201138`*^9}, {3.689534815848744*^9, 
   3.689534848634171*^9}, 3.689535670984376*^9, 3.689537685311235*^9, {
   3.689537765422201*^9, 3.6895377858758183`*^9}, 3.689537824675428*^9, 
   3.689538228892953*^9, 3.689538304060206*^9, 3.68953840537967*^9, {
   3.68953848073884*^9, 3.6895385095698757`*^9}, 3.689538738355661*^9, 
   3.689538844808022*^9, 3.6895393607029448`*^9, 3.68953939394532*^9, 
   3.6895394417743683`*^9, 3.6895428657727757`*^9, 3.68954291710857*^9, 
   3.689543030867155*^9, 3.689543585096039*^9, {3.689543634174103*^9, 
   3.689543647283317*^9}, 3.6895438520184917`*^9, 3.689544109698008*^9, {
   3.6895441487448397`*^9, 3.689544172379233*^9}, {3.6895442366328278`*^9, 
   3.6895442616017513`*^9}, 3.689544291998733*^9, {3.689544330120461*^9, 
   3.689544356369351*^9}, {3.689544397857148*^9, 3.689544410460438*^9}, 
   3.689544595367689*^9, {3.689544728335722*^9, 3.689544763959929*^9}, 
   3.689545170225299*^9, 3.689546432650443*^9, {3.68954648550872*^9, 
   3.689546560964158*^9}, 3.689546604216631*^9, {3.689546908731718*^9, 
   3.689546959786942*^9}, {3.689547021913437*^9, 3.6895471146060123`*^9}, 
   3.689547190195829*^9, {3.6895473299486113`*^9, 3.689547340024995*^9}, {
   3.6895473938102617`*^9, 3.6895474081488113`*^9}, 3.6895474934069777`*^9, 
   3.689547725401813*^9, 3.6895479063563557`*^9, 3.6895480708035927`*^9, 
   3.689548233066062*^9, {3.6895482923880787`*^9, 3.689548310663698*^9}, {
   3.689548469326087*^9, 3.689548494019877*^9}, 3.689549886492839*^9, {
   3.689549920174336*^9, 3.6895499430829487`*^9}, 3.6895499769710073`*^9, 
   3.689550058942586*^9, {3.689550154459607*^9, 3.689550177261808*^9}, 
   3.6895502108747168`*^9, 3.6895504648567667`*^9, 3.68955168142629*^9, 
   3.689551840554832*^9, 3.689551931051453*^9, 3.6895520259479103`*^9, 
   3.689553290613079*^9, 3.6895534168511877`*^9, 3.689553552378725*^9, 
   3.689553789012946*^9, 3.689553865019944*^9, 3.6895540363132963`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution 5", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533910635722*^9, 3.6895339213557587`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", "=", " ", "1000"}], ";"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"numbers", " ", "=", " ", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"5", ",", " ", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindDistribution", "[", "numbers", "]"}]}], "Input",
 CellChangeTimes->{{3.689518850334487*^9, 3.6895188853998528`*^9}, {
  3.689518964750946*^9, 3.689518965039699*^9}, {3.689519431451927*^9, 
  3.689519431508032*^9}, {3.689520211943659*^9, 3.689520211999201*^9}, {
  3.689521260953339*^9, 3.689521261000741*^9}, {3.689521402592505*^9, 
  3.689521402640362*^9}}],

Cell[BoxData[
 RowBox[{"BinomialDistribution", "[", 
  RowBox[{"10", ",", "0.33741721854304635`"}], "]"}]], "Output",
 CellChangeTimes->{{3.689534657557785*^9, 3.689534712712695*^9}, {
   3.6895347463796*^9, 3.689534760465695*^9}, {3.689534816190724*^9, 
   3.689534849096017*^9}, 3.68953567121524*^9, 3.6895376862724867`*^9, {
   3.6895377656300917`*^9, 3.68953778604103*^9}, 3.6895378248516273`*^9, 
   3.6895382290473967`*^9, 3.68953830423503*^9, 3.689538405582655*^9, {
   3.6895384808880463`*^9, 3.689538509734865*^9}, 3.6895387385231047`*^9, 
   3.6895388449735622`*^9, 3.689539360880528*^9, 3.689539394140308*^9, 
   3.689539441939115*^9, 3.6895428659030037`*^9, 3.68954291735531*^9, 
   3.689543031033072*^9, 3.689543585227612*^9, {3.689543634517618*^9, 
   3.689543647423025*^9}, 3.68954385236751*^9, 3.689544109866693*^9, {
   3.689544148876684*^9, 3.6895441731554956`*^9}, {3.689544236773436*^9, 
   3.6895442617405167`*^9}, 3.6895442921646633`*^9, {3.689544330263196*^9, 
   3.689544356509254*^9}, {3.689544398046606*^9, 3.689544410611456*^9}, 
   3.6895445955251417`*^9, {3.689544728463265*^9, 3.689544764087595*^9}, 
   3.689545170902575*^9, 3.689546432880554*^9, {3.689546485722061*^9, 
   3.689546561307372*^9}, 3.689546604558346*^9, {3.689546908963457*^9, 
   3.689546960022677*^9}, {3.689547022048675*^9, 3.689547114735991*^9}, 
   3.6895471903325233`*^9, {3.689547330086076*^9, 3.68954734016012*^9}, {
   3.6895473939422293`*^9, 3.6895474083382072`*^9}, 3.6895474935456657`*^9, 
   3.689547725535953*^9, 3.689547906488299*^9, 3.689548071648406*^9, 
   3.689548233204505*^9, {3.689548292528428*^9, 3.689548310799334*^9}, {
   3.689548469464162*^9, 3.6895484941876698`*^9}, 3.689549886641316*^9, {
   3.689549920316586*^9, 3.689549943236309*^9}, 3.689549977145055*^9, 
   3.689550059095923*^9, {3.689550154595811*^9, 3.689550177456209*^9}, 
   3.689550211008716*^9, 3.689550465050178*^9, 3.689551681597866*^9, 
   3.6895518407223*^9, 3.689551931241481*^9, 3.6895520262871943`*^9, 
   3.68955329091294*^9, 3.6895534171645927`*^9, 3.6895535526563663`*^9, 
   3.689553789187107*^9, 3.689553865263557*^9, 3.689554036563772*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distribution", " ", "=", " ", 
  RowBox[{"EstimatedDistribution", "[", 
   RowBox[{"numbers", ",", " ", 
    RowBox[{"BinomialDistribution", "[", 
     RowBox[{"num", ",", " ", "p"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6895214144880867`*^9, 3.689521416244576*^9}, {
  3.689521544232088*^9, 3.6895215659478416`*^9}, {3.689534675072062*^9, 
  3.689534675863736*^9}}],

Cell[BoxData[
 RowBox[{"BinomialDistribution", "[", 
  RowBox[{"10", ",", "0.3289`"}], "]"}]], "Output",
 CellChangeTimes->{{3.689534657666144*^9, 3.6895347128155537`*^9}, {
   3.68953474648779*^9, 3.689534760580184*^9}, {3.6895348162857313`*^9, 
   3.6895348492001553`*^9}, 3.689535671319265*^9, 3.6895376863572073`*^9, {
   3.68953776569858*^9, 3.689537786091691*^9}, 3.689537824903923*^9, 
   3.6895382291034184`*^9, 3.689538304327793*^9, 3.689538405649189*^9, {
   3.689538480938829*^9, 3.689538509793839*^9}, 3.689538738570217*^9, 
   3.689538845051416*^9, 3.689539360936028*^9, 3.689539394197608*^9, 
   3.689539441991764*^9, 3.689542865949089*^9, 3.689542917449471*^9, 
   3.689543031093508*^9, 3.6895435852779493`*^9, {3.6895436345658283`*^9, 
   3.689543647657599*^9}, 3.689543852416334*^9, 3.689544109925465*^9, {
   3.689544148936159*^9, 3.689544173231769*^9}, {3.689544236822668*^9, 
   3.689544261792248*^9}, 3.689544292215252*^9, {3.689544330311584*^9, 
   3.689544356560379*^9}, {3.68954439811309*^9, 3.689544410670805*^9}, 
   3.689544595581237*^9, {3.6895447285132923`*^9, 3.689544764136643*^9}, 
   3.689545170957547*^9, 3.6895464329885387`*^9, {3.689546485773106*^9, 
   3.689546561367152*^9}, 3.689546604619198*^9, {3.689546909062557*^9, 
   3.6895469602062473`*^9}, {3.689547022108618*^9, 3.689547114790781*^9}, 
   3.689547190387568*^9, {3.689547330139771*^9, 3.6895473403516417`*^9}, {
   3.689547394001711*^9, 3.689547408393002*^9}, 3.689547493615313*^9, 
   3.689547725647255*^9, 3.689547906532159*^9, 3.68954807188551*^9, 
   3.68954823326215*^9, {3.689548292593305*^9, 3.689548310858683*^9}, {
   3.6895484695153418`*^9, 3.689548494242815*^9}, 3.6895498867096148`*^9, {
   3.689549920378997*^9, 3.68954994329943*^9}, 3.689549977210825*^9, 
   3.689550059157617*^9, {3.689550154669859*^9, 3.68955017752885*^9}, 
   3.689550211060213*^9, 3.689550465194002*^9, 3.6895516816704807`*^9, 
   3.689551840790764*^9, 3.689551931306562*^9, 3.689552026506919*^9, 
   3.6895532910672913`*^9, 3.689553417551909*^9, 3.689553552811088*^9, 
   3.689553789343411*^9, 3.689553865386888*^9, 3.689554036679689*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProbabilityPlot", "[", 
  RowBox[{"numbers", ",", " ", "distribution"}], "]"}]], "Input",
 CellChangeTimes->{{3.689521570563677*^9, 3.689521584139305*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0], 
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], 
      PointBox[{{0.018529870670417035`, 0.012}, {0.1093430797823252, 0.116}, {
       0.3096233511965404, 0.314}, {0.5713714514027108, 0.573}, {
       0.7958620828677182, 0.7819999999999999}, {0.9278870604069955, 
       0.9309999999999999}, {0.9818072599707321, 0.985}, {0.9969077164805246, 
       0.998}, {0.999682940075781, 1.}}]}, {}, {}}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{}, 
    StyleBox[
     LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
      0.9999999795918367, 0.9999999795918367}}], 
     Directive[
      RGBColor[0.368417, 0.506779, 0.709798], 
      AbsoluteThickness[1.6], 
      Dashing[{0, Small}]], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.68953474665606*^9, 3.6895347607470217`*^9}, {
   3.689534816441122*^9, 3.68953484976656*^9}, 3.6895356714712687`*^9, 
   3.6895376864662027`*^9, {3.689537765833898*^9, 3.689537786217157*^9}, 
   3.689537825015236*^9, 3.689538229203247*^9, 3.6895383044250937`*^9, 
   3.6895384057689867`*^9, {3.689538481092243*^9, 3.689538509904228*^9}, 
   3.6895387387003527`*^9, 3.689538845192614*^9, 3.689539361258668*^9, 
   3.68953939431505*^9, 3.689539442106567*^9, 3.689542866048912*^9, 
   3.689542917645001*^9, 3.689543031194498*^9, 3.6895435853814077`*^9, {
   3.689543634728219*^9, 3.689543647756818*^9}, 3.689543852562372*^9, 
   3.689544110094487*^9, {3.6895441490340033`*^9, 3.6895441733492804`*^9}, {
   3.689544236972135*^9, 3.689544261885274*^9}, 3.689544292312667*^9, {
   3.689544330507128*^9, 3.689544356751738*^9}, {3.6895443982367277`*^9, 
   3.6895444107941113`*^9}, 3.689544595678463*^9, {3.689544728662527*^9, 
   3.689544764238871*^9}, 3.689545171063938*^9, 3.689546433139143*^9, {
   3.689546485935089*^9, 3.689546561522229*^9}, 3.689546604768674*^9, {
   3.6895469092146177`*^9, 3.689546960357471*^9}, {3.689547022299986*^9, 
   3.689547115028283*^9}, 3.689547190499291*^9, {3.689547330246949*^9, 
   3.689547340471442*^9}, {3.689547394101478*^9, 3.68954740850642*^9}, 
   3.689547493738002*^9, 3.689547725805955*^9, 3.689547906634595*^9, 
   3.689548072038453*^9, 3.689548233363462*^9, {3.689548292707355*^9, 
   3.6895483109631023`*^9}, {3.6895484696170187`*^9, 3.689548494347644*^9}, 
   3.689549886833123*^9, {3.6895499204897337`*^9, 3.689549943425926*^9}, 
   3.68954997735203*^9, 3.6895500594374638`*^9, {3.689550154792679*^9, 
   3.689550177685766*^9}, 3.689550211173791*^9, 3.689550465320195*^9, 
   3.689551681787085*^9, 3.689551840895565*^9, 3.689551931450165*^9, 
   3.689552026635648*^9, 3.689553291858151*^9, 3.68955341793434*^9, 
   3.6895535529969473`*^9, 3.689553789498373*^9, 3.689553865591202*^9, 
   3.6895540368417997`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution 6", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533910635722*^9, 3.6895339327476263`*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.6895193547359962`*^9, 3.689519384748164*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"n", " ", "=", " ", "1000"}], ";"}]], "Input",
 CellChangeTimes->{3.689534823038959*^9, 3.689553625847768*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"numbers", " ", "=", " ", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"6", ",", " ", "n"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"FindDistribution", "[", "numbers", "]"}]}], "Input",
 CellChangeTimes->{{3.689518850334487*^9, 3.6895188853998528`*^9}, {
  3.689518964750946*^9, 3.689518965039699*^9}, {3.689519431451927*^9, 
  3.689519431508032*^9}, {3.689520211943659*^9, 3.689520211999201*^9}, {
  3.689521260953339*^9, 3.689521261000741*^9}, {3.689521715216063*^9, 
  3.689521715295082*^9}}],

Cell[BoxData[
 RowBox[{"PoissonDistribution", "[", "9.743`", "]"}]], "Output",
 CellChangeTimes->{{3.68953481800159*^9, 3.6895348515831003`*^9}, 
   3.689535673880952*^9, 3.689537686973453*^9, {3.689537767321225*^9, 
   3.689537787618403*^9}, 3.689537825456216*^9, 3.68953822967622*^9, 
   3.6895383051334133`*^9, 3.689538407403947*^9, {3.689538481789956*^9, 
   3.689538510467657*^9}, 3.689538739963182*^9, 3.6895388456176853`*^9, 
   3.689539361887919*^9, 3.689539396215872*^9, 3.689539443585421*^9, 
   3.689542866488332*^9, 3.689542919199156*^9, 3.689543032832265*^9, 
   3.689543586527656*^9, {3.6895436353378677`*^9, 3.689543649452526*^9}, 
   3.689543854313629*^9, 3.689544111327628*^9, {3.689544150383402*^9, 
   3.689544173878622*^9}, {3.6895442385949507`*^9, 3.689544263431076*^9}, 
   3.689544293640771*^9, {3.6895443316683273`*^9, 3.689544358703576*^9}, {
   3.689544399672336*^9, 3.689544412323595*^9}, 3.689544597038125*^9, {
   3.68954472987073*^9, 3.6895447655932493`*^9}, 3.689545172460516*^9, 
   3.689546434377842*^9, {3.689546487314843*^9, 3.689546562857975*^9}, 
   3.689546606689108*^9, {3.689546910900647*^9, 3.689546960941153*^9}, {
   3.689547023432486*^9, 3.689547115426642*^9}, 3.6895471920244827`*^9, {
   3.689547331635459*^9, 3.689547341628594*^9}, {3.6895473956733847`*^9, 
   3.689547409878108*^9}, 3.6895474949653683`*^9, 3.689547726748086*^9, 
   3.6895479078986473`*^9, 3.6895480740567713`*^9, 3.689548235235634*^9, {
   3.689548293998938*^9, 3.6895483121074753`*^9}, {3.689548470825965*^9, 
   3.689548495826572*^9}, 3.68954988732139*^9, {3.689549922211832*^9, 
   3.689549943901022*^9}, 3.6895499787833757`*^9, 3.6895500608656797`*^9, {
   3.689550156189492*^9, 3.689550178862391*^9}, 3.689550212701524*^9, 
   3.689550466630472*^9, 3.689551682465755*^9, 3.689551841425993*^9, 
   3.6895519319406233`*^9, 3.689552027951733*^9, 3.689553293437076*^9, 
   3.689553420198739*^9, 3.689553554311264*^9, 3.6895537925670424`*^9, 
   3.689553866618528*^9, 3.689554039018648*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"distribution", " ", "=", " ", 
  RowBox[{"EstimatedDistribution", "[", 
   RowBox[{"numbers", ",", " ", 
    RowBox[{"PoissonDistribution", "[", "\[Mu]", "]"}]}], "]"}], 
  " "}]], "Input",
 CellChangeTimes->{{3.689521636689365*^9, 3.689521651679364*^9}, {
   3.6895216898633947`*^9, 3.6895217240548363`*^9}, 3.68953484071087*^9, 
   3.689536808722978*^9}],

Cell[BoxData[
 RowBox[{"PoissonDistribution", "[", "9.743`", "]"}]], "Output",
 CellChangeTimes->{
  3.689534851848463*^9, 3.689535674164373*^9, 3.689537687011857*^9, {
   3.689537767390489*^9, 3.689537787674781*^9}, 3.6895378254926767`*^9, 
   3.689538229715208*^9, 3.689538305354002*^9, 3.6895384074643393`*^9, {
   3.6895384818506117`*^9, 3.689538510581874*^9}, 3.6895387400299873`*^9, 
   3.689538845649823*^9, 3.689539361931225*^9, 3.68953939626096*^9, 
   3.689539443850842*^9, 3.689542866557749*^9, 3.689542919364698*^9, 
   3.689543032906507*^9, 3.6895435865818996`*^9, {3.6895436354993896`*^9, 
   3.6895436496310673`*^9}, 3.689543854487966*^9, 3.6895441113888817`*^9, {
   3.689544150501746*^9, 3.689544173924878*^9}, {3.689544238653618*^9, 
   3.689544263495338*^9}, 3.689544293697946*^9, {3.689544331734909*^9, 
   3.689544358835607*^9}, {3.689544399739649*^9, 3.689544412435484*^9}, 
   3.689544597096765*^9, {3.689544729952095*^9, 3.68954476565484*^9}, 
   3.689545172646069*^9, 3.689546434605006*^9, {3.689546487448615*^9, 
   3.689546563795923*^9}, 3.689546606854897*^9, {3.6895469110661373`*^9, 
   3.689546961037633*^9}, {3.6895470235076227`*^9, 3.689547115474522*^9}, 
   3.689547192084632*^9, {3.6895473316970797`*^9, 3.689547341712597*^9}, {
   3.689547395723688*^9, 3.689547409960627*^9}, 3.689547495034939*^9, 
   3.689547726822448*^9, 3.689547907952607*^9, 3.6895480742367077`*^9, 
   3.689548235293508*^9, {3.689548294059669*^9, 3.6895483121663637`*^9}, {
   3.6895484708816433`*^9, 3.689548495893587*^9}, 3.68954988736703*^9, {
   3.689549922293922*^9, 3.6895499439931507`*^9}, 3.689549978930379*^9, 
   3.6895500609523687`*^9, {3.689550156266992*^9, 3.6895501789301567`*^9}, 
   3.68955021276795*^9, 3.6895504667451153`*^9, 3.6895516825900307`*^9, 
   3.689551841462916*^9, 3.689551932071257*^9, 3.689552028026733*^9, 
   3.689553293566695*^9, 3.6895534202967863`*^9, 3.6895535544563932`*^9, 
   3.6895537926931267`*^9, 3.6895538668884487`*^9, 3.689554039166696*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ProbabilityPlot", "[", 
  RowBox[{"numbers", ",", " ", "distribution"}], "]"}]], "Input",
 CellChangeTimes->{{3.689521726984947*^9, 3.689521740463024*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{{}, {}, {}, 
     {Hue[0.9060679774997897, 0.6, 0.6], Opacity[0], 
      LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
       0.9999999795918367, 0.9999999795918367}}]}}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.012833333333333334`], AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAQAWIQveHxqpTIVS72f1Z+vOSblGA/+X5DzNW/2fbVIuvc
H1aV2E9dlPdpfXun/Q651teBO/rsmV22R9xZtdBeu13s5rnvi+3DFQMWyF/Z
bC+lf1eFrXGrfcD+tlXR1w/ZV4H1H7GPSLH4r+ly3j7ccsuJsn3n7e2OqlX/
M7puH9N/6KtGzHX7vA03xM8n37ff5cnDpN1+z35CzBztuPWP7YGGBz9e+th+
foacuLTFc3uQrNjNZ/b/ej5UrRV7ZZ8n1Hzg1MKX9pZuJ5jNbN/Y/71S8VLN
8I39qe2LjoXveWsvBjbgrT1rvoGa8dZ39r3TQTre2Yf/Mfi6x+e9fadjwtML
Su/tH/IciZ+2+L09yLUi697bT5vGcWXGpff21xcX2HJdf2//cqvNj82v3kP9
+97+d/cB26Jv7+0ZwOCDPQDm3aUg
       "]]}, {}, {}}}, {}, {}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Epilog->{{}, 
    StyleBox[
     LineBox[{{2.040816326530612*^-8, 2.040816326530612*^-8}, {
      0.9999999795918367, 0.9999999795918367}}], 
     Directive[
      RGBColor[0.368417, 0.506779, 0.709798], 
      AbsoluteThickness[1.6], 
      Dashing[{0, Small}]], StripOnInput -> False]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Part[{{Identity, Identity}, {Identity, Identity}}, 1, 2][#]& )[
         Part[#, 1]], 
        (Part[{{Identity, Identity}, {Identity, Identity}}, 2, 2][#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 1}, {0, 1}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.689534818434407*^9, 3.68953485206444*^9}, 
   3.689535674348456*^9, 3.689537687109518*^9, {3.68953776750394*^9, 
   3.689537787777752*^9}, 3.689537825588957*^9, 3.6895382298136044`*^9, 
   3.689538305519206*^9, 3.6895384075558453`*^9, {3.6895384819500847`*^9, 
   3.6895385108361797`*^9}, 3.689538740120246*^9, 3.689538845747972*^9, 
   3.689539362237821*^9, 3.689539396344946*^9, 3.6895394441592817`*^9, 
   3.689542866645183*^9, 3.689542919523674*^9, 3.6895430330822897`*^9, 
   3.68954358667167*^9, {3.689543635634581*^9, 3.689543649765337*^9}, 
   3.6895438546457977`*^9, 3.689544111474456*^9, {3.689544150592312*^9, 
   3.689544174015645*^9}, {3.689544238752192*^9, 3.689544263596322*^9}, 
   3.6895442937879*^9, {3.6895443318764887`*^9, 3.6895443589504557`*^9}, {
   3.689544399861191*^9, 3.689544412633849*^9}, 3.689544597189128*^9, {
   3.689544730040544*^9, 3.689544765751717*^9}, 3.6895451729705276`*^9, 
   3.689546435385961*^9, {3.689546487604495*^9, 3.6895465640404787`*^9}, 
   3.6895466070020113`*^9, {3.6895469112205553`*^9, 3.689546961298925*^9}, {
   3.689547023621586*^9, 3.689547115581025*^9}, 3.6895471921913443`*^9, {
   3.689547331805689*^9, 3.6895473418110037`*^9}, {3.689547395815445*^9, 
   3.689547410209268*^9}, 3.689547495142658*^9, 3.689547726918688*^9, 
   3.689547908045815*^9, 3.689548074388476*^9, 3.689548235389715*^9, {
   3.6895482941614933`*^9, 3.689548312266033*^9}, {3.689548470976633*^9, 
   3.6895484959917183`*^9}, 3.689549887527831*^9, {3.689549922403631*^9, 
   3.689549944178541*^9}, 3.689549979060069*^9, 3.689550061057317*^9, {
   3.6895501563653717`*^9, 3.689550179042778*^9}, 3.689550212867641*^9, 
   3.6895504668814077`*^9, 3.689551682718761*^9, 3.6895518415662107`*^9, 
   3.6895519321751757`*^9, 3.689552028129499*^9, 3.689553294085147*^9, 
   3.689553420451621*^9, 3.689553554616683*^9, 3.689553792856889*^9, 
   3.689553867655209*^9, 3.689554039337171*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 
 CounterBox["Section"],
 ".",
 
 CounterBox["Subsection"],
 " Confidence intervals for parameters"
}], "Subsection",
 CellChangeTimes->{{3.68833807029881*^9, 3.688338079218799*^9}, {
  3.6883445611314297`*^9, 3.688344568635379*^9}, {3.689530863222073*^9, 
  3.689530887894001*^9}, {3.689551314709722*^9, 3.689551319109326*^9}}],

Cell[CellGroupData[{

Cell["Solution", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, 
   3.688339206676055*^9}],

Cell[TextData[{
 "To find the confidence interval for the parameters we first create a large \
matrix of 100 lists, consisting of 1000 elements. Each of those lists are \
entered into ",
 StyleBox["EstimatedDistribution ",
  FontWeight->"Bold"],
 "to let Mathematica calculate a list of estimated parameters. Entering those \
into into ",
 StyleBox["MeanCI",
  FontWeight->"Bold"],
 " gives us the interval."
}], "Text",
 CellChangeTimes->{{3.689551422356551*^9, 3.689551612723431*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Code", "Subsubsection",
 CellChangeTimes->{{3.688339085739612*^9, 3.688339097410466*^9}, {
  3.688339162508295*^9, 3.688339166187951*^9}, {3.6883424648359222`*^9, 
  3.6883424653138523`*^9}}],

Cell[CellGroupData[{

Cell["Distribution 1 (Exponential distribution)", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533910635722*^9, 3.6895339327476263`*^9}, {3.6895374845826197`*^9, 
  3.6895374846622334`*^9}, {3.689537937020055*^9, 3.68953794256383*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{3.689537584453005*^9}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<HypothesisTesting`\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"amountOfLists", "=", "100"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"listLength", "=", "1000"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrixOfRands", "=", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"amountOfLists", ",", "listLength"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6895368768343763`*^9, 3.689536945129941*^9}, {
  3.689537603813986*^9, 3.6895376038858967`*^9}, {3.6895377576623287`*^9, 
  3.689537759957205*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"find\[Lambda]", "[", "data_", "]"}], ":=", 
   RowBox[{"List", "@@", 
    RowBox[{"EstimatedDistribution", "[", 
     RowBox[{"data", ",", 
      RowBox[{"ExponentialDistribution", "[", "\[Lambda]", "]"}]}], "]"}]}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.689537626293838*^9, 3.689537630205764*^9}, 
   3.6895376749815607`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", "\[Lambda]list", "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"find\[Lambda]", "/@", "matrixOfRands"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.689522088508964*^9, 3.689522091045245*^9}, {
  3.689525525767474*^9, 3.689525533055564*^9}, {3.689537638205762*^9, 
  3.689537655837504*^9}, {3.689537793637046*^9, 3.689537798914296*^9}, {
  3.6895384656649017`*^9, 3.689538471072948*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"conf\[Lambda]Low", ",", " ", "conf\[Lambda]High"}], "}"}], "=", 
  RowBox[{"MeanCI", "[", 
   RowBox[{"\[Lambda]list", ",", " ", 
    RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.6895121961802244`*^9, {3.689537659589612*^9, 3.689537666941614*^9}, {
   3.689551694587577*^9, 3.689551706947172*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.462222417330638`", ",", "4.514549167978627`"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.689537687478684*^9, {3.6895377676193323`*^9, 3.6895377879004717`*^9}, 
   3.689537825779601*^9, 3.6895382299928713`*^9, 3.689538305924168*^9, 
   3.6895384077145348`*^9, {3.689538482324613*^9, 3.689538511033368*^9}, 
   3.689538740265155*^9, 3.689538845898408*^9, 3.6895393626843557`*^9, 
   3.6895393965069027`*^9, 3.689539444488196*^9, 3.6895428667815723`*^9, 
   3.689542920078329*^9, 3.689543033289122*^9, 3.6895435868098917`*^9, 
   3.689543650316749*^9, 3.689543855177781*^9, 3.689544111610868*^9, {
   3.68954415077225*^9, 3.6895441742270813`*^9}, {3.689544238947555*^9, 
   3.689544263744665*^9}, 3.689544293933601*^9, {3.6895443321411333`*^9, 
   3.689544359123199*^9}, {3.689544400048128*^9, 3.6895444129162283`*^9}, 
   3.689544597332158*^9, {3.689544730176086*^9, 3.6895447659603786`*^9}, 
   3.6895451731064663`*^9, 3.689546436073204*^9, {3.689546488186493*^9, 
   3.689546564601215*^9}, 3.689546607540213*^9, {3.689546911710231*^9, 
   3.689546961845686*^9}, {3.6895470238012533`*^9, 3.689547115774199*^9}, 
   3.689547192349*^9, {3.689547332006575*^9, 3.689547342102696*^9}, {
   3.689547395955941*^9, 3.689547410354961*^9}, 3.689547495274905*^9, 
   3.6895477270505333`*^9, 3.689547908178742*^9, 3.689548074919379*^9, 
   3.689548235543264*^9, {3.689548294303351*^9, 3.689548312406328*^9}, {
   3.689548471128244*^9, 3.689548496308819*^9}, 3.689549887677102*^9, {
   3.6895499225584393`*^9, 3.6895499443544207`*^9}, 3.689549979194161*^9, 
   3.689550061245796*^9, {3.689550156532961*^9, 3.6895501792201967`*^9}, 
   3.6895502130036583`*^9, 3.689550467097226*^9, 3.689551682896534*^9, 
   3.689551841748042*^9, 3.689551932355248*^9, 3.689552028556807*^9, {
   3.689553137167511*^9, 3.689553163041707*^9}, 3.6895532943429537`*^9, 
   3.6895534206731043`*^9, 3.6895535547770967`*^9, 3.689553793724615*^9, 
   3.689553868513927*^9, 3.6895540397404413`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", " ", "-", " ", 
    RowBox[{"conf\[Lambda]Low", " ", "/", "conf\[Lambda]High"}]}], ")"}], " ",
   "*", " ", "100", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "percentual", " ", "difference"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.689553108069757*^9, 3.68955317805826*^9}, {
  3.6895534603446283`*^9, 3.689553463248644*^9}}],

Cell[BoxData["1.1590692381675427`"], "Output",
 CellChangeTimes->{3.689553119574839*^9, 3.689553163096233*^9, 
  3.689553294447816*^9, 3.689553420752376*^9, 3.689553554880268*^9, 
  3.689553793842354*^9, 3.6895538686046457`*^9, 3.689554039833787*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution 2 (Geometric distribution)", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533910635722*^9, 3.6895339327476263`*^9}, {3.68953748759827*^9, 
  3.689537487966322*^9}, {3.689537949211651*^9, 3.689537952187593*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{3.689537584453005*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"amountOfLists", "=", "100"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"listLength", "=", "1000"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrixOfRands", "=", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"2", ",", 
     RowBox[{"{", 
      RowBox[{"amountOfLists", ",", "listLength"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6895368768343763`*^9, 3.689536945129941*^9}, {
  3.689537603813986*^9, 3.6895376038858967`*^9}, {3.6895377576623287`*^9, 
  3.689537759957205*^9}, {3.689537877820333*^9, 3.689537877884139*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findp", "[", "data_", "]"}], ":=", 
  RowBox[{"List", "@@", 
   RowBox[{"EstimatedDistribution", "[", 
    RowBox[{"data", ",", 
     RowBox[{"GeometricDistribution", "[", "p", "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{
  3.6895146793008604`*^9, {3.6895224639304667`*^9, 3.689522471098274*^9}, {
   3.689538221714323*^9, 3.689538223346095*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", "prob", "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"findp", "/@", "matrixOfRands"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.6895261508357277`*^9, 3.689526342930228*^9, {3.689538182730485*^9, 
   3.689538202858317*^9}, 3.689538248605811*^9, {3.689538497144638*^9, 
   3.689538500448495*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"confpLow", ",", " ", "confpHigh"}], "}"}], "=", 
  RowBox[{"MeanCI", "[", 
   RowBox[{"prob", ",", " ", 
    RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.6895122434562206`*^9, 3.6895262758590717`*^9, {3.689538212922412*^9, 
   3.689538216290059*^9}, {3.689551647700221*^9, 3.689551660611487*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.06470691710548346`", ",", "0.06545254005145013`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.689538230354422*^9, 3.689538259238578*^9}, 
   3.689538306250523*^9, 3.689538408021451*^9, {3.689538482531855*^9, 
   3.689538511333164*^9}, 3.689538740404413*^9, 3.689538846089357*^9, 
   3.689539363037661*^9, 3.689539396652712*^9, 3.689539444636053*^9, 
   3.68954286700237*^9, 3.689542920878916*^9, 3.689543033528946*^9, 
   3.689543587016068*^9, 3.689543650997448*^9, 3.689543855795558*^9, 
   3.689544111768001*^9, {3.689544150978945*^9, 3.689544174423781*^9}, {
   3.689544239094825*^9, 3.689544263903346*^9}, 3.689544294095544*^9, {
   3.689544332312024*^9, 3.689544359352541*^9}, {3.6895444002420273`*^9, 
   3.689544413118783*^9}, 3.689544597489726*^9, {3.689544730329505*^9, 
   3.689544766112528*^9}, 3.6895451732596073`*^9, 3.689546436788341*^9, {
   3.6895464896024113`*^9, 3.689546565181246*^9}, 3.689546608169387*^9, {
   3.6895469123429613`*^9, 3.6895469624970913`*^9}, {3.689547023986865*^9, 
   3.689547115941329*^9}, 3.689547192535097*^9, {3.6895473322117558`*^9, 
   3.6895473424069033`*^9}, {3.6895473961025352`*^9, 3.689547410516609*^9}, 
   3.689547495444356*^9, 3.6895477272101192`*^9, 3.689547908327363*^9, 
   3.6895480757645273`*^9, 3.689548235694118*^9, {3.689548294483832*^9, 
   3.689548312566689*^9}, {3.689548471287483*^9, 3.6895484965001593`*^9}, 
   3.6895498878767223`*^9, {3.6895499227826138`*^9, 3.689549944559306*^9}, 
   3.689549979370995*^9, 3.689550061416547*^9, {3.689550156746304*^9, 
   3.689550179444227*^9}, 3.689550213168354*^9, 3.689550467320115*^9, 
   3.689551683050452*^9, 3.68955184190825*^9, 3.6895519328205843`*^9, 
   3.689552028743194*^9, 3.689553295294065*^9, 3.689553421017432*^9, 
   3.689553555129657*^9, 3.6895537943321543`*^9, 3.6895538693915157`*^9, 
   3.6895540404410353`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"confpHigh", "+", "confpLow"}], ")"}], "/", "2", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "percentual", " ", "difference"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.6895519002921457`*^9, 3.689551909260888*^9}, {
  3.689551976730157*^9, 3.689551983937396*^9}, {3.689553251858733*^9, 
  3.689553256553973*^9}}],

Cell[BoxData["0.06507972857846679`"], "Output",
 CellChangeTimes->{{3.689551910557295*^9, 3.6895519328684397`*^9}, 
   3.689551984635854*^9, 3.6895520287831*^9, 3.689553295385189*^9, 
   3.689553421033497*^9, 3.689553555218392*^9, 3.689553794616159*^9, 
   3.6895538695486803`*^9, 3.689554040528859*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", " ", "-", " ", 
    RowBox[{"confpLow", " ", "/", "confpHigh"}]}], ")"}], " ", "*", " ", 
  "100", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "percentual", " ", "difference"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.689553191010507*^9, 3.6895531929244003`*^9}, {
  3.689553454201577*^9, 3.689553473144773*^9}}],

Cell[BoxData["1.139181069795847`"], "Output",
 CellChangeTimes->{3.689553295516864*^9, 3.689553421136341*^9, 
  3.689553555805203*^9, 3.689553795190361*^9, 3.6895538697333*^9, 
  3.689554040622569*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution 3 (Gamma distribution)", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533910635722*^9, 3.6895339327476263`*^9}, {3.689537489502226*^9, 
  3.6895374902383738`*^9}, {3.689537954675495*^9, 3.6895379568593903`*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{3.689537584453005*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"amountOfLists", "=", "100"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"listLength", "=", "1000"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrixOfRands", "=", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"3", ",", 
     RowBox[{"{", 
      RowBox[{"amountOfLists", ",", "listLength"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6895368768343763`*^9, 3.689536945129941*^9}, {
  3.689537603813986*^9, 3.6895376038858967`*^9}, {3.6895377576623287`*^9, 
  3.689537759957205*^9}, {3.6895378850923367`*^9, 3.6895378851078043`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"find\[Alpha]and\[Beta]", "[", "data_", "]"}], ":=", 
  RowBox[{"List", "@@", 
   RowBox[{"EstimatedDistribution", "[", 
    RowBox[{"data", ",", 
     RowBox[{"GammaDistribution", "[", 
      RowBox[{"\[Alpha]", ",", "\[Beta]"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6895385573841763`*^9, 3.689538557656199*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Alpha]list", ",", "\[Beta]list"}], "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"find\[Alpha]and\[Beta]", "/@", "matrixOfRands"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.689538657999823*^9, 3.689538695411717*^9}, {
   3.689538766975774*^9, 3.6895387724950113`*^9}, 3.6895388231295443`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"conf\[Alpha]Low", ",", " ", "conf\[Alpha]High"}], "}"}], "=", 
  RowBox[{"MeanCI", "[", 
   RowBox[{"\[Alpha]list", ",", " ", 
    RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6895386464479923`*^9, 3.68953864671235*^9}, {
   3.6895386997085752`*^9, 3.6895387020876207`*^9}, 3.68953877584778*^9, {
   3.689551714899828*^9, 3.6895517350910053`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"7.985866755795815`", ",", "8.1205369976194`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.689538846314275*^9, 3.689539363446447*^9, 3.689539396861154*^9, 
   3.689539444863193*^9, 3.6895428672848797`*^9, 3.689542921544752*^9, 
   3.689543033771761*^9, 3.689543587324768*^9, 3.689543651691559*^9, 
   3.689543856391465*^9, 3.689544112000285*^9, {3.6895441512066603`*^9, 
   3.689544174736907*^9}, {3.689544239327229*^9, 3.689544264134774*^9}, 
   3.689544294465632*^9, {3.689544332635188*^9, 3.6895443596406527`*^9}, {
   3.689544400549704*^9, 3.689544413427194*^9}, 3.689544597729599*^9, {
   3.689544730567109*^9, 3.689544766457567*^9}, 3.689545173539124*^9, 
   3.6895464374484587`*^9, {3.6895464902883863`*^9, 3.689546565814114*^9}, 
   3.689546608956468*^9, {3.68954691344119*^9, 3.6895469632212687`*^9}, {
   3.689547024243679*^9, 3.689547116224522*^9}, 3.689547192788505*^9, {
   3.689547332469511*^9, 3.68954734267766*^9}, {3.689547396341982*^9, 
   3.689547410780978*^9}, 3.689547495683011*^9, 3.6895477275291147`*^9, 
   3.689547908569126*^9, 3.689548076799684*^9, 3.689548235917823*^9, {
   3.689548294810524*^9, 3.689548312802071*^9}, {3.689548471528419*^9, 
   3.689548496732005*^9}, 3.689549888130643*^9, {3.6895499230346527`*^9, 
   3.689549944797752*^9}, 3.689549979601663*^9, 3.689550061663726*^9, {
   3.689550157019579*^9, 3.689550179689928*^9}, 3.689550213407208*^9, 
   3.6895504677379837`*^9, 3.6895516833102903`*^9, 3.6895518421947107`*^9, 
   3.689551933159444*^9, 3.689552029139974*^9, 3.689553295848599*^9, 
   3.689553421482292*^9, 3.689553557211439*^9, 3.689553795500881*^9, 
   3.68955387054277*^9, 3.689554041562948*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", " ", "-", " ", 
    RowBox[{"conf\[Alpha]Low", " ", "/", "conf\[Alpha]High"}]}], ")"}], " ", 
  "*", " ", "100", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "percentual", " ", "difference"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.689553205730599*^9, 3.6895532076923733`*^9}, {
  3.689553449336824*^9, 3.689553475600955*^9}}],

Cell[BoxData["1.6583908411853199`"], "Output",
 CellChangeTimes->{3.689553295961974*^9, 3.689553421496077*^9, 
  3.689553558507575*^9, 3.689553795578174*^9, 3.689553870685193*^9, 
  3.68955404166116*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"conf\[Beta]Low", ",", " ", "conf\[Beta]High"}], "}"}], "=", 
  RowBox[{"MeanCI", "[", 
   RowBox[{"\[Beta]list", ",", " ", 
    RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.689538652471923*^9, {3.689538705127668*^9, 3.68953870917542*^9}, 
   3.689538780464347*^9, {3.689551740787035*^9, 3.689551751322915*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1.5770162916965078`", ",", "1.6044355239326844`"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.689538846347323*^9, 3.689539363483054*^9, 3.689539396883978*^9, 
   3.6895394448968773`*^9, 3.689542867294076*^9, 3.689542921645179*^9, 
   3.689543033805193*^9, 3.689543587355245*^9, 3.6895436517774267`*^9, 
   3.689543856455411*^9, 3.6895441120294647`*^9, {3.6895441512406263`*^9, 
   3.689544174772996*^9}, {3.689544239360708*^9, 3.6895442641647587`*^9}, 
   3.6895442945035677`*^9, {3.689544332674595*^9, 3.68954435967299*^9}, {
   3.689544400588521*^9, 3.6895444134767647`*^9}, 3.689544597764408*^9, {
   3.689544730606501*^9, 3.689544766491228*^9}, 3.6895451735865793`*^9, 
   3.689546437720665*^9, {3.689546490431896*^9, 3.689546565913561*^9}, 
   3.6895466090480137`*^9, {3.68954691353275*^9, 3.689546963322051*^9}, {
   3.689547024297418*^9, 3.689547116274004*^9}, 3.689547192800186*^9, {
   3.6895473325052967`*^9, 3.6895473427175198`*^9}, {3.689547396381172*^9, 
   3.6895474108225594`*^9}, 3.689547495734322*^9, 3.6895477275699453`*^9, 
   3.6895479086086884`*^9, 3.6895480769069767`*^9, 3.6895482359614563`*^9, {
   3.689548294854533*^9, 3.689548312845396*^9}, {3.689548471567459*^9, 
   3.689548496773478*^9}, 3.68954988817979*^9, {3.689549923082192*^9, 
   3.689549944835187*^9}, 3.689549979642795*^9, 3.689550061706992*^9, {
   3.689550157058041*^9, 3.689550179764866*^9}, 3.689550213451708*^9, 
   3.689550467806815*^9, 3.689551683417501*^9, 3.689551842230817*^9, 
   3.6895519332026863`*^9, 3.689552029190749*^9, 3.6895532960744247`*^9, 
   3.689553421577735*^9, 3.6895535588120213`*^9, 3.6895537956738453`*^9, 
   3.689553870915427*^9, 3.689554041800075*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", " ", "-", " ", 
    RowBox[{"conf\[Beta]Low", " ", "/", "conf\[Beta]High"}]}], ")"}], " ", 
  "*", " ", "100", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "percentual", " ", "difference"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.689553209465994*^9, 3.689553211132554*^9}, {
  3.689553260185947*^9, 3.68955326048168*^9}, {3.689553444248918*^9, 
  3.689553446144485*^9}}],

Cell[BoxData["1.7089644193970743`"], "Output",
 CellChangeTimes->{3.689553296089139*^9, 3.689553421670116*^9, 
  3.68955355900639*^9, 3.689553795776164*^9, 3.6895538711406813`*^9, 
  3.689554041896944*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution 4 (Normal distribution)", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533910635722*^9, 3.6895339327476263`*^9}, {3.689537491862501*^9, 
  3.6895374924301167`*^9}, {3.689537959235478*^9, 3.6895379740593853`*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input",
 CellChangeTimes->{3.689537584453005*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"amountOfLists", "=", "100"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"listLength", "=", "1000"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrixOfRands", "=", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"4", ",", 
     RowBox[{"{", 
      RowBox[{"amountOfLists", ",", "listLength"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6895368768343763`*^9, 3.689536945129941*^9}, {
  3.689537603813986*^9, 3.6895376038858967`*^9}, {3.6895377576623287`*^9, 
  3.689537759957205*^9}, {3.689537890084263*^9, 3.689537890124125*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"find\[Mu]and\[Sigma]", "[", "data_", "]"}], ":=", 
  RowBox[{"List", "@@", 
   RowBox[{"EstimatedDistribution", "[", 
    RowBox[{"data", ",", 
     RowBox[{"NormalDistribution", "[", 
      RowBox[{"\[Mu]", ",", " ", "\[Sigma]"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6895370924490843`*^9, 3.689537123808956*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[Mu]list", ",", "\[Sigma]list"}], "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"find\[Mu]and\[Sigma]", "/@", "matrixOfRands"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.689537083401013*^9, 3.689537127232671*^9}, {
  3.6895371716727047`*^9, 3.689537173992269*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"conf\[Mu]", " ", "=", " ", 
  RowBox[{"MeanCI", "[", 
   RowBox[{"\[Mu]list", ",", " ", 
    RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.689537147108474*^9, 3.6895371890803223`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2.9407127220085867`", ",", "3.002984652925102`"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.689538230616239*^9, 3.689538306681322*^9, 3.68953840822589*^9, {
   3.6895384829675617`*^9, 3.689538511650489*^9}, 3.6895387408049173`*^9, 
   3.689538846524207*^9, 3.6895393637829037`*^9, 3.689539397036745*^9, 
   3.689539445072627*^9, 3.689542867489945*^9, 3.689542922197649*^9, 
   3.689543034028625*^9, 3.6895435875331993`*^9, 3.689543652397344*^9, 
   3.689543857071217*^9, 3.6895441122155046`*^9, {3.6895441514378157`*^9, 
   3.689544174955697*^9}, {3.6895442395417223`*^9, 3.689544264338397*^9}, 
   3.689544294730616*^9, {3.689544332988027*^9, 3.6895443599529037`*^9}, {
   3.689544400854759*^9, 3.689544413735717*^9}, 3.689544597947192*^9, {
   3.68954473082253*^9, 3.689544766680131*^9}, 3.689545173821582*^9, 
   3.689546438203435*^9, {3.689546491067618*^9, 3.6895465665207663`*^9}, 
   3.689546609585142*^9, {3.6895469141798563`*^9, 3.6895469639280233`*^9}, {
   3.689547024592305*^9, 3.689547116466859*^9}, 3.689547193175601*^9, {
   3.689547332815721*^9, 3.689547342915577*^9}, {3.689547396560315*^9, 
   3.6895474110509377`*^9}, 3.6895474959255943`*^9, 3.6895477277340097`*^9, 
   3.6895479087912407`*^9, 3.68954807756339*^9, 3.689548236134276*^9, {
   3.689548295095768*^9, 3.689548313021606*^9}, {3.689548471743256*^9, 
   3.6895484970912867`*^9}, 3.689549888387657*^9, {3.689549923313014*^9, 
   3.689549945034135*^9}, 3.689549979833452*^9, 3.6895500619237757`*^9, {
   3.689550157256871*^9, 3.689550180021882*^9}, 3.6895502136360283`*^9, 
   3.6895504680285892`*^9, 3.689551683683305*^9, 3.6895518424056*^9, 
   3.689551933400251*^9, 3.689552029382927*^9, 3.6895532966312323`*^9, 
   3.68955342192164*^9, 3.68955355957928*^9, 3.6895537960265837`*^9, 
   3.68955387200014*^9, 3.689554042927046*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"conf\[Sigma]Low", ",", " ", "conf\[Sigma]High"}], "}"}], " ", "=",
   " ", 
  RowBox[{"MeanCI", "[", 
   RowBox[{"\[Sigma]list", ",", " ", 
    RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.689537200959888*^9, 3.689537234768128*^9}, {
   3.689551763851243*^9, 3.6895517800428877`*^9}, 3.68955322273133*^9, {
   3.689553314457561*^9, 3.689553314977429*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4.9656941990591354`", ",", "5.006541869696215`"}], "}"}]], "Output",\

 CellChangeTimes->{
  3.689538230645528*^9, 3.689538306719116*^9, 3.689538408255295*^9, {
   3.689538483028468*^9, 3.689538511694331*^9}, 3.689538740885271*^9, 
   3.689538846532589*^9, 3.689539363812016*^9, 3.68953939706066*^9, 
   3.689539445105727*^9, 3.689542867523931*^9, 3.689542923100868*^9, 
   3.689543034060685*^9, 3.689543587565691*^9, 3.6895436525085163`*^9, 
   3.6895438571572933`*^9, 3.689544112252344*^9, {3.6895441514728394`*^9, 
   3.6895441749923553`*^9}, {3.6895442395796347`*^9, 3.6895442643741302`*^9}, 
   3.689544294762312*^9, {3.689544333049301*^9, 3.689544359960226*^9}, {
   3.6895444008637543`*^9, 3.689544413773999*^9}, 3.689544597982368*^9, {
   3.6895447308651733`*^9, 3.6895447667171*^9}, 3.689545173861136*^9, 
   3.689546438299789*^9, {3.689546491225177*^9, 3.68954656663293*^9}, 
   3.6895466096805677`*^9, {3.689546914274888*^9, 3.689546964026454*^9}, {
   3.689547024656736*^9, 3.689547116508716*^9}, 3.6895471932239227`*^9, {
   3.689547332852195*^9, 3.689547342954734*^9}, {3.689547396591284*^9, 
   3.6895474110967503`*^9}, 3.689547495935564*^9, 3.689547727772359*^9, 
   3.689547908831514*^9, 3.689548077666329*^9, 3.6895482361815567`*^9, {
   3.6895482951399107`*^9, 3.689548313063036*^9}, {3.689548471784075*^9, 
   3.6895484971418953`*^9}, 3.689549888471694*^9, {3.689549923357544*^9, 
   3.6895499450845823`*^9}, 3.68954997987593*^9, 3.689550061971984*^9, {
   3.689550157298538*^9, 3.689550180032714*^9}, 3.689550213649253*^9, 
   3.689550468100136*^9, 3.689551683722714*^9, 3.6895518424407797`*^9, 
   3.689551933442629*^9, 3.689552029433382*^9, 3.689553296728731*^9, 
   3.689553422007361*^9, 3.689553559725451*^9, 3.689553796094136*^9, 
   3.6895538722770844`*^9, 3.689554043090254*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", " ", "-", " ", 
    RowBox[{"conf\[Sigma]Low", " ", "/", "conf\[Sigma]High"}]}], ")"}], " ", 
  "*", " ", "100", "  ", 
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "percentual", " ", "difference"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.689553221674076*^9, 3.6895532237239237`*^9}, {
   3.689553262721774*^9, 3.689553263121991*^9}, 3.689553317906004*^9, {
   3.689553438345541*^9, 3.6895534400485163`*^9}}],

Cell[BoxData["0.8158859288548759`"], "Output",
 CellChangeTimes->{3.689553296840707*^9, 3.6895534220872803`*^9, 
  3.689553559865899*^9, 3.689553796230455*^9, 3.689553872455037*^9, 
  3.6895540432484407`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution 5 (Binomial distribution)", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533910635722*^9, 3.6895339327476263`*^9}, {3.689537493478397*^9, 
  3.689537499798092*^9}, {3.689538046315036*^9, 3.6895380495709553`*^9}}],

Cell[BoxData[
 RowBox[{"ClearAll", "[", "\"\<`*\>\"", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"amountOfLists", "=", "100"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"listLength", "=", "1000"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrixOfRands", "=", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"5", ",", 
     RowBox[{"{", 
      RowBox[{"amountOfLists", ",", "listLength"}], "}"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.6895368768343763`*^9, 3.689536945129941*^9}, {
  3.689537746493998*^9, 3.689537777751533*^9}, {3.689538024059567*^9, 
  3.6895380240913353`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"findmandp", "[", "data_", "]"}], ":=", 
  RowBox[{"List", "@@", 
   RowBox[{"EstimatedDistribution", "[", 
    RowBox[{"data", ",", 
     RowBox[{"BinomialDistribution", "[", 
      RowBox[{"listLength", " ", ",", "p"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6895390469497023`*^9, 3.689539051853167*^9}, {
  3.689539214196733*^9, 3.689539220100338*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"m", ",", " ", "plist"}], "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"findmandp", "/@", "matrixOfRands"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.689538994894006*^9, 3.689539020021387*^9}, {
   3.6895390702615957`*^9, 3.689539079389385*^9}, {3.689539122845323*^9, 
   3.689539129388883*^9}, 3.689539223332388*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"confpLow", ",", " ", "confpHigh"}], "}"}], "=", 
  RowBox[{"MeanCI", "[", 
   RowBox[{"plist", ",", " ", 
    RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.689539133301797*^9, 3.689539135453285*^9}, 
   3.689539383438189*^9, {3.689551798562886*^9, 3.689551805842658*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.003295184249341253`", ",", "0.0033146557506587475`"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.689539066002466*^9, 3.689539083371196*^9}, 
   3.689539363964327*^9, 3.689539397209196*^9, 3.6895394452631407`*^9, 
   3.6895428677583733`*^9, 3.689542923872323*^9, 3.689543034328658*^9, 
   3.6895435877526217`*^9, 3.6895436532592297`*^9, 3.689543857775258*^9, 
   3.689544112520795*^9, {3.689544151651229*^9, 3.689544175165017*^9}, {
   3.689544239803955*^9, 3.689544264654174*^9}, 3.689544294928568*^9, {
   3.689544333303625*^9, 3.689544360180079*^9}, {3.6895444010505943`*^9, 
   3.689544413975218*^9}, 3.689544598256065*^9, {3.6895447311733723`*^9, 
   3.6895447668770103`*^9}, 3.689545174024117*^9, 3.689546438874198*^9, {
   3.689546491785932*^9, 3.689546567288313*^9}, 3.689546610315227*^9, {
   3.689546914826355*^9, 3.6895469648877296`*^9}, {3.689547024900688*^9, 
   3.6895471166914873`*^9}, 3.689547193433647*^9, {3.689547333061409*^9, 
   3.68954734315556*^9}, {3.689547396762479*^9, 3.6895474113469133`*^9}, 
   3.6895474962041616`*^9, 3.6895477279292088`*^9, 3.689547909036067*^9, 
   3.68954807834114*^9, 3.689548236354607*^9, {3.689548295362536*^9, 
   3.6895483132528667`*^9}, {3.689548471964327*^9, 3.689548497325232*^9}, 
   3.689549888737713*^9, {3.689549923674184*^9, 3.689549945256651*^9}, 
   3.689549980101755*^9, 3.689550062158272*^9, {3.689550157469573*^9, 
   3.689550180271894*^9}, 3.689550213836925*^9, 3.68955046831388*^9, 
   3.689551683892104*^9, 3.689551842602289*^9, 3.6895519336351337`*^9, 
   3.689552029624909*^9, 3.689553297119808*^9, 3.689553422307969*^9, 
   3.689553560230062*^9, 3.689553796514666*^9, 3.6895538732655783`*^9, 
   3.689554044721816*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", " ", "-", " ", 
    RowBox[{"confpLow", " ", "/", "confpHigh"}]}], ")"}], " ", "*", " ", 
  "100", " ", 
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "percentual", " ", "difference"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.689553229346203*^9, 3.6895532316021423`*^9}, {
  3.6895532659540663`*^9, 3.6895532662818317`*^9}, {3.689553427328783*^9, 
  3.6895534315688343`*^9}}],

Cell[BoxData["0.5874366082699534`"], "Output",
 CellChangeTimes->{3.6895532972253723`*^9, 3.6895534223966618`*^9, 
  3.6895535603853827`*^9, 3.6895537965923157`*^9, 3.689553873371296*^9, 
  3.689554044834272*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Distribution 6 (Poisson distribution)", "Subsubsubsection",
 CellChangeTimes->{{3.6895336783472967`*^9, 3.689533702674101*^9}, {
  3.689533910635722*^9, 3.6895339327476263`*^9}, {3.6895374664145403`*^9, 
  3.6895374974300756`*^9}, {3.689538051307454*^9, 3.689538059994791*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"amountOfLists", "=", "100"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"listLength", "=", "1000"}], ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"matrixOfRands", "=", 
   RowBox[{"randomNumber", "[", 
    RowBox[{"6", ",", 
     RowBox[{"{", 
      RowBox[{"amountOfLists", ",", "listLength"}], "}"}]}], "]"}]}], 
  ";"}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"find\[Mu]", "[", "data_", "]"}], ":=", 
  RowBox[{"List", "@@", 
   RowBox[{"EstimatedDistribution", "[", 
    RowBox[{"data", ",", 
     RowBox[{"PoissonDistribution", "[", "\[Mu]", "]"}]}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.689539321363881*^9, 3.6895393242277*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"{", "\[Mu]list", "}"}], "=", 
   RowBox[{"Transpose", "[", 
    RowBox[{"find\[Mu]", "/@", "matrixOfRands"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.689539328883832*^9, 3.689539342027525*^9}, 
   3.689539427187538*^9, {3.6895534969684258`*^9, 3.68955350207232*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"conf\[Mu]Low", ",", " ", "conf\[Mu]High"}], "}"}], "=", 
  RowBox[{"MeanCI", "[", 
   RowBox[{"\[Mu]list", ",", " ", 
    RowBox[{"ConfidenceLevel", "\[Rule]", "0.95"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.689539345670295*^9, 3.689539354267528*^9}, {
  3.689551811627359*^9, 3.689551816362606*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"9.79523873202965`", ",", "9.834181267970353`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.689539397339336*^9, 3.689539445446267*^9, 3.689542867932569*^9, 
   3.689542924502988*^9, 3.689543034491295*^9, 3.689543587935485*^9, 
   3.689543654811393*^9, 3.689543858343635*^9, 3.689544112734585*^9, {
   3.689544151820044*^9, 3.689544175344281*^9}, {3.6895442400426397`*^9, 
   3.689544264902998*^9}, 3.6895442950971603`*^9, {3.68954433355877*^9, 
   3.68954436042699*^9}, {3.689544401238974*^9, 3.689544414219985*^9}, 
   3.689544598423036*^9, {3.689544731382663*^9, 3.6895447670865297`*^9}, 
   3.689545174203991*^9, 3.689546439367474*^9, {3.689546492554351*^9, 
   3.689546567876052*^9}, 3.689546611023779*^9, {3.689546915525078*^9, 
   3.689546965612418*^9}, {3.6895470251055*^9, 3.6895471168924417`*^9}, 
   3.6895471936679173`*^9, {3.689547333231152*^9, 3.6895473433370037`*^9}, {
   3.689547396942706*^9, 3.689547411582796*^9}, 3.6895474964065943`*^9, 
   3.68954772814363*^9, 3.689547909213417*^9, 3.689548079094667*^9, 
   3.689548236614403*^9, {3.689548295613147*^9, 3.689548313429295*^9}, {
   3.6895484721336927`*^9, 3.6895484975325193`*^9}, 3.68954988995319*^9, {
   3.689549923904799*^9, 3.689549945503344*^9}, 3.6895499803069468`*^9, 
   3.689550062428084*^9, {3.689550157660831*^9, 3.6895501805380297`*^9}, 
   3.6895502140289927`*^9, 3.689550468574788*^9, 3.689551684067843*^9, 
   3.689551842772233*^9, 3.689551933834475*^9, 3.689552030179895*^9, 
   3.689553297496756*^9, 3.689553422666439*^9, 3.689553560854027*^9, 
   3.689553796863124*^9, 3.689553873918055*^9, 3.689554045508236*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"1", " ", "-", " ", 
    RowBox[{"conf\[Mu]Low", " ", "/", "conf\[Mu]High"}]}], ")"}], "*", "100", 
  " ", 
  RowBox[{"(*", " ", 
   RowBox[{"The", " ", "percentual", " ", "difference"}], " ", 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.6895532382842197`*^9, 3.689553267665804*^9}, {
  3.689553370538027*^9, 3.68955338836899*^9}}],

Cell[BoxData["0.39599164261427955`"], "Output",
 CellChangeTimes->{3.689553297690752*^9, 3.689553422766472*^9, 
  3.6895535608742733`*^9, 3.689553796921504*^9, 3.68955387405898*^9, 
  3.68955404562251*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{839, 995},
WindowMargins->{{Automatic, -395}, {-162, Automatic}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 308, 4, 93, "Title"],
Cell[891, 28, 101, 1, 51, "Subtitle"],
Cell[995, 31, 361, 10, 30, "Text"],
Cell[CellGroupData[{
Cell[1381, 45, 282, 7, 65, "Section"],
Cell[1666, 54, 442, 9, 77, "Text"],
Cell[CellGroupData[{
Cell[2133, 67, 218, 9, 45, "Subsection"],
Cell[CellGroupData[{
Cell[2376, 80, 176, 2, 35, "Subsubsection"],
Cell[2555, 84, 567, 9, 99, "Text"],
Cell[CellGroupData[{
Cell[3147, 97, 267, 8, 34, "ItemNumbered"],
Cell[3417, 107, 295, 9, 34, "ItemNumbered"],
Cell[3715, 118, 353, 11, 34, "ItemNumbered"]
}, Open  ]],
Cell[4083, 132, 290, 5, 55, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4410, 142, 219, 3, 35, "Subsubsection"],
Cell[4632, 147, 519, 17, 34, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[5200, 170, 190, 8, 45, "Subsection"],
Cell[CellGroupData[{
Cell[5415, 182, 176, 2, 35, "Subsubsection"],
Cell[5594, 186, 440, 7, 99, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6071, 198, 169, 2, 35, "Subsubsection"],
Cell[6243, 202, 176, 4, 33, "Text"],
Cell[CellGroupData[{
Cell[6444, 210, 129, 2, 31, "ItemNumbered"],
Cell[6576, 214, 176, 3, 31, "ItemNumbered"],
Cell[6755, 219, 172, 3, 31, "ItemNumbered"],
Cell[6930, 224, 173, 3, 31, "ItemNumbered"],
Cell[7106, 229, 173, 3, 31, "ItemNumbered"]
}, Open  ]],
Cell[7294, 235, 92, 1, 32, "Input"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7447, 243, 276, 8, 65, "Section"],
Cell[CellGroupData[{
Cell[7748, 255, 350, 10, 45, "Subsection"],
Cell[CellGroupData[{
Cell[8123, 269, 170, 2, 35, "Subsubsection"],
Cell[8296, 273, 363, 7, 55, "Text"],
Cell[8662, 282, 442, 13, 58, "DisplayFormula"],
Cell[9107, 297, 116, 1, 33, "Text"],
Cell[9226, 300, 557, 18, 71, "DisplayFormula"],
Cell[9786, 320, 167, 3, 33, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9990, 328, 169, 2, 35, "Subsubsection"],
Cell[10162, 332, 123, 3, 34, "Input"],
Cell[10288, 337, 144, 4, 34, "Input"],
Cell[10435, 343, 141, 3, 34, "Input"],
Cell[10579, 348, 265, 6, 34, "Input"],
Cell[CellGroupData[{
Cell[10869, 358, 179, 4, 32, "Input"],
Cell[11051, 364, 1566, 22, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12654, 391, 181, 3, 32, "Input"],
Cell[12838, 396, 1578, 22, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14477, 425, 369, 11, 45, "Subsection"],
Cell[CellGroupData[{
Cell[14871, 440, 125, 2, 35, "Subsubsection"],
Cell[14999, 444, 206, 6, 33, "Text"],
Cell[15208, 452, 1643, 29, 37, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16888, 486, 195, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[17108, 493, 269, 3, 31, "Subsubsubsection"],
Cell[17380, 498, 1738, 32, 97, "Input"],
Cell[19121, 532, 217, 7, 34, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19375, 544, 205, 3, 31, "Subsubsubsection"],
Cell[CellGroupData[{
Cell[19605, 551, 836, 21, 34, "Input"],
Cell[20444, 574, 1393, 21, 34, "Output"]
}, Open  ]],
Cell[21852, 598, 346, 9, 32, "Input"],
Cell[22201, 609, 998, 26, 34, "Input"],
Cell[23202, 637, 503, 12, 34, "Input"],
Cell[CellGroupData[{
Cell[23730, 653, 683, 13, 34, "Input"],
Cell[24416, 668, 1274, 22, 46, "Output"]
}, Open  ]],
Cell[25705, 693, 684, 12, 34, "Input"],
Cell[26392, 707, 300, 7, 34, "Input"],
Cell[26695, 716, 897, 18, 57, "Input"],
Cell[CellGroupData[{
Cell[27617, 738, 167, 3, 34, "Input"],
Cell[27787, 743, 18308, 313, 366, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[46144, 1062, 255, 3, 31, "Subsubsubsection"],
Cell[46402, 1067, 367, 7, 34, "Input"],
Cell[CellGroupData[{
Cell[46794, 1078, 704, 19, 34, "Input"],
Cell[47501, 1099, 898, 16, 38, "Output"]
}, Open  ]],
Cell[48414, 1118, 268, 7, 32, "Input"],
Cell[48685, 1127, 1069, 28, 79, "Input"],
Cell[49757, 1157, 393, 10, 34, "Input"],
Cell[50153, 1169, 544, 12, 34, "Input"],
Cell[50700, 1183, 224, 5, 34, "Input"],
Cell[50927, 1190, 183, 5, 34, "Input"],
Cell[51113, 1197, 499, 12, 57, "Input"],
Cell[CellGroupData[{
Cell[51637, 1213, 169, 3, 34, "Input"],
Cell[51809, 1218, 18010, 310, 236, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[69868, 1534, 251, 3, 31, "Subsubsubsection"],
Cell[70122, 1539, 239, 5, 34, "Input"],
Cell[CellGroupData[{
Cell[70386, 1548, 921, 23, 34, "Input"],
Cell[71310, 1573, 839, 16, 54, "Output"]
}, Open  ]],
Cell[72164, 1592, 288, 7, 32, "Input"],
Cell[72455, 1601, 649, 18, 34, "Input"],
Cell[CellGroupData[{
Cell[73129, 1623, 1716, 43, 126, "Input"],
Cell[74848, 1668, 589, 11, 34, "Output"]
}, Open  ]],
Cell[75452, 1682, 678, 19, 34, "Input"],
Cell[76133, 1703, 544, 12, 34, "Input"],
Cell[76680, 1717, 224, 5, 34, "Input"],
Cell[76907, 1724, 183, 5, 34, "Input"],
Cell[77093, 1731, 498, 12, 57, "Input"],
Cell[CellGroupData[{
Cell[77616, 1747, 169, 3, 34, "Input"],
Cell[77788, 1752, 17694, 305, 236, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[95543, 2064, 150, 2, 35, "Subsubsection"],
Cell[95696, 2068, 194, 2, 33, "Text"],
Cell[95893, 2072, 18815, 330, 280, "Text"],
Cell[114711, 2404, 18463, 326, 207, "Text"],
Cell[133177, 2732, 18232, 324, 200, "Text"],
Cell[151412, 3058, 164, 3, 33, "Text"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[151625, 3067, 335, 10, 44, "Subsection"],
Cell[CellGroupData[{
Cell[151985, 3081, 125, 2, 35, "Subsubsection"],
Cell[152113, 3085, 108, 2, 33, "Text"]
}, Open  ]],
Cell[152236, 3090, 197, 3, 35, "Subsubsection"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[152482, 3099, 253, 7, 65, "Section"],
Cell[CellGroupData[{
Cell[152760, 3110, 375, 10, 45, "Subsection"],
Cell[CellGroupData[{
Cell[153160, 3124, 125, 2, 35, "Subsubsection"],
Cell[153288, 3128, 824, 16, 122, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[154149, 3149, 294, 4, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[154468, 3157, 110, 1, 31, "Subsubsubsection"],
Cell[154581, 3160, 70, 1, 32, "Input"],
Cell[154654, 3163, 148, 3, 34, "Input"],
Cell[CellGroupData[{
Cell[154827, 3170, 505, 11, 79, "Input"],
Cell[155335, 3183, 2300, 33, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[157672, 3221, 378, 8, 34, "Input"],
Cell[158053, 3231, 2076, 30, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[160166, 3266, 176, 3, 34, "Input"],
Cell[160345, 3271, 19988, 339, 303, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[180382, 3616, 161, 2, 31, "Subsubsubsection"],
Cell[180546, 3620, 70, 1, 32, "Input"],
Cell[CellGroupData[{
Cell[180641, 3625, 472, 10, 79, "Input"],
Cell[181116, 3637, 2247, 32, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183400, 3674, 441, 9, 57, "Input"],
Cell[183844, 3685, 2249, 32, 32, "Output"],
Cell[186096, 3719, 5387, 98, 245, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[191532, 3823, 161, 2, 31, "Subsubsubsection"],
Cell[191696, 3827, 138, 2, 32, "Input"],
Cell[191837, 3831, 80, 2, 34, "Input"],
Cell[CellGroupData[{
Cell[191942, 3837, 443, 8, 56, "Input"],
Cell[192388, 3847, 2239, 32, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194664, 3884, 389, 8, 34, "Input"],
Cell[195056, 3894, 2136, 32, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197229, 3931, 179, 3, 34, "Input"],
Cell[197411, 3936, 19889, 337, 245, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[217349, 4279, 159, 2, 31, "Subsubsubsection"],
Cell[217511, 4283, 138, 2, 32, "Input"],
Cell[217652, 4287, 172, 4, 34, "Input"],
Cell[CellGroupData[{
Cell[217849, 4295, 492, 9, 56, "Input"],
Cell[218344, 4306, 2185, 32, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[220566, 4343, 295, 6, 34, "Input"],
Cell[220864, 4351, 2179, 32, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[223080, 4388, 177, 3, 34, "Input"],
Cell[223260, 4393, 19874, 338, 295, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[243183, 4737, 161, 2, 31, "Subsubsubsection"],
Cell[243347, 4741, 80, 2, 34, "Input"],
Cell[CellGroupData[{
Cell[243452, 4747, 541, 10, 56, "Input"],
Cell[243996, 4759, 2140, 30, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246173, 4794, 403, 8, 34, "Input"],
Cell[246579, 4804, 2121, 30, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248737, 4839, 179, 3, 34, "Input"],
Cell[248919, 4844, 4076, 76, 245, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[253044, 4926, 161, 2, 31, "Subsubsubsection"],
Cell[253208, 4930, 138, 2, 32, "Input"],
Cell[253349, 4934, 144, 3, 34, "Input"],
Cell[CellGroupData[{
Cell[253518, 4941, 541, 10, 56, "Input"],
Cell[254062, 4953, 2006, 28, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256105, 4986, 380, 8, 34, "Input"],
Cell[256488, 4996, 1993, 28, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258518, 5029, 179, 3, 34, "Input"],
Cell[258700, 5034, 4192, 79, 245, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[262965, 5121, 345, 10, 45, "Subsection"],
Cell[CellGroupData[{
Cell[263335, 5135, 125, 2, 35, "Subsubsection"],
Cell[263463, 5139, 486, 12, 99, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263986, 5156, 197, 3, 35, "Subsubsection"],
Cell[CellGroupData[{
Cell[264208, 5163, 286, 3, 31, "Subsubsubsection"],
Cell[264497, 5168, 112, 2, 32, "Input"],
Cell[264612, 5172, 83, 1, 32, "Input"],
Cell[264698, 5175, 81, 2, 34, "Input"],
Cell[264782, 5179, 79, 2, 34, "Input"],
Cell[264864, 5183, 391, 10, 34, "Input"],
Cell[265258, 5195, 379, 10, 34, "Input"],
Cell[265640, 5207, 453, 10, 34, "Input"],
Cell[CellGroupData[{
Cell[266118, 5221, 397, 9, 34, "Input"],
Cell[266518, 5232, 2002, 30, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268557, 5267, 401, 10, 32, "Input"],
Cell[268961, 5279, 250, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[269260, 5288, 280, 3, 31, "Subsubsubsection"],
Cell[269543, 5293, 112, 2, 32, "Input"],
Cell[269658, 5297, 81, 2, 34, "Input"],
Cell[269742, 5301, 79, 2, 34, "Input"],
Cell[269824, 5305, 437, 10, 34, "Input"],
Cell[270264, 5317, 386, 9, 34, "Input"],
Cell[270653, 5328, 364, 9, 34, "Input"],
Cell[CellGroupData[{
Cell[271042, 5341, 396, 9, 34, "Input"],
Cell[271441, 5352, 1878, 28, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273356, 5385, 380, 9, 32, "Input"],
Cell[273739, 5396, 303, 4, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[274079, 5405, 386, 10, 32, "Input"],
Cell[274468, 5417, 201, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[274718, 5426, 281, 3, 31, "Subsubsubsection"],
Cell[275002, 5431, 112, 2, 32, "Input"],
Cell[275117, 5435, 81, 2, 34, "Input"],
Cell[275201, 5439, 79, 2, 34, "Input"],
Cell[275283, 5443, 441, 10, 34, "Input"],
Cell[275727, 5455, 362, 8, 34, "Input"],
Cell[276092, 5465, 378, 9, 34, "Input"],
Cell[CellGroupData[{
Cell[276495, 5478, 445, 9, 34, "Input"],
Cell[276943, 5489, 1689, 25, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[278669, 5519, 400, 10, 32, "Input"],
Cell[279072, 5531, 203, 3, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[279312, 5539, 410, 9, 34, "Input"],
Cell[279725, 5550, 1714, 26, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[281476, 5581, 445, 11, 32, "Input"],
Cell[281924, 5594, 205, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[282178, 5603, 282, 3, 31, "Subsubsubsection"],
Cell[282463, 5608, 112, 2, 32, "Input"],
Cell[282578, 5612, 81, 2, 34, "Input"],
Cell[282662, 5616, 79, 2, 34, "Input"],
Cell[282744, 5620, 437, 10, 34, "Input"],
Cell[283184, 5632, 364, 8, 34, "Input"],
Cell[283551, 5642, 349, 9, 34, "Input"],
Cell[CellGroupData[{
Cell[283925, 5655, 253, 5, 34, "Input"],
Cell[284181, 5662, 1851, 28, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[286069, 5695, 453, 10, 34, "Input"],
Cell[286525, 5707, 1846, 28, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[288408, 5740, 476, 11, 32, "Input"],
Cell[288887, 5753, 208, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[289144, 5762, 282, 3, 31, "Subsubsubsection"],
Cell[289429, 5767, 70, 1, 32, "Input"],
Cell[289502, 5770, 81, 2, 34, "Input"],
Cell[289586, 5774, 79, 2, 34, "Input"],
Cell[289668, 5778, 389, 10, 34, "Input"],
Cell[290060, 5790, 402, 9, 57, "Input"],
Cell[290465, 5801, 398, 9, 34, "Input"],
Cell[CellGroupData[{
Cell[290888, 5814, 368, 8, 34, "Input"],
Cell[291259, 5824, 1734, 26, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[293030, 5855, 441, 11, 32, "Input"],
Cell[293474, 5868, 212, 3, 32, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[293735, 5877, 283, 3, 31, "Subsubsubsection"],
Cell[294021, 5882, 81, 2, 34, "Input"],
Cell[294105, 5886, 79, 2, 34, "Input"],
Cell[294187, 5890, 221, 7, 34, "Input"],
Cell[294411, 5899, 313, 8, 34, "Input"],
Cell[294727, 5909, 321, 7, 34, "Input"],
Cell[CellGroupData[{
Cell[295073, 5920, 357, 8, 34, "Input"],
Cell[295433, 5930, 1641, 24, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[297111, 5959, 383, 10, 32, "Input"],
Cell[297497, 5971, 205, 3, 32, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

